{"ast":null,"code":"var activeAudioContext = require('./active-audio-context'); //\n// Support for audio depends on three things: support for Promise, support for AudioContext, and support for AudioContext.resume.\n// Unfortunately, AudioContext.resume cannot be detected unless an AudioContext is created, and creating an AudioContext can't\n// be done until a user click, so there is no way to know for sure if audio is supported until the user tries.\n// We can get close, though - we can test for Promises and AudioContext - there are just a few evergreen browsers that supported\n// that before supporting resume, so we'll test what we can.\n// The best use of this routine is to call it before doing any audio related stuff to decide whether to bother.\n// But then, call it again after a user interaction to test for resume.\n\n\nfunction supportsAudio() {\n  var aac = activeAudioContext();\n  if (aac) return aac.resume !== undefined;\n  if (!window.Promise) return false;\n  return window.AudioContext || window.webkitAudioContext || navigator.mozAudioContext || navigator.msAudioContext;\n}\n\nmodule.exports = supportsAudio;","map":{"version":3,"sources":["/home/elad/Desktop/Repos/drums-trainer/frontend/node_modules/react-sheet-music/node_modules/abcjs/src/synth/supports-audio.js"],"names":["activeAudioContext","require","supportsAudio","aac","resume","undefined","window","Promise","AudioContext","webkitAudioContext","navigator","mozAudioContext","msAudioContext","module","exports"],"mappings":"AAAA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,wBAAD,CAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,SAASC,aAAT,GAAyB;AACxB,MAAIC,GAAG,GAAGH,kBAAkB,EAA5B;AACA,MAAIG,GAAJ,EACC,OAAOA,GAAG,CAACC,MAAJ,KAAeC,SAAtB;AAED,MAAI,CAACC,MAAM,CAACC,OAAZ,EACC,OAAO,KAAP;AAED,SAAOD,MAAM,CAACE,YAAP,IACNF,MAAM,CAACG,kBADD,IAENC,SAAS,CAACC,eAFJ,IAGND,SAAS,CAACE,cAHX;AAIA;;AAEDC,MAAM,CAACC,OAAP,GAAiBZ,aAAjB","sourcesContent":["var activeAudioContext = require('./active-audio-context');\n\n//\n// Support for audio depends on three things: support for Promise, support for AudioContext, and support for AudioContext.resume.\n// Unfortunately, AudioContext.resume cannot be detected unless an AudioContext is created, and creating an AudioContext can't\n// be done until a user click, so there is no way to know for sure if audio is supported until the user tries.\n// We can get close, though - we can test for Promises and AudioContext - there are just a few evergreen browsers that supported\n// that before supporting resume, so we'll test what we can.\n\n// The best use of this routine is to call it before doing any audio related stuff to decide whether to bother.\n// But then, call it again after a user interaction to test for resume.\n\nfunction supportsAudio() {\n\tvar aac = activeAudioContext();\n\tif (aac)\n\t\treturn aac.resume !== undefined;\n\n\tif (!window.Promise)\n\t\treturn false;\n\n\treturn window.AudioContext ||\n\t\twindow.webkitAudioContext ||\n\t\tnavigator.mozAudioContext ||\n\t\tnavigator.msAudioContext;\n}\n\nmodule.exports = supportsAudio;\n"]},"metadata":{},"sourceType":"script"}