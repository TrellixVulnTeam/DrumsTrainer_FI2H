{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport convert from 'xml-js';\nimport Vex from 'vexflow';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar styles = {\n  \"button\": \"_bv_7k\"\n};\n\nvar Button = function Button(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      id = _ref.id,\n      onClick = _ref.onClick;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    disabled: disabled,\n    id: id,\n    className: styles.button + \" \" + className,\n    onClick: onClick\n  }, children);\n};\n\nvar styles$1 = {\n  \"toggleButton\": \"_1evAO\",\n  \"checked\": \"_1kQkK\"\n};\n\nvar ToggleButton = function ToggleButton(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      id = _ref.id,\n      checked = _ref.checked,\n      onClick = _ref.onClick,\n      disabled = _ref.disabled;\n\n  if (checked) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      id: id,\n      className: styles$1.toggleButton + \" \" + styles$1.checked + \" \" + className,\n      onClick: onClick\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    disabled: disabled,\n    className: styles$1.toggleButton + \" \" + className,\n    onClick: onClick\n  }, children);\n};\n\nvar styles$2 = {\n  \"buttonGroup\": \"_1y24Q\"\n};\n\nvar ButtonGroup = function ButtonGroup(_ref) {\n  var children = _ref.children,\n      className = _ref.className;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles$2.buttonGroup + \" \" + className\n  }, children);\n};\n\nvar styles$3 = {\n  \"navbar\": \"_3P9CF\"\n};\n\nvar Navbar = function Navbar(_ref) {\n  var children = _ref.children,\n      className = _ref.className;\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: styles$3.navbar + \" \" + className\n  }, children);\n};\n\nvar styles$4 = {\n  \"form\": \"_2yCLu\",\n  \"timeInput\": \"_26sDs\",\n  \"formcontainer\": \"_eki4G\"\n};\n\nvar Dropdown = function Dropdown(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      id = _ref.id,\n      onChange = _ref.onChange;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: styles$4.form,\n    onChange: onChange\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: id,\n    className: className\n  }, children));\n};\n\nvar ReactDomServer = require('react-dom/server');\n\nvar xmlString = function xmlString(measures) {\n  return \"\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE score-partwise PUBLIC \\\"-//Recordare//DTD MusicXML 2.0 Partwise//EN\\\" \\\"http://www.musicxml.org/dtds/partwise.dtd\\\">\\n\\n<score-partwise version=\\\"2.0\\\">\\n    <movement-title>Test</movement-title>\\n    <identification>\\n        <encoding>\\n            <software>Caesura</software>\\n            <encoding-date>2020-10-10</encoding-date>\\n            <supports attribute=\\\"new-system\\\" element=\\\"print\\\" type=\\\"yes\\\" value=\\\"yes\\\"/>\\n            <supports attribute=\\\"new-page\\\" element=\\\"print\\\" type=\\\"yes\\\" value=\\\"yes\\\"/>\\n        </encoding>\\n    </identification>\\n    <defaults>\\n        <scaling>\\n            <millimeters>7.540625</millimeters>\\n            <tenths>40</tenths>\\n        </scaling>\\n        <page-layout>\\n            <page-height>1481</page-height>\\n            <page-width>1145</page-width>\\n            <page-margins type=\\\"both\\\">\\n                <left-margin>58</left-margin>\\n                <right-margin>58</right-margin>\\n                <top-margin>66</top-margin>\\n                <bottom-margin>66</bottom-margin>\\n            </page-margins>\\n        </page-layout>\\n        <system-layout>\\n            <system-margins>\\n                <left-margin>225</left-margin>\\n                <right-margin>0</right-margin>\\n            </system-margins>\\n            <system-distance>96</system-distance>\\n            <top-system-distance>96</top-system-distance>\\n        </system-layout>\\n        <staff-layout>\\n            <staff-distance>0</staff-distance>\\n        </staff-layout>\\n    </defaults>\\n    <part-list>\\n        <score-part id=\\\"P1\\\">\\n            <part-name>Grand Piano</part-name>\\n        </score-part>\\n    </part-list>\\n    <part id=\\\"P1\\\">\\n      \" + measures + \"\\n    </part>\\n</score-partwise>\\n\";\n};\n\nvar Measure = function Measure(props) {\n  return React.createElement('measure', props);\n};\n\nvar measureToXML = function measureToXML(measure) {\n  return ReactDomServer.renderToStaticMarkup( /*#__PURE__*/React.createElement(Measure, {\n    number: measure.index\n  }, measure.attributes && attributesToXML(measure.attributes), measure.notes.map(function (note) {\n    return noteToXML(note);\n  })));\n};\n\nvar Note = function Note(props) {\n  return React.createElement('note', props);\n};\n\nvar Chord = function Chord(props) {\n  return React.createElement('chord', props);\n};\n\nvar Pitch = function Pitch(props) {\n  return React.createElement('pitch', props);\n};\n\nvar Step = function Step(props) {\n  return React.createElement('step', props);\n};\n\nvar Alter = function Alter(props) {\n  return React.createElement('alter', props);\n};\n\nvar Octave = function Octave(props) {\n  return React.createElement('octave', props);\n};\n\nvar Duration = function Duration(props) {\n  return React.createElement('duration', props);\n};\n\nvar Voice = function Voice(props) {\n  return React.createElement('voice', props);\n};\n\nvar Type = function Type(props) {\n  return React.createElement('type', props);\n};\n\nvar Tie = function Tie(props) {\n  return React.createElement('tie', props);\n};\n\nvar Stem = function Stem(props) {\n  return React.createElement('stem', props);\n};\n\nvar Staff = function Staff(props) {\n  return React.createElement('staff', props);\n};\n\nvar Notations = function Notations(props) {\n  return React.createElement('notations', props);\n};\n\nvar Dot = function Dot(props) {\n  return React.createElement('dot', props);\n};\n\nvar Rest = function Rest(props) {\n  return React.createElement('rest', props);\n};\n\nvar Tied = function Tied(props) {\n  return React.createElement('tied', props);\n};\n\nvar Beam = function Beam(props) {\n  return React.createElement('beam', props);\n};\n\nvar noteToXML = function noteToXML(note) {\n  return /*#__PURE__*/React.createElement(Note, null, note.chord && /*#__PURE__*/React.createElement(Chord, null), /*#__PURE__*/React.createElement(Pitch, null, /*#__PURE__*/React.createElement(Step, null, note.pitch.step), /*#__PURE__*/React.createElement(Alter, null, note.pitch.alter), /*#__PURE__*/React.createElement(Octave, null, note.pitch.octave)), note.rest && /*#__PURE__*/React.createElement(Rest, null), /*#__PURE__*/React.createElement(Duration, null, note.duration), /*#__PURE__*/React.createElement(Voice, null, \"1\"), note.dotted && /*#__PURE__*/React.createElement(Dot, null), /*#__PURE__*/React.createElement(Type, null, note.type), /*#__PURE__*/React.createElement(Beam, {\n    number: \"1\"\n  }, note.beam), /*#__PURE__*/React.createElement(Tie, {\n    type: note.tie\n  }), /*#__PURE__*/React.createElement(Stem, null, \"up\"), /*#__PURE__*/React.createElement(Staff, null, \"1\"), note.notations ? /*#__PURE__*/React.createElement(Notations, null, /*#__PURE__*/React.createElement(Tied, {\n    orientation: \"over\",\n    type: note.notations.tied\n  })) : null);\n};\n\nvar Attributes = function Attributes(props) {\n  return React.createElement('attributes', props);\n};\n\nvar Divisions = function Divisions(props) {\n  return React.createElement('divisions', props);\n};\n\nvar Key = function Key(props) {\n  return React.createElement('key', props);\n};\n\nvar Fifths = function Fifths(props) {\n  return React.createElement('fifths', props);\n};\n\nvar Mode = function Mode(props) {\n  return React.createElement('mode', props);\n};\n\nvar Time = function Time(props) {\n  return React.createElement('time', props);\n};\n\nvar Beats = function Beats(props) {\n  return React.createElement('beats', props);\n};\n\nvar BeatType = function BeatType(props) {\n  return React.createElement('beat-type', props);\n};\n\nvar Clef = function Clef(props) {\n  return React.createElement('clef', props);\n};\n\nvar Sign = function Sign(props) {\n  return React.createElement('sign', props);\n};\n\nvar Line = function Line(props) {\n  return React.createElement('line', props);\n};\n\nvar attributesToXML = function attributesToXML(attributes) {\n  return /*#__PURE__*/React.createElement(Attributes, null, /*#__PURE__*/React.createElement(Divisions, null, attributes.divisions), /*#__PURE__*/React.createElement(Key, null, /*#__PURE__*/React.createElement(Fifths, null, attributes.key.fifths), /*#__PURE__*/React.createElement(Mode, null, attributes.key.mode)), /*#__PURE__*/React.createElement(Time, null, /*#__PURE__*/React.createElement(Beats, null, attributes.time.beats), /*#__PURE__*/React.createElement(BeatType, null, attributes.time.beatType)), /*#__PURE__*/React.createElement(Clef, null, /*#__PURE__*/React.createElement(Sign, null, attributes.clef.sign), /*#__PURE__*/React.createElement(Line, null, attributes.clef.line)));\n};\n\nvar xmlDurationToVFMap = {\n  maxima: null,\n  \"long\": null,\n  breve: null,\n  whole: 'w',\n  half: 'h',\n  quarter: 'q',\n  eighth: '8',\n  '16th': '16',\n  '32nd': '32',\n  '64th': '64',\n  '128th': '128',\n  '256th': '256',\n  '512th': '512',\n  '1024th': '1024'\n};\n\nvar xmlDurationToVF = function xmlDurationToVF(xmlDuration, isRest) {\n  if (isRest === void 0) {\n    isRest = false;\n  }\n\n  var restAddition = isRest ? 'r' : '';\n  var vfDuration = xmlDurationToVFMap[xmlDuration] + restAddition;\n\n  if (!vfDuration) {\n    throw new Error(\"Note duration \" + xmlDuration + \" wasn't found or unsupported\");\n  }\n\n  return vfDuration;\n};\n\nvar xmlFifthsToKeyMap = {\n  '-7': 'Cb',\n  '-6': 'Gb',\n  '-5': 'Db',\n  '-4': 'Ab',\n  '-3': 'Eb',\n  '-2': 'Bb',\n  '-1': 'F',\n  '0': 'C',\n  '1': 'G',\n  '2': 'D',\n  '3': 'A',\n  '4': 'E',\n  '5': 'B',\n  '6': 'F#',\n  '7': 'C#'\n};\n\nvar xmlFifthsToKey = function xmlFifthsToKey(xmlFifths) {\n  return xmlFifthsToKeyMap[xmlFifths];\n};\n\nvar xmlKeyToFifths = function xmlKeyToFifths(xmlKey) {\n  var key = Object.keys(xmlFifthsToKeyMap).find(function (k) {\n    return xmlFifthsToKeyMap[k] === xmlKey;\n  });\n  return parseInt(key);\n};\n\nvar getAccidental = {\n  '-7': 'bbbbbbb',\n  '-6': 'bbbbbb',\n  '-5': 'bbbbb',\n  '-4': 'bbbb',\n  '-3': 'bbb',\n  '-2': 'bb',\n  '-1': 'b',\n  '0': '',\n  '1': '#',\n  '2': '##',\n  '3': '###',\n  '4': '####',\n  '5': '#####',\n  '6': '######',\n  '7': '#######'\n};\nvar xmlSignToClefMap = {\n  G: 'treble',\n  F: 'bass'\n};\n\nvar xmlSignToClef = function xmlSignToClef(xmlSign) {\n  return xmlSignToClefMap[xmlSign];\n};\n\nvar xmlMeasureToJS = function xmlMeasureToJS(measure) {\n  var measuresArray = measure && measure.length ? measure : [measure];\n  var measureObjs = measuresArray.map(function (m) {\n    var note = m && m['note'];\n\n    if (!note) {\n      return {\n        index: m._attributes.number,\n        attributes: m && m.attributes && {\n          clef: m.attributes.clef.sign._text,\n          keySignature: m.attributes.key.fifths._text,\n          beats: m.attributes.time.beats._text,\n          beatType: m.attributes.time['beat-type']._text\n        }\n      };\n    }\n\n    var notes = note && note.length ? note : [note];\n    return {\n      index: m._attributes.number,\n      attributes: m && m.attributes && {\n        clef: m.attributes.clef.sign._text,\n        keySignature: m.attributes.key.fifths._text,\n        beats: m.attributes.time.beats._text,\n        beatType: m.attributes.time['beat-type']._text\n      },\n      note: notes && notes.map(function (note) {\n        return {\n          chord: note.chord ? true : false,\n          pitch: note.pitch.step._text + (\"/\" + note.pitch.octave._text),\n          rest: note.rest ? true : false,\n          type: note.type._text,\n          alter: note.pitch.alter && note.pitch.alter._text,\n          dotted: note.dot ? true : false,\n          beam: note.beam && note.beam._text,\n          tie: note.tie && note.tie._attributes && note.tie._attributes.type\n        };\n      })\n    };\n  });\n  return measureObjs;\n};\n\nvar musicXMLToJS = function musicXMLToJS(xml) {\n  if (xml) {\n    try {\n      var result = convert.xml2js(xml, {\n        compact: true\n      });\n\n      if (result && result['score-partwise']) {\n        var partwise = result['score-partwise'];\n        var part = partwise && partwise['part'];\n        var partList = partwise && partwise['part-list'];\n        var scorePart = partList && partList['score-part'];\n        var partName = scorePart && scorePart['part-name'];\n        var movementTitle = partwise && partwise['movement-title'];\n        var measure = part && part['measure'];\n        return {\n          partWise: {\n            defaults: 'Not Supported Yet!',\n            identification: 'Not Supported Yet!',\n            movementTitle: movementTitle._text,\n            partList: {\n              scorePart: {\n                id: scorePart._attributes && scorePart._attributes.id,\n                partName: partName._text\n              }\n            },\n            part: {\n              id: part._attributes && part._attributes.id,\n              measure: xmlMeasureToJS(measure)\n            },\n            version: partwise._attributes && partwise._attributes.version\n          }\n        };\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n};\n\nvar styles$5 = {\n  \"noteButton\": \"_2gH6y\"\n};\n\nvar NoteText = function NoteText(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"span\", null, children);\n};\n\nvar NoteButton = function NoteButton(_ref2) {\n  var noteType = _ref2.noteType,\n      onClick = _ref2.onClick,\n      current = _ref2.current,\n      isRest = _ref2.isRest,\n      _ref2$className = _ref2.className,\n      className = _ref2$className === void 0 ? '' : _ref2$className;\n  var glyph;\n\n  switch (noteType) {\n    case 'whole':\n      glyph = isRest ? /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD3B\") : /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD5D\");\n      break;\n\n    case 'half':\n      glyph = isRest ? /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD3C\") : /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD5E\");\n      break;\n\n    case 'quarter':\n      glyph = isRest ? /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD3D\") : /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD5F\");\n      break;\n\n    case 'eighth':\n      glyph = isRest ? /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD3E\") : /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD60\");\n      break;\n\n    case '16th':\n      glyph = isRest ? /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD3F\") : /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD61\");\n      break;\n\n    case '32nd':\n      glyph = isRest ? /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD40\") : /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD62\");\n      break;\n\n    case '64th':\n      glyph = isRest ? /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD41\") : /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD63\");\n      break;\n\n    case '128th':\n      glyph = isRest ? /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD42\") : /*#__PURE__*/React.createElement(NoteText, null, \"\\uD834\\uDD64\");\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(ToggleButton, {\n    checked: current === noteType,\n    onClick: onClick,\n    className: className,\n    id: \"noteButton-\" + noteType\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles$5.noteButton\n  }, glyph));\n};\n\nvar VexNotes = [{\n  note: \"c/0\",\n  alt: null\n}, {\n  note: \"c#/0\",\n  alt: \"db/0\"\n}, {\n  note: \"d/0\",\n  alt: null\n}, {\n  note: \"d#/0\",\n  alt: \"eb/0\"\n}, {\n  note: \"e/0\",\n  alt: null\n}, {\n  note: \"f/0\",\n  alt: null\n}, {\n  note: \"f#/0\",\n  alt: \"gb/0\"\n}, {\n  note: \"g/0\",\n  alt: null\n}, {\n  note: \"g#/0\",\n  alt: \"ab/0\"\n}, {\n  note: \"a/0\",\n  alt: null\n}, {\n  note: \"a#/0\",\n  alt: \"bb/0\"\n}, {\n  note: \"b/0\",\n  alt: null\n}, {\n  note: \"c/1\",\n  alt: null\n}, {\n  note: \"c#/1\",\n  alt: \"db/1\"\n}, {\n  note: \"d/1\",\n  alt: null\n}, {\n  note: \"d#/1\",\n  alt: \"eb/1\"\n}, {\n  note: \"e/1\",\n  alt: null\n}, {\n  note: \"f/1\",\n  alt: null\n}, {\n  note: \"f#/1\",\n  alt: \"gb/1\"\n}, {\n  note: \"g/1\",\n  alt: null\n}, {\n  note: \"g#/1\",\n  alt: \"ab/1\"\n}, {\n  note: \"a/1\",\n  alt: null\n}, {\n  note: \"a#/1\",\n  alt: \"bb/1\"\n}, {\n  note: \"b/1\",\n  alt: null\n}, {\n  note: \"c/2\",\n  alt: null\n}, {\n  note: \"c#/2\",\n  alt: \"db/2\"\n}, {\n  note: \"d/2\",\n  alt: null\n}, {\n  note: \"d#/2\",\n  alt: \"eb/2\"\n}, {\n  note: \"e/2\",\n  alt: null\n}, {\n  note: \"f/2\",\n  alt: null\n}, {\n  note: \"f#/2\",\n  alt: \"gb/2\"\n}, {\n  note: \"g/2\",\n  alt: null\n}, {\n  note: \"g#/2\",\n  alt: \"ab/2\"\n}, {\n  note: \"a/2\",\n  alt: null\n}, {\n  note: \"a#/2\",\n  alt: \"bb/2\"\n}, {\n  note: \"b/2\",\n  alt: null\n}, {\n  note: \"c/3\",\n  alt: null\n}, {\n  note: \"c#/3\",\n  alt: \"db/3\"\n}, {\n  note: \"d/3\",\n  alt: null\n}, {\n  note: \"d#/3\",\n  alt: \"eb/3\"\n}, {\n  note: \"e/3\",\n  alt: null\n}, {\n  note: \"f/3\",\n  alt: null\n}, {\n  note: \"f#/3\",\n  alt: \"gb/3\"\n}, {\n  note: \"g/3\",\n  alt: null\n}, {\n  note: \"g#/3\",\n  alt: \"ab/3\"\n}, {\n  note: \"a/3\",\n  alt: null\n}, {\n  note: \"a#/3\",\n  alt: \"bb/3\"\n}, {\n  note: \"b/3\",\n  alt: null\n}, {\n  note: \"c/4\",\n  alt: null\n}, {\n  note: \"c#/4\",\n  alt: \"db/4\"\n}, {\n  note: \"d/4\",\n  alt: null\n}, {\n  note: \"d#/4\",\n  alt: \"eb/4\"\n}, {\n  note: \"e/4\",\n  alt: null\n}, {\n  note: \"f/4\",\n  alt: null\n}, {\n  note: \"f#/4\",\n  alt: \"gb/4\"\n}, {\n  note: \"g/4\",\n  alt: null\n}, {\n  note: \"g#/4\",\n  alt: \"ab/4\"\n}, {\n  note: \"a/4\",\n  alt: null\n}, {\n  note: \"a#/4\",\n  alt: \"bb/4\"\n}, {\n  note: \"b/4\",\n  alt: null\n}, {\n  note: \"c/5\",\n  alt: null\n}, {\n  note: \"c#/5\",\n  alt: \"db/5\"\n}, {\n  note: \"d/5\",\n  alt: null\n}, {\n  note: \"d#/5\",\n  alt: \"eb/5\"\n}, {\n  note: \"e/5\",\n  alt: null\n}, {\n  note: \"f/5\",\n  alt: null\n}, {\n  note: \"f#/5\",\n  alt: \"gb/5\"\n}, {\n  note: \"g/5\",\n  alt: null\n}, {\n  note: \"g#/5\",\n  alt: \"ab/5\"\n}, {\n  note: \"a/5\",\n  alt: null\n}, {\n  note: \"a#/5\",\n  alt: \"bb/5\"\n}, {\n  note: \"b/5\",\n  alt: null\n}, {\n  note: \"c/6\",\n  alt: null\n}, {\n  note: \"c#/6\",\n  alt: \"db/6\"\n}, {\n  note: \"d/6\",\n  alt: null\n}, {\n  note: \"d#/6\",\n  alt: \"eb/6\"\n}, {\n  note: \"e/6\",\n  alt: null\n}, {\n  note: \"f/6\",\n  alt: null\n}, {\n  note: \"f#/6\",\n  alt: \"gb/6\"\n}, {\n  note: \"g/6\",\n  alt: null\n}, {\n  note: \"g#/6\",\n  alt: \"ab/6\"\n}, {\n  note: \"a/6\",\n  alt: null\n}, {\n  note: \"a#/6\",\n  alt: \"bb/6\"\n}, {\n  note: \"b/6\",\n  alt: null\n}];\nvar newGNotes = [{\n  note: \"b/2\",\n  alt: null\n}, {\n  note: \"c/3\",\n  alt: null\n}, {\n  note: \"d/3\",\n  alt: null\n}, {\n  note: \"e/3\",\n  alt: null\n}, {\n  note: \"f/3\",\n  alt: null\n}, {\n  note: \"g/3\",\n  alt: null\n}, {\n  note: \"a/3\",\n  alt: null\n}, {\n  note: \"b/3\",\n  alt: null\n}, {\n  note: \"c/4\",\n  alt: null\n}, {\n  note: \"d/4\",\n  alt: null\n}, {\n  note: \"e/4\",\n  alt: null\n}, {\n  note: \"f/4\",\n  alt: null\n}, {\n  note: \"g/4\",\n  alt: null\n}, {\n  note: \"a/4\",\n  alt: null\n}, {\n  note: \"b/4\",\n  alt: null\n}, {\n  note: \"c/5\",\n  alt: null\n}, {\n  note: \"d/5\",\n  alt: null\n}, {\n  note: \"e/5\",\n  alt: null\n}, {\n  note: \"f/5\",\n  alt: null\n}, {\n  note: \"g/5\",\n  alt: null\n}, {\n  note: \"a/5\",\n  alt: null\n}, {\n  note: \"b/6\",\n  alt: null\n}, {\n  note: \"c/6\",\n  alt: null\n}, {\n  note: \"d/6\",\n  alt: null\n}, {\n  note: \"e/6\",\n  alt: null\n}, {\n  note: \"f/6\",\n  alt: null\n}, {\n  note: \"g/6\",\n  alt: null\n}].reverse();\nvar newFNotes = [{\n  note: \"c/1\",\n  alt: null\n}, {\n  note: \"d/1\",\n  alt: null\n}, {\n  note: \"e/1\",\n  alt: null\n}, {\n  note: \"f/1\",\n  alt: null\n}, {\n  note: \"g/1\",\n  alt: null\n}, {\n  note: \"a/1\",\n  alt: null\n}, {\n  note: \"b/1\",\n  alt: null\n}, {\n  note: \"c/2\",\n  alt: null\n}, {\n  note: \"d/2\",\n  alt: null\n}, {\n  note: \"e/2\",\n  alt: null\n}, {\n  note: \"f/2\",\n  alt: null\n}, {\n  note: \"g/2\",\n  alt: null\n}, {\n  note: \"a/2\",\n  alt: null\n}, {\n  note: \"b/2\",\n  alt: null\n}, {\n  note: \"c/3\",\n  alt: null\n}, {\n  note: \"d/3\",\n  alt: null\n}, {\n  note: \"e/3\",\n  alt: null\n}, {\n  note: \"f/3\",\n  alt: null\n}, {\n  note: \"g/3\",\n  alt: null\n}, {\n  note: \"a/3\",\n  alt: null\n}, {\n  note: \"b/3\",\n  alt: null\n}, {\n  note: \"c/4\",\n  alt: null\n}, {\n  note: \"d/4\",\n  alt: null\n}, {\n  note: \"e/4\",\n  alt: null\n}, {\n  note: \"f/4\",\n  alt: null\n}, {\n  note: \"g/4\",\n  alt: null\n}, {\n  note: \"a/4\",\n  alt: null\n}, {\n  note: \"b/4\",\n  alt: null\n}].reverse();\n\nvar canBeamNote = function canBeamNote(noteType) {\n  if (noteType === \"eighth\" || noteType === \"16th\" || noteType === \"32nd\") {\n    return true;\n  }\n\n  return false;\n};\n\nvar majorScales = {\n  C: [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"],\n  G: [\"g\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f#\"],\n  D: [\"d\", \"e\", \"f#\", \"g\", \"a\", \"b\", \"c#\"],\n  A: [\"a\", \"b\", \"c#\", \"d\", \"e\", \"f#\", \"g#\"],\n  E: [\"e\", \"f#\", \"g#\", \"a\", \"b\", \"c#\", \"d#\"],\n  B: [\"b\", \"c#\", \"d#\", \"e\", \"f#\", \"g#\", \"a#\"],\n  \"F#\": [\"f#\", \"g#\", \"a#\", \"b\", \"c#\", \"d#\", \"e\"],\n  \"C#\": [\"c#\", \"d#\", \"e\", \"f#\", \"g#\", \"a#\", \"b#\"],\n  F: [\"f\", \"g\", \"a\", \"bb\", \"c\", \"d\", \"e\"],\n  Bb: [\"bb\", \"c\", \"d\", \"eb\", \"f\", \"g\", \"a\"],\n  Eb: [\"eb\", \"f\", \"g\", \"ab\", \"bb\", \"c\", \"d\"],\n  Ab: [\"ab\", \"bb\", \"c\", \"db\", \"eb\", \"f\", \"g\"],\n  Db: [\"db\", \"eb\", \"f\", \"gb\", \"ab\", \"bb\", \"c\"],\n  Gb: [\"gb\", \"ab\", \"bb\", \"cb\", \"db\", \"eb\", \"f\"],\n  Cb: [\"c\", \"db\", \"eb\", \"fb\", \"gb\", \"ab\", \"bb\"]\n};\nvar minorScales = {\n  Am: [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"],\n  Em: [\"g\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f#\"],\n  Bm: [\"d\", \"e\", \"f#\", \"g\", \"a\", \"b\", \"c#\"],\n  \"F#m\": [\"a\", \"b\", \"c#\", \"d\", \"e\", \"f#\", \"g#\"],\n  \"C#m\": [\"e\", \"f#\", \"g#\", \"a\", \"b\", \"c#\", \"d#\"],\n  \"G#m\": [\"b\", \"c#\", \"d#\", \"e\", \"f#\", \"g#\", \"a#\"],\n  \"D#m\": [\"f#\", \"g#\", \"a#\", \"b\", \"c#\", \"d#\", \"e\"],\n  Dm: [\"f\", \"g\", \"a\", \"bb\", \"c\", \"d\", \"e\"],\n  Gm: [\"bb\", \"c\", \"d\", \"eb\", \"f\", \"g\", \"a\"],\n  Cm: [\"eb\", \"f\", \"g\", \"ab\", \"bb\", \"c\", \"d\"],\n  Fm: [\"ab\", \"bb\", \"c\", \"db\", \"eb\", \"f\", \"g\"],\n  Bbm: [\"db\", \"eb\", \"f\", \"gb\", \"ab\", \"bb\", \"c\"],\n  Ebm: [\"gb\", \"ab\", \"bb\", \"cb\", \"db\", \"eb\", \"f\"]\n};\nvar VF = Vex.Flow;\nvar Renderer = VF.Renderer;\n\nfunction getCoords(e, svg, svgPt) {\n  svgPt.x = e.clientX;\n  svgPt.y = e.clientY;\n  var svgCoords = svgPt.matrixTransform(svg.getScreenCTM().inverse());\n  return {\n    x: svgCoords.x,\n    y: svgCoords.y\n  };\n}\n\nvar MusicXMLSheet = function MusicXMLSheet(_ref) {\n  var id = _ref.id,\n      xml = _ref.xml,\n      _ref$selectedNote = _ref.selectedNote,\n      selectedNote = _ref$selectedNote === void 0 ? null : _ref$selectedNote,\n      _ref$setSelectedNote = _ref.setSelectedNote,\n      setSelectedNote = _ref$setSelectedNote === void 0 ? null : _ref$setSelectedNote,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,\n      _ref$toggleReadOnly = _ref.toggleReadOnly,\n      toggleReadOnly = _ref$toggleReadOnly === void 0 ? null : _ref$toggleReadOnly,\n      _ref$noteType = _ref.noteType,\n      noteType = _ref$noteType === void 0 ? null : _ref$noteType,\n      _ref$appendNote = _ref.appendNote,\n      appendNote = _ref$appendNote === void 0 ? null : _ref$appendNote,\n      _ref$accidental = _ref.accidental,\n      accidental = _ref$accidental === void 0 ? null : _ref$accidental,\n      _ref$isRest = _ref.isRest,\n      isRest = _ref$isRest === void 0 ? false : _ref$isRest,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      _ref$playNotesCompone = _ref.playNotesComponent,\n      playNotesComponent = _ref$playNotesCompone === void 0 ? null : _ref$playNotesCompone;\n  var partWise = xml.partWise;\n  var measures = partWise.part.measure;\n\n  var _useState = useState({\n    measure: null,\n    note: null\n  }),\n      highlightIndex = _useState[0],\n      setHightlightIndex = _useState[1];\n\n  var _useState2 = useState(xmlFifthsToKey(measures[0].attributes.keySignature)),\n      keySignature = _useState2[0],\n      setKeySignature = _useState2[1];\n\n  var _useState3 = useState(null),\n      newNote = _useState3[0],\n      setNewNote = _useState3[1];\n\n  var _useState4 = useState(null),\n      hoveringNote = _useState4[0],\n      setHoveringNote = _useState4[1];\n\n  var _useState5 = useState(null),\n      renderer = _useState5[0],\n      setRenderer = _useState5[1];\n\n  var _useState6 = useState(null),\n      context = _useState6[0],\n      setContext = _useState6[1];\n\n  var _useState7 = useState([]),\n      staves = _useState7[0],\n      setStaves = _useState7[1];\n\n  var container = useRef();\n  var formatter = new Vex.Flow.Formatter();\n  var clef = measures[0].attributes.clef;\n  var uiAvailableNotes = clef === 'G' ? newGNotes : newFNotes;\n\n  var handleClick = function handleClick(e) {\n    if (newNote) appendNote(newNote, accidental);else if (hoveringNote) {\n      var first = hoveringNote.newNote.note.pitch;\n      var second = hoveringNote.hoveringNote.keys;\n\n      if (second.includes(first)) {\n        setSelectedNote({\n          measureIndex: hoveringNote.measureIndex,\n          noteIndex: hoveringNote.noteIndex\n        });\n      } else {\n        appendNote(hoveringNote.newNote, accidental, hoveringNote);\n        setSelectedNote(null);\n      }\n    }\n    setNewNote(null);\n  };\n\n  var handleHover = function handleHover(e) {\n    if (context) {\n      var svgPoint = context.svg.createSVGPoint();\n      var coords = getCoords(e, context.svg, svgPoint);\n\n      if (coords.x !== lastCoords.x && coords.y !== lastCoords.y) {\n        lastCoords = coords;\n        staves.forEach(function (stave, index) {\n          var bb = stave.getBoundingBox();\n          var staveKeySig;\n\n          if (stave && stave.getModifiers && stave.getModifiers()[4]) {\n            staveKeySig = stave.getModifiers()[4]['keySpec'];\n          } else {\n            staveKeySig = keySignature;\n          }\n\n          var scale = _extends({}, majorScales, minorScales)[staveKeySig];\n\n          if (coords.x > bb.x && coords.x < bb.x + bb.w && coords.y > bb.y && coords.y < bb.y + bb.h) {\n            var mouseY = coords.y - bb.y;\n            var mouseX = coords.x - bb.x;\n            var noteArea = Math.round(mouseY / (stave.options.spacing_between_lines_px / 2));\n            var note = uiAvailableNotes[noteArea].note;\n            var alter = 0;\n\n            if (!scale.includes(note.slice(0, note.length - 2)) && !isRest && accidental !== 'n') {\n              var _fifths = xmlKeyToFifths(staveKeySig);\n\n              if (_fifths < 0) {\n                alter = -1;\n              } else if (_fifths > 0) {\n                alter = 1;\n              }\n            }\n\n            var newNewNote = {\n              measure: index,\n              note: {\n                pitch: note.toUpperCase(),\n                type: noteType,\n                alter: alter,\n                dotted: false,\n                beam: null\n              },\n              clef: clef === 'G' ? 'treble' : 'bass',\n              x: mouseX\n            };\n            var hoveringOverNote = false;\n            stave.voices && stave.voices.forEach(function (voice) {\n              var ticks = voice.getTickables();\n              ticks.forEach(function (tick, tickIndex) {\n                var tickBB = tick.getBoundingBox();\n\n                if (coords.x > tickBB.getX() && coords.x < tickBB.getX() + tickBB.getW()) {\n                  hoveringOverNote = true;\n                  setNewNote(null);\n                  setHoveringNote({\n                    measureIndex: index,\n                    hoveringNote: tick,\n                    newNote: newNewNote,\n                    noteIndex: tickIndex\n                  });\n                }\n              });\n            });\n\n            if (!hoveringOverNote && noteArea >= 0 && noteArea < uiAvailableNotes.length) {\n              setNewNote(newNewNote);\n              setHoveringNote(null);\n            }\n          }\n        });\n      }\n    }\n  };\n\n  var handleMouseLeave = function handleMouseLeave(e) {\n    setNewNote(null);\n  };\n\n  var lastCoords = {\n    x: 0,\n    y: 0\n  };\n  var fifths = xmlKeyToFifths(keySignature);\n  var width = 160 + Math.abs(fifths) * 20;\n  var height = 120;\n  var padding = 10;\n  var measuresPerLine = 4;\n  var lines = Math.ceil(measures.length / measuresPerLine) - 1;\n  var lengths = measures.map(function (measure) {\n    var length = measure.note && measure.note.length ? measure.note.length : 0;\n    return width + length * 15;\n  });\n  var lineLengths = lengths.slice(0, measuresPerLine);\n  var containerWidth = lineLengths.reduce(function (accum, current) {\n    return accum + current;\n  }, 0);\n  useEffect(function () {\n    if (!renderer && xml) {\n      setRenderer(new Renderer(container.current, Renderer.Backends.SVG));\n    } else if (renderer && xml && !context) {\n      if (!context) setContext(renderer.getContext());\n    }\n  });\n  useEffect(function () {\n    if (renderer && xml && context) {\n      renderer.resize(containerWidth + padding, height + height * lines);\n      var newLineIndex = 0;\n      var measureCount = 0;\n\n      try {\n        context.clear();\n        var allStaves = [];\n        measures.forEach(function (measure, measureIndex) {\n          var notes = measure.note;\n          var newAttributes = measure.attributes;\n          var notesLength = notes && notes.length || 0;\n          var prevMeasures = measures.slice(newLineIndex, measureIndex);\n          var prevLengths = prevMeasures.map(function (measure) {\n            var length = measure.note && measure.note.length ? measure.note.length : 0;\n            return width + length * 15;\n          });\n          var l = prevLengths.reduce(function (accum, current) {\n            return accum + current;\n          }, 0);\n          var x = measureCount === 0 ? 0 : l;\n          var y = newLineIndex / measuresPerLine * height;\n          var stave = new VF.Stave(x, y, width + notesLength * 15);\n          var attributes = measures[0].attributes;\n\n          if (measureCount === 0) {\n            newAttributes = attributes;\n          }\n\n          if (newAttributes) {\n            attributes = newAttributes;\n            var _attributes = attributes,\n                _clef = _attributes.clef,\n                _keySignature = _attributes.keySignature,\n                beats = _attributes.beats,\n                beatType = _attributes.beatType;\n\n            if (_clef) {\n              stave.addClef(xmlSignToClef(_clef)).addTimeSignature(beats + \"/\" + beatType);\n              var vfKeySig = xmlFifthsToKey(_keySignature);\n              stave.setKeySignature(vfKeySig, vfKeySig);\n              setKeySignature(vfKeySig);\n            }\n          }\n\n          measureCount += 1;\n\n          if (measureCount === measuresPerLine) {\n            measureCount = 0;\n            newLineIndex += measuresPerLine;\n          }\n\n          stave.setContext(context).draw();\n          allStaves.push(stave);\n          var beams = [];\n          var newBeam = [];\n          var ties = [];\n          var newTie = {};\n          var tieStarted = false;\n          var vexNotes = [];\n\n          var getNext = function getNext(current, noteIndex) {\n            var next = notes[noteIndex + 1];\n\n            if (next && next.chord) {\n              return [current].concat(getNext(next, noteIndex + 1));\n            }\n\n            return [current];\n          };\n\n          if (notes) {\n            var selectIndex = 0;\n            notes.forEach(function (note, index, arr) {\n              if (!note.chord) {\n                var next = getNext(note, index);\n                var sortedNext = next.sort(function (a, b) {\n                  var aNoteIndex = VexNotes.findIndex(function (item) {\n                    return item.note === a.pitch.toLowerCase() || item.alt === a.pitch.toLowerCase();\n                  });\n                  var bNoteIndex = VexNotes.findIndex(function (item) {\n                    return item.note === b.pitch.toLowerCase() || item.alt === b.pitch.toLowerCase();\n                  });\n                  return aNoteIndex > bNoteIndex ? 1 : -1;\n                });\n                var pitches = sortedNext.map(function (note) {\n                  return note.pitch;\n                });\n                var staveNote = new VF.StaveNote({\n                  clef: clef === 'G' ? 'treble' : 'bass',\n                  keys: pitches,\n                  duration: xmlDurationToVF(note.type, note.rest),\n                  auto_stem: !note.beam\n                });\n\n                if (selectedNote && measureIndex === selectedNote.measureIndex && selectIndex === selectedNote.noteIndex) {\n                  staveNote.setStyle({\n                    fillStyle: '#2bcebb',\n                    strokeStyle: '#2bcebb'\n                  });\n                }\n\n                if (highlightIndex && measure.index === highlightIndex.measure && index === highlightIndex.note) {\n                  staveNote.setStyle({\n                    fillStyle: '#ce2cbd',\n                    strokeStyle: '#ce2cbd'\n                  });\n                }\n\n                var scale = _extends({}, majorScales, minorScales)[xmlFifthsToKey(attributes.keySignature)];\n\n                var n = note.pitch.slice(0, note.pitch.length - 2).toLowerCase();\n                var withAccidental = n + getAccidental[note.alter];\n\n                if (!scale.includes(withAccidental) && !note.rest) {\n                  var i = sortedNext.findIndex(function (item) {\n                    return item.pitch === note.pitch;\n                  });\n\n                  if (note.alter > 0) {\n                    staveNote.addAccidental(i, new VF.Accidental('#'));\n                  } else if (note.alter < 0) {\n                    staveNote.addAccidental(i, new VF.Accidental('b'));\n                  } else {\n                    staveNote.addAccidental(i, new VF.Accidental('n'));\n                  }\n                }\n\n                if (note.dotted) {\n                  staveNote.addDot(0);\n                }\n\n                if (note.beam && note.beam === 'begin') {\n                  newBeam.push(staveNote);\n                }\n\n                if (note.beam && note.beam === 'end' || note.beam && note.beam === 'begin' && index !== 0 && index === notes.length - 1) {\n                  newBeam.push(staveNote);\n                  beams.push(newBeam);\n                  newBeam = [];\n                }\n\n                if (note.tie && !tieStarted && note.tie === 'start') {\n                  newTie = {\n                    first_note: staveNote\n                  };\n                  tieStarted = true;\n                }\n\n                if (note.tie && note.tie === 'stop') {\n                  newTie = _extends({}, newTie, {\n                    last_note: staveNote\n                  });\n                  ties.push(newTie);\n                  newTie = {};\n                  tieStarted = false;\n                }\n\n                vexNotes.push(staveNote);\n                selectIndex += 1;\n              }\n            });\n          }\n\n          if (vexNotes.length > 0) {\n            var voice = new Vex.Flow.Voice({\n              num_beats: attributes.beats,\n              beat_value: attributes.beatType\n            }).setMode(Vex.Flow.Voice.Mode.SOFT);\n            voice.addTickables(vexNotes);\n            formatter.joinVoices([voice]).formatToStave([voice], stave, {\n              align_rests: true,\n              context: context\n            });\n            var allTies = ties.map(function (tie) {\n              return new VF.StaveTie({\n                first_note: tie.first_note,\n                last_note: tie.last_note,\n                first_indices: [0],\n                last_indices: [0]\n              });\n            });\n            var allBeams = beams.map(function (beamNotes) {\n              return new VF.Beam(beamNotes);\n            });\n            voice.draw(context, stave);\n            allBeams.forEach(function (b) {\n              b.setContext(context).draw();\n            });\n            allTies.forEach(function (t) {\n              t.setContext(context).draw();\n            });\n            stave.voices = [voice];\n          }\n        });\n        setStaves(allStaves);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }, [measures, renderer, context, newNote, selectedNote, highlightIndex]);\n  useEffect(function () {\n    if (newNote) {\n      var stave = staves[newNote.measure];\n      var uiNote = new VF.StaveNote({\n        keys: [newNote.note.pitch],\n        duration: xmlDurationToVF(newNote.note.type, isRest),\n        auto_stem: true,\n        clef: newNote.clef\n      });\n      uiNote.setStyle({\n        fillStyle: 'lightgrey',\n        strokeStyle: 'lightgrey'\n      });\n      var voice = new Vex.Flow.Voice({\n        num_beats: 4,\n        beat_value: 4\n      }).setMode(Vex.Flow.Voice.Mode.SOFT);\n      voice.addTickables([uiNote]);\n      formatter.joinVoices([voice]).formatToStave([voice], stave, {\n        align_rests: true,\n        context: context\n      });\n      uiNote.setXShift(uiNote.getX() + newNote.x - (newNote.measure === 0 || newNote.measure % measuresPerLine === 0 ? Math.abs(fifths) * 15 + 80 : 25));\n      voice.draw(context, stave);\n    }\n  }, [newNote]);\n  var PlayNotes = playNotesComponent;\n  return /*#__PURE__*/React.createElement(\"div\", null, readOnly ? /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    ref: container\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    ref: container,\n    onClick: handleClick,\n    onMouseMove: handleHover,\n    onMouseLeave: handleMouseLeave\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\"\n  }, playNotesComponent && /*#__PURE__*/React.createElement(PlayNotes, {\n    measures: measures,\n    setHightlightIndex: setHightlightIndex,\n    toggleReadOnly: toggleReadOnly\n  }), children));\n};\n\nvar BackspaceIcon = function BackspaceIcon() {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    \"fill-rule\": \"evenodd\",\n    d: \"M6.603 2h7.08a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-7.08a1 1 0 0 1-.76-.35L1 8l4.844-5.65A1 1 0 0 1 6.603 2zm7.08-1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zM5.829 5.146a.5.5 0 0 0 0 .708L7.976 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z\"\n  }));\n};\n\nvar PlusIcon = function PlusIcon() {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    \"fill-rule\": \"evenodd\",\n    d: \"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n  }));\n};\n\nvar ScoreEditor = function ScoreEditor(_ref) {\n  var _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,\n      _ref$createScore = _ref.createScore,\n      createScore = _ref$createScore === void 0 ? null : _ref$createScore,\n      _ref$createScoreLabel = _ref.createScoreLabel,\n      createScoreLabel = _ref$createScoreLabel === void 0 ? null : _ref$createScoreLabel,\n      _ref$notesCallback = _ref.notesCallback,\n      notesCallback = _ref$notesCallback === void 0 ? null : _ref$notesCallback,\n      _ref$scoreCallback = _ref.scoreCallback,\n      scoreCallback = _ref$scoreCallback === void 0 ? null : _ref$scoreCallback,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      _ref$playNotesCompone = _ref.playNotesComponent,\n      playNotesComponent = _ref$playNotesCompone === void 0 ? null : _ref$playNotesCompone;\n\n  var _useState = useState([{\n    index: 0,\n    notes: [],\n    attributes: {\n      divisions: 2,\n      key: {\n        fifths: 0,\n        mode: 'major'\n      },\n      time: {\n        beats: 4,\n        beatType: 4\n      },\n      clef: {\n        sign: 'G',\n        line: 2\n      }\n    }\n  }]),\n      measures = _useState[0],\n      setMeasures = _useState[1];\n\n  var _useState2 = useState(0),\n      currentMeasureIndex = _useState2[0],\n      setCurrentMeasureIndex = _useState2[1];\n\n  var _useState3 = useState(null),\n      selectedNote = _useState3[0],\n      setSelectedNote = _useState3[1];\n\n  var _useState4 = useState('whole'),\n      noteType = _useState4[0],\n      setNoteType = _useState4[1];\n\n  var _useState5 = useState(false),\n      isRest = _useState5[0],\n      setIsRest = _useState5[1];\n\n  var _useState6 = useState(null),\n      accidental = _useState6[0],\n      setAccidental = _useState6[1];\n\n  var _useState7 = useState(null),\n      beam = _useState7[0],\n      setBeam = _useState7[1];\n\n  var _useState8 = useState(false),\n      dotted = _useState8[0],\n      setDotted = _useState8[1];\n\n  var addMeasure = function addMeasure() {\n    var newIndex = currentMeasureIndex + 1;\n    var newMeasure = {\n      index: newIndex,\n      notes: [],\n      attributes: null\n    };\n    setMeasures([].concat(measures, [newMeasure]));\n    setCurrentMeasureIndex(newIndex);\n  };\n\n  var appendNote = function appendNote(vfNote, accidental, appendTo) {\n    if (appendTo === void 0) {\n      appendTo = null;\n    }\n\n    var note = vfNote.note,\n        measureIndex = vfNote.measure;\n\n    if (note && note.pitch) {\n      var alter = note.alter;\n\n      if (accidental === '#') {\n        alter += 1;\n      }\n\n      if (accidental === 'b') {\n        alter += -1;\n      }\n\n      var newMeasures = measures.map(function (measure) {\n        if (measure.index === measureIndex) {\n          if (appendTo) {\n            var newNote = {\n              chord: appendTo,\n              pitch: {\n                step: note.pitch[0],\n                alter: alter,\n                octave: note.pitch[note.pitch.length - 1]\n              },\n              rest: isRest,\n              duration: 1,\n              dotted: dotted,\n              type: note.type,\n              beam: beam\n            };\n            var newNotes = measure.notes;\n            var chordIndex = 0;\n            var i = 0;\n\n            while (chordIndex <= appendTo.noteIndex) {\n              if (!newNotes[i].chord) {\n                chordIndex += 1;\n              }\n\n              i++;\n            }\n\n            newNotes.splice(i + 1, 0, newNote);\n            return _extends({}, measure, {\n              notes: newNotes\n            });\n          }\n\n          return _extends({}, measure, {\n            notes: [].concat(measure.notes, [{\n              chord: appendTo,\n              pitch: {\n                step: note.pitch[0],\n                alter: alter,\n                octave: note.pitch[note.pitch.length - 1]\n              },\n              rest: isRest,\n              duration: 1,\n              dotted: dotted,\n              type: note.type,\n              beam: beam\n            }])\n          });\n        }\n\n        return measure;\n      });\n      setMeasures(newMeasures);\n      setSelectedNote({\n        measureIndex: currentMeasureIndex,\n        noteIndex: newMeasures[currentMeasureIndex].notes.length - 1\n      });\n\n      if (beam === 'end') {\n        setBeam(null);\n      }\n\n      if (notesCallback) {\n        notesCallback(newMeasures[currentMeasureIndex].notes, newMeasures[currentMeasureIndex].attributes.key);\n      }\n    }\n  };\n\n  var removeNote = function removeNote() {\n    if (selectedNote && measures[currentMeasureIndex] && measures[currentMeasureIndex].notes.length > 0) {\n      var note = measures[selectedNote.measureIndex].notes[selectedNote.noteIndex];\n\n      var getNext = function getNext(current, noteIndex) {\n        var next = measures[selectedNote.measureIndex].notes[noteIndex + 1];\n\n        if (next && next.chord) {\n          return [current].concat(getNext(next, noteIndex + 1));\n        }\n\n        return [current];\n      };\n\n      if (!note.chord) {\n        var nextNotes = getNext(note, selectedNote.noteIndex);\n\n        if (nextNotes.length > 1) {\n          nextNotes[1].chord = null;\n        }\n      }\n\n      var notesToRemove = [note];\n      setMeasures(measures.map(function (measure, measureIndex) {\n        if (measureIndex === selectedNote.measureIndex) {\n          return _extends({}, measure, {\n            notes: measure.notes.filter(function (n) {\n              return !notesToRemove.includes(n);\n            })\n          });\n        }\n\n        return measure;\n      }));\n      var newNoteIndex = measures[currentMeasureIndex].notes.length - 2;\n\n      if (newNoteIndex < 0) {\n        setSelectedNote(null);\n      } else {\n        setSelectedNote({\n          measureIndex: currentMeasureIndex,\n          noteIndex: newNoteIndex\n        });\n      }\n    } else if (measures[currentMeasureIndex] && measures[currentMeasureIndex].notes && measures[currentMeasureIndex].notes.length > 0) {\n      var newNotes = measures[currentMeasureIndex].notes.slice(0, -1);\n      setMeasures(measures.map(function (measure) {\n        if (measure.index === currentMeasureIndex) {\n          return _extends({}, measure, {\n            notes: newNotes\n          });\n        }\n\n        return measure;\n      }));\n      setSelectedNote({\n        measureIndex: currentMeasureIndex,\n        noteIndex: measures[currentMeasureIndex].notes.length - 2\n      });\n    } else if (measures.length > 1) {\n      var newMeasures = measures;\n      newMeasures.splice(currentMeasureIndex, 1);\n      setMeasures(newMeasures);\n      setCurrentMeasureIndex(currentMeasureIndex - 1);\n    }\n  };\n\n  var updateClef = function updateClef(e) {\n    var newValue = e.target.value;\n    setMeasures(measures.map(function (measure) {\n      if (measure.index === 0) {\n        return _extends({}, measure, {\n          attributes: _extends({}, attributes, {\n            clef: {\n              sign: newValue,\n              line: attributes.clef.line\n            }\n          })\n        });\n      }\n\n      return measure;\n    }));\n  };\n\n  var tieNote = function tieNote() {\n    setMeasures(measures.map(function (measure, measureIndex) {\n      if (measureIndex === selectedNote.measureIndex) {\n        return _extends({}, measure, {\n          notes: measure.notes.map(function (note, index) {\n            if (index === selectedNote.noteIndex) {\n              if (note.tie) {\n                return _extends({}, note, {\n                  tie: null\n                });\n              }\n\n              return _extends({}, note, {\n                tie: 'start'\n              });\n            } else if (index === selectedNote.noteIndex + 1) {\n              if (note.tie) {\n                return _extends({}, note, {\n                  tie: null\n                });\n              }\n\n              return _extends({}, note, {\n                tie: 'stop'\n              });\n            }\n\n            return note;\n          })\n        });\n      }\n\n      return measure;\n    }));\n  };\n\n  var xmlSheet = xmlString(measures.map(function (measure) {\n    return measureToXML(measure);\n  }));\n  var parsedXML = musicXMLToJS(xmlSheet);\n\n  if (scoreCallback) {\n    scoreCallback(parsedXML);\n  }\n\n  var currentMeasure = measures[currentMeasureIndex];\n  var attributes = currentMeasure && currentMeasure.attributes;\n\n  if (!attributes) {\n    attributes = measures[0].attributes;\n  }\n\n  var canTie = false;\n\n  if (selectedNote) {\n    var nextNote = measures[selectedNote.measureIndex].notes[selectedNote.noteIndex + 1];\n\n    if (nextNote) {\n      var selected = measures[selectedNote.measureIndex].notes[selectedNote.noteIndex];\n\n      if (selected.pitch.step === nextNote.pitch.step && selected.pitch.octave === nextNote.pitch.octave) {\n        canTie = true;\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", null, !readOnly && /*#__PURE__*/React.createElement(Navbar, null, /*#__PURE__*/React.createElement(Dropdown, {\n    onChange: updateClef\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"clef-dropdown-0\"\n  }, \"G\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: \"clef-dropdown-1\"\n  }, \"F\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"\" + styles$4.form\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"aria-label\": \"Beat\",\n    value: attributes && attributes.time.beats,\n    className: styles$4.timeInput,\n    style: {\n      textAlign: 'right'\n    },\n    onChange: function onChange(e) {\n      setMeasures(measures.map(function (measure) {\n        if (measure.index === 0) {\n          return _extends({}, measure, {\n            attributes: _extends({}, measure.attributes, {\n              time: {\n                beats: parseInt(e.target.value),\n                beatType: measure.attributes.time.beatType\n              }\n            })\n          });\n        }\n\n        return measure;\n      }));\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"\" + styles$4.form\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"aria-label\": \"Time\",\n    value: attributes && attributes.time.beatType,\n    style: {\n      textAlign: 'left'\n    },\n    className: styles$4.timeInput,\n    onChange: function onChange(e) {\n      setMeasures(measures.map(function (measure) {\n        if (measure.index === 0) {\n          return _extends({}, measure, {\n            attributes: _extends({}, measure.attributes, {\n              time: {\n                beatType: parseInt(e.target.value),\n                beats: measure.attributes.time.beats\n              }\n            })\n          });\n        }\n\n        return measure;\n      }));\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: styles$4.form + \" \" + styles$4.tooltip\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"aria-label\": \"Fifths\",\n    value: attributes && attributes.key.fifths,\n    onChange: function onChange(e) {\n      setMeasures(measures.map(function (measure) {\n        if (measure.index === 0) {\n          return _extends({}, measure, {\n            attributes: _extends({}, measure.attributes, {\n              key: {\n                fifths: parseInt(e.target.value),\n                mode: measure.attributes.key.mode\n              }\n            })\n          });\n        }\n\n        return measure;\n      }));\n    }\n  })), /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(ToggleButton, {\n    checked: accidental === '#',\n    onClick: function onClick(e) {\n      if (accidental !== '#') {\n        setAccidental('#');\n      } else {\n        setAccidental(null);\n      }\n    }\n  }, \"\\u266F\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    checked: accidental === 'b',\n    onClick: function onClick(e) {\n      if (accidental !== 'b') {\n        setAccidental('b');\n      } else {\n        setAccidental(null);\n      }\n    }\n  }, \"\\u266D\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    checked: accidental === 'n',\n    onClick: function onClick(e) {\n      if (accidental !== 'n') {\n        setAccidental('n');\n      } else {\n        setAccidental(null);\n      }\n    }\n  }, \"\\u266E\")), /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(ToggleButton, {\n    id: \"restToggleButton\",\n    checked: isRest,\n    onClick: function onClick() {\n      setIsRest(true);\n    }\n  }, \"rest\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    id: \"noteToggleButton\",\n    checked: !isRest,\n    onClick: function onClick() {\n      setIsRest(false);\n    }\n  }, \"note\")), /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(NoteButton, {\n    noteType: \"whole\",\n    current: noteType,\n    isRest: isRest,\n    onClick: function onClick() {\n      return setNoteType('whole');\n    }\n  }), /*#__PURE__*/React.createElement(NoteButton, {\n    noteType: \"half\",\n    current: noteType,\n    isRest: isRest,\n    onClick: function onClick() {\n      return setNoteType('half');\n    }\n  }), /*#__PURE__*/React.createElement(NoteButton, {\n    noteType: \"quarter\",\n    current: noteType,\n    isRest: isRest,\n    onClick: function onClick() {\n      return setNoteType('quarter');\n    }\n  }), /*#__PURE__*/React.createElement(NoteButton, {\n    noteType: \"eighth\",\n    current: noteType,\n    isRest: isRest,\n    onClick: function onClick() {\n      return setNoteType('eighth');\n    }\n  }), /*#__PURE__*/React.createElement(NoteButton, {\n    noteType: \"16th\",\n    current: noteType,\n    isRest: isRest,\n    onClick: function onClick() {\n      return setNoteType('16th');\n    }\n  }), /*#__PURE__*/React.createElement(NoteButton, {\n    noteType: \"32nd\",\n    current: noteType,\n    isRest: isRest,\n    onClick: function onClick() {\n      return setNoteType('32nd');\n    }\n  })), /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(ToggleButton, {\n    id: \"dottedToggleButton\",\n    checked: dotted,\n    onClick: function onClick(e) {\n      return setDotted(!dotted);\n    }\n  }, \"Dot\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    id: \"beamToggleButton\",\n    disabled: !canBeamNote(noteType),\n    checked: beam === 'begin' ? true : false,\n    onClick: function onClick(e) {\n      if (beam === null) {\n        setBeam('begin');\n      } else if (beam === 'begin') {\n        setMeasures(measures.map(function (measure) {\n          if (measure.index === measures.length - 1) {\n            return _extends({}, measure, {\n              notes: measure.notes.map(function (note, index) {\n                if (index === measure.notes.length - 1) {\n                  return _extends({}, note, {\n                    beam: 'end'\n                  });\n                }\n\n                return note;\n              })\n            });\n          }\n\n          return measure;\n        }));\n        setBeam(null);\n      }\n    }\n  }, \"Beam\")), /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: !canTie,\n    id: \"tieButton\",\n    onClick: tieNote\n  }, \"Tie\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"removeNoteButton\",\n    onClick: removeNote\n  }, /*#__PURE__*/React.createElement(BackspaceIcon, null)), /*#__PURE__*/React.createElement(Button, {\n    id: \"addMeasureButton\",\n    onClick: function onClick() {\n      return addMeasure();\n    }\n  }, /*#__PURE__*/React.createElement(PlusIcon, null)), createScoreLabel && /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-4\",\n    onClick: function onClick() {\n      return createScore(xmlSheet);\n    }\n  }, createScoreLabel))), /*#__PURE__*/React.createElement(MusicXMLSheet, {\n    id: \"xmlsheet\",\n    xml: parsedXML,\n    noteType: noteType,\n    appendNote: appendNote,\n    accidental: accidental,\n    isRest: isRest,\n    selectedNote: selectedNote,\n    setSelectedNote: setSelectedNote,\n    playNotesComponent: playNotesComponent\n  }), /*#__PURE__*/React.createElement(\"div\", null, children));\n};\n\nexport { MusicXMLSheet, ScoreEditor };","map":{"version":3,"sources":["../src/ui/Button.tsx","../src/ui/ToggleButton.tsx","../src/ui/ButtonGroup.tsx","../src/ui/Navbar.tsx","../src/ui/Dropdown.tsx","../src/lib/musicxml.tsx","../src/ui/NoteButton.tsx","../src/lib/notes.ts","../src/lib/scales.ts","../src/MusicXMLSheet.tsx","../src/ScoreEditor.tsx"],"names":["Button","children","disabled","className","id","onClick","styles","ToggleButton","checked","ButtonGroup","Navbar","Dropdown","onChange","ReactDomServer","require","xmlString","Measure","React","measureToXML","measure","index","attributesToXML","noteToXML","Note","Chord","Pitch","Step","Alter","Octave","Duration","Voice","Type","Tie","Stem","Staff","Notations","Dot","Rest","Tied","Beam","note","tie","tied","Attributes","Divisions","Key","Fifths","Mode","Time","Beats","BeatType","Clef","Sign","Line","attributes","xmlDurationToVFMap","maxima","breve","whole","half","quarter","eighth","xmlDurationToVF","isRest","restAddition","vfDuration","xmlFifthsToKeyMap","xmlFifthsToKey","xmlKeyToFifths","key","parseInt","getAccidental","xmlSignToClefMap","G","F","xmlSignToClef","xmlMeasureToJS","measuresArray","measureObjs","m","clef","keySignature","beats","beatType","_text","notes","chord","pitch","rest","type","alter","dotted","beam","musicXMLToJS","result","compact","partwise","part","partList","scorePart","partName","movementTitle","partWise","defaults","identification","version","NoteText","NoteButton","noteType","current","glyph","noteButton","VexNotes","alt","newGNotes","newFNotes","canBeamNote","majorScales","C","D","A","E","B","Bb","Eb","Ab","Db","Gb","Cb","minorScales","Am","Em","Bm","Dm","Gm","Cm","Fm","Bbm","Ebm","VF","Vex","Renderer","svgPt","e","svgCoords","svg","x","y","MusicXMLSheet","xml","selectedNote","setSelectedNote","readOnly","toggleReadOnly","appendNote","accidental","playNotesComponent","measures","highlightIndex","setHightlightIndex","useState","setKeySignature","newNote","setNewNote","hoveringNote","setHoveringNote","renderer","setRenderer","context","setContext","staves","setStaves","container","useRef","formatter","uiAvailableNotes","handleClick","first","second","measureIndex","noteIndex","handleHover","svgPoint","coords","getCoords","lastCoords","bb","stave","staveKeySig","scale","mouseY","mouseX","noteArea","Math","fifths","newNewNote","hoveringOverNote","ticks","voice","tickBB","tick","tickIndex","handleMouseLeave","width","height","padding","measuresPerLine","lines","lengths","length","lineLengths","containerWidth","accum","useEffect","newLineIndex","measureCount","allStaves","newAttributes","notesLength","prevMeasures","prevLengths","l","vfKeySig","beams","newBeam","ties","newTie","tieStarted","vexNotes","getNext","next","selectIndex","sortedNext","aNoteIndex","item","a","bNoteIndex","b","pitches","staveNote","keys","duration","auto_stem","fillStyle","strokeStyle","n","withAccidental","i","first_note","last_note","num_beats","beat_value","align_rests","allTies","first_indices","last_indices","allBeams","t","console","uiNote","PlayNotes","BackspaceIcon","PlusIcon","ScoreEditor","createScore","createScoreLabel","notesCallback","scoreCallback","setMeasures","divisions","mode","time","sign","line","currentMeasureIndex","setCurrentMeasureIndex","setNoteType","setIsRest","setAccidental","setBeam","setDotted","addMeasure","newIndex","newMeasure","appendTo","vfNote","newMeasures","step","octave","newNotes","chordIndex","removeNote","nextNotes","notesToRemove","newNoteIndex","updateClef","newValue","tieNote","xmlSheet","parsedXML","currentMeasure","canTie","nextNote","selected","form","textAlign","tooltip"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './Button.module.css';\n\ninterface ButtonProps {\n  children?: any;\n  disabled?: boolean;\n  className?: string;\n  id?: string;\n  onClick?: () => void;\n}\nexport const Button = ({\n  children,\n  disabled,\n  className,\n  id,\n  onClick,\n}: ButtonProps) => {\n  return (\n    <button\n      disabled={disabled}\n      id={id}\n      className={`${styles.button} ${className}`}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\nimport styles from './ToggleButton.module.css';\n\ninterface ButtonProps {\n  children?: any;\n  className?: string;\n  id?: string;\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  checked?: boolean;\n  disabled?: boolean;\n}\nexport const ToggleButton = ({\n  children,\n  className,\n  id,\n  checked,\n  onClick,\n  disabled,\n}: ButtonProps) => {\n  if (checked) {\n    return (\n      <button\n        id={id}\n        className={`${styles.toggleButton} ${styles.checked} ${className}`}\n        onClick={onClick}\n      >\n        {children}\n      </button>\n    );\n  }\n  return (\n    <button\n      id={id}\n      disabled={disabled}\n      className={`${styles.toggleButton} ${className}`}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n  // return (\n  //   // <div>\n  //   //   <input\n  //   //     disabled={disabled}\n  //   //     type={type}\n  //   //     checked={checked}\n  //   //     className={className}\n  //   //     id={id}\n  //   //     onChange={onChange}\n  //   //     onClick={onClick}\n  //   //     value={value}\n  //   //   />\n  //   //   <label htmlFor={id}>{children}</label>\n  //   // </div>\n  // );\n};\n","import React from 'react';\nimport styles from './ButtonGroup.module.css';\n\ninterface ButtonGroupProps {\n  children?: any;\n  toggle?: boolean;\n  className?: string;\n}\nexport const ButtonGroup = ({\n  children,\n  toggle,\n  className,\n}: ButtonGroupProps) => {\n  return <div className={`${styles.buttonGroup} ${className}`}>{children}</div>;\n};\n","import React from 'react';\nimport styles from './Navbar.module.css';\n\ninterface NavbarProps {\n  children?: any;\n  className?: string;\n}\nexport const Navbar = ({ children, className }: NavbarProps) => {\n  return <nav className={`${styles.navbar} ${className}`}>{children}</nav>;\n};\n","import React from 'react';\nimport styles from '../ScoreEditor.module.css';\n\ninterface DropdownProps {\n  children?: any;\n  variant?: string;\n  className?: string;\n  id?: string;\n  onChange?: (e: any) => void;\n}\nexport const Dropdown = ({\n  children,\n  variant,\n  className,\n  id,\n  onChange,\n}: DropdownProps) => {\n  return (\n    <form className={styles.form} onChange={onChange}>\n      <select id={id} className={className}>\n        {children}\n      </select>\n    </form>\n  );\n};\n","import convert from 'xml-js';\nimport React from 'react';\nconst ReactDomServer = require('react-dom/server');\n\nexport const xmlString = (measures: any) => {\n  return `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE score-partwise PUBLIC \"-//Recordare//DTD MusicXML 2.0 Partwise//EN\" \"http://www.musicxml.org/dtds/partwise.dtd\">\n\n<score-partwise version=\"2.0\">\n    <movement-title>Test</movement-title>\n    <identification>\n        <encoding>\n            <software>Caesura</software>\n            <encoding-date>2020-10-10</encoding-date>\n            <supports attribute=\"new-system\" element=\"print\" type=\"yes\" value=\"yes\"/>\n            <supports attribute=\"new-page\" element=\"print\" type=\"yes\" value=\"yes\"/>\n        </encoding>\n    </identification>\n    <defaults>\n        <scaling>\n            <millimeters>7.540625</millimeters>\n            <tenths>40</tenths>\n        </scaling>\n        <page-layout>\n            <page-height>1481</page-height>\n            <page-width>1145</page-width>\n            <page-margins type=\"both\">\n                <left-margin>58</left-margin>\n                <right-margin>58</right-margin>\n                <top-margin>66</top-margin>\n                <bottom-margin>66</bottom-margin>\n            </page-margins>\n        </page-layout>\n        <system-layout>\n            <system-margins>\n                <left-margin>225</left-margin>\n                <right-margin>0</right-margin>\n            </system-margins>\n            <system-distance>96</system-distance>\n            <top-system-distance>96</top-system-distance>\n        </system-layout>\n        <staff-layout>\n            <staff-distance>0</staff-distance>\n        </staff-layout>\n    </defaults>\n    <part-list>\n        <score-part id=\"P1\">\n            <part-name>Grand Piano</part-name>\n        </score-part>\n    </part-list>\n    <part id=\"P1\">\n      ${measures}\n    </part>\n</score-partwise>\n`;\n};\n\nexport interface Pitch {\n  step: string;\n  alter: string;\n  octave: number;\n}\n\nexport interface Notations {\n  tied?: 'start' | 'stop';\n}\n\nexport interface Measure {\n  index: number;\n  notes: Array<Note>;\n  attributes: Attributes | null;\n}\n\nexport interface Note {\n  pitch: Pitch;\n  duration: number;\n  type: string;\n  chord?: boolean;\n  rest?: boolean;\n  dotted?: boolean;\n  beam?: 'begin' | 'end';\n  tie?: 'start' | 'stop';\n  notations?: Notations;\n}\n\nexport interface Key {\n  fifths: number;\n  mode: string;\n}\nexport interface Time {\n  beats: number;\n  beatType: number;\n}\nexport interface Clef {\n  sign: string;\n  line: number;\n}\n\nexport interface Attributes {\n  divisions: number;\n  key: Key;\n  time: Time;\n  clef: Clef;\n}\n\nconst Measure = (props) => React.createElement('measure', props);\nconst Print = (props) => React.createElement('print', props);\nconst SystemLayout = (props) => React.createElement('system-layout', props);\nconst SystemMargins = (props) => React.createElement('system-margins', props);\nconst LeftMargin = (props) => React.createElement('left-margin', props);\nconst RightMargin = (props) => React.createElement('right-margin', props);\nconst TopSystemDistance = (props) =>\n  React.createElement('top-system-distance', props);\nconst MeasureNumbering = (props) =>\n  React.createElement('measure-numbering', props);\n\nexport const measureToXML = (measure: Measure) => {\n  return ReactDomServer.renderToStaticMarkup(\n    <Measure number={measure.index}>\n      {/* <Print page-number=\"1\">\n        <SystemLayout>\n          <SystemMargins>\n            <LeftMargin>225</LeftMargin>\n            <RightMargin>0</RightMargin>\n          </SystemMargins>\n          <TopSystemDistance>96</TopSystemDistance>\n        </SystemLayout>\n        <MeasureNumbering>none</MeasureNumbering>\n      </Print> */}\n      {measure.attributes && attributesToXML(measure.attributes)}\n      {measure.notes.map((note) => noteToXML(note))}\n    </Measure>\n  );\n};\n\nconst Note = (props) => React.createElement('note', props);\nconst Chord = (props) => React.createElement('chord', props);\nconst Pitch = (props) => React.createElement('pitch', props);\nconst Step = (props) => React.createElement('step', props);\nconst Alter = (props) => React.createElement('alter', props);\nconst Octave = (props) => React.createElement('octave', props);\nconst Duration = (props) => React.createElement('duration', props);\nconst Voice = (props) => React.createElement('voice', props);\nconst Type = (props) => React.createElement('type', props);\nconst Tie = (props) => React.createElement('tie', props);\nconst Stem = (props) => React.createElement('stem', props);\nconst Staff = (props) => React.createElement('staff', props);\n\nconst Notations = (props) => React.createElement('notations', props);\nconst Dot = (props) => React.createElement('dot', props);\nconst Rest = (props) => React.createElement('rest', props);\nconst Tied = (props) => React.createElement('tied', props);\nconst Beam = (props) => React.createElement('beam', props);\n\nexport const noteToXML = (note: Note) => {\n  return (\n    <Note>\n      {note.chord && <Chord />}\n      <Pitch>\n        <Step>{note.pitch.step}</Step>\n        <Alter>{note.pitch.alter}</Alter>\n        <Octave>{note.pitch.octave}</Octave>\n      </Pitch>\n      {note.rest && <Rest />}\n      <Duration>{note.duration}</Duration>\n      <Voice>1</Voice>\n      {note.dotted && <Dot />}\n      <Type>{note.type}</Type>\n      <Beam number=\"1\">{note.beam}</Beam>\n      <Tie type={note.tie} />\n      <Stem>up</Stem>\n      <Staff>1</Staff>\n      {note.notations ? (\n        <Notations>\n          <Tied orientation=\"over\" type={note.notations.tied} />\n        </Notations>\n      ) : null}\n    </Note>\n  );\n};\n\nconst Attributes = (props) => React.createElement('attributes', props);\nconst Divisions = (props) => React.createElement('divisions', props);\nconst Key = (props) => React.createElement('key', props);\nconst Fifths = (props) => React.createElement('fifths', props);\nconst Mode = (props) => React.createElement('mode', props);\nconst Time = (props) => React.createElement('time', props);\nconst Beats = (props) => React.createElement('beats', props);\nconst BeatType = (props) => React.createElement('beat-type', props);\nconst Clef = (props) => React.createElement('clef', props);\nconst Sign = (props) => React.createElement('sign', props);\nconst Line = (props) => React.createElement('line', props);\n\nexport const attributesToXML = (attributes) => {\n  return (\n    <Attributes>\n      <Divisions>{attributes.divisions}</Divisions>\n      <Key>\n        <Fifths>{attributes.key.fifths}</Fifths>\n        <Mode>{attributes.key.mode}</Mode>\n      </Key>\n      <Time>\n        <Beats>{attributes.time.beats}</Beats>\n        <BeatType>{attributes.time.beatType}</BeatType>\n      </Time>\n      <Clef>\n        <Sign>{attributes.clef.sign}</Sign>\n        <Line>{attributes.clef.line}</Line>\n      </Clef>\n    </Attributes>\n  );\n};\n\nconst xmlDurationToVFMap = {\n  maxima: null,\n  long: null,\n  breve: null,\n  whole: 'w',\n  half: 'h',\n  quarter: 'q',\n  eighth: '8',\n  '16th': '16',\n  '32nd': '32',\n  '64th': '64',\n  '128th': '128',\n  '256th': '256',\n  '512th': '512',\n  '1024th': '1024',\n};\n\nexport const xmlDurationToVF = (xmlDuration, isRest = false) => {\n  let restAddition = isRest ? 'r' : '';\n  const vfDuration = xmlDurationToVFMap[xmlDuration] + restAddition;\n  if (!vfDuration) {\n    throw new Error(`Note duration ${xmlDuration} wasn't found or unsupported`);\n  }\n  return vfDuration;\n};\n\nconst xmlFifthsToKeyMap = {\n  '-7': 'Cb',\n  '-6': 'Gb',\n  '-5': 'Db',\n  '-4': 'Ab',\n  '-3': 'Eb',\n  '-2': 'Bb',\n  '-1': 'F',\n  '0': 'C',\n  '1': 'G',\n  '2': 'D',\n  '3': 'A',\n  '4': 'E',\n  '5': 'B',\n  '6': 'F#',\n  '7': 'C#',\n};\nexport const xmlFifthsToKey = (xmlFifths) => {\n  return xmlFifthsToKeyMap[xmlFifths];\n};\nexport const xmlKeyToFifths = (xmlKey) => {\n  const key = Object.keys(xmlFifthsToKeyMap).find(\n    (k) => xmlFifthsToKeyMap[k] === xmlKey\n  );\n  return parseInt(key);\n};\n\nexport const getAccidental = {\n  '-7': 'bbbbbbb',\n  '-6': 'bbbbbb',\n  '-5': 'bbbbb',\n  '-4': 'bbbb',\n  '-3': 'bbb',\n  '-2': 'bb',\n  '-1': 'b',\n  '0': '',\n  '1': '#',\n  '2': '##',\n  '3': '###',\n  '4': '####',\n  '5': '#####',\n  '6': '######',\n  '7': '#######',\n};\n\nconst xmlSignToClefMap = {\n  G: 'treble',\n  F: 'bass',\n};\n\nexport const xmlSignToClef = (xmlSign) => {\n  return xmlSignToClefMap[xmlSign];\n};\n\nexport const xmlMeasureToJS = (measure) => {\n  const measuresArray = measure && measure.length ? measure : [measure];\n\n  const measureObjs = measuresArray.map((m) => {\n    const note = m && m['note'];\n    if (!note) {\n      return {\n        index: m._attributes.number,\n        attributes: m &&\n          m.attributes && {\n            clef: m.attributes.clef.sign._text,\n            keySignature: m.attributes.key.fifths._text,\n            beats: m.attributes.time.beats._text,\n            beatType: m.attributes.time['beat-type']._text,\n          },\n      };\n    }\n\n    const notes = note && note.length ? note : [note];\n    return {\n      index: m._attributes.number,\n      attributes: m &&\n        m.attributes && {\n          clef: m.attributes.clef.sign._text,\n          keySignature: m.attributes.key.fifths._text,\n          beats: m.attributes.time.beats._text,\n          beatType: m.attributes.time['beat-type']._text,\n        },\n      note:\n        notes &&\n        notes.map((note) => {\n          return {\n            chord: note.chord ? true : false,\n            pitch: note.pitch.step._text + `/${note.pitch.octave._text}`,\n            rest: note.rest ? true : false,\n            type: note.type._text,\n            alter: note.pitch.alter && note.pitch.alter._text,\n            dotted: note.dot ? true : false,\n            beam: note.beam && note.beam._text,\n            tie: note.tie && note.tie._attributes && note.tie._attributes.type,\n          };\n        }),\n    };\n  });\n  return measureObjs;\n};\n\nexport const musicXMLToJS = (xml) => {\n  if (xml) {\n    try {\n      const result = convert.xml2js(xml, { compact: true });\n      if (result && result['score-partwise']) {\n        const partwise = result['score-partwise'];\n        const part = partwise && partwise['part'];\n        const partList = partwise && partwise['part-list'];\n        const scorePart = partList && partList['score-part'];\n        const partName = scorePart && scorePart['part-name'];\n\n        const movementTitle = partwise && partwise['movement-title'];\n        const measure = part && part['measure'];\n        return {\n          partWise: {\n            defaults: 'Not Supported Yet!',\n            identification: 'Not Supported Yet!',\n            movementTitle: movementTitle._text,\n            partList: {\n              scorePart: {\n                id: scorePart._attributes && scorePart._attributes.id,\n                partName: partName._text,\n              },\n            },\n            part: {\n              id: part._attributes && part._attributes.id,\n              measure: xmlMeasureToJS(measure),\n            },\n            version: partwise._attributes && partwise._attributes.version,\n          },\n        };\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n};\n\n// const measures = xml.measures.map((measure) => {\n//   return {\n//     index: measure.index,\n//     notes:\n//       measure.notes &&\n//       measure.notes.map((note) => {\n//         return {\n//           pitch: note.pitch.step._text + `/${note.pitch.octave._text}`,\n//           duration: xmlDurationToVF[note.type._text],\n//           alter: note.pitch.alter._text,\n//           dotted: note.dot ? true : false,\n//           beam: note.beam._text,\n//           tie: note.tie._attributes && note.tie._attributes.type,\n//         };\n//       }),\n//     attributes: measure &&\n//       measure.attributes && {\n//         clef: xmlSignToClef[measure.attributes.clef.sign._text],\n//         keySignature: xmlFifthsToKey[measure.attributes.key.fifths._text],\n//         beats: measure.attributes.time.beats._text,\n//         beatType: measure.attributes.time[\"beat-type\"]._text,\n//       },\n//   };\n// });\n","import React from 'react';\nimport { ToggleButton } from './ToggleButton';\nimport styles from './NoteButton.module.css';\n\nconst NoteText = ({ children }) => {\n  return <span>{children}</span>;\n};\n\n// Note glyphs are unicode, taken from http://www.unicode.org/charts/PDF/U1D100.pdf\nexport const NoteButton = ({\n  noteType,\n  onClick,\n  current,\n  isRest,\n  className = '',\n  id = '',\n}) => {\n  let glyph;\n  switch (noteType) {\n    case 'whole':\n      glyph = isRest ? <NoteText>𝄻</NoteText> : <NoteText>𝅝</NoteText>;\n      break;\n    case 'half':\n      glyph = isRest ? <NoteText>𝄼</NoteText> : <NoteText>𝅗𝅥</NoteText>;\n      break;\n    case 'quarter':\n      glyph = isRest ? <NoteText>𝄽</NoteText> : <NoteText>𝅘𝅥</NoteText>;\n      break;\n    case 'eighth':\n      glyph = isRest ? <NoteText>𝄾</NoteText> : <NoteText>𝅘𝅥𝅮</NoteText>;\n      break;\n    case '16th':\n      glyph = isRest ? <NoteText>𝄿</NoteText> : <NoteText>𝅘𝅥𝅯</NoteText>;\n      break;\n    case '32nd':\n      glyph = isRest ? <NoteText>𝅀</NoteText> : <NoteText>𝅘𝅥𝅰</NoteText>;\n      break;\n    case '64th':\n      glyph = isRest ? <NoteText>𝅁</NoteText> : <NoteText>𝅘𝅥𝅱</NoteText>;\n      break;\n    case '128th':\n      glyph = isRest ? <NoteText>𝅂</NoteText> : <NoteText>𝅘𝅥𝅲</NoteText>;\n      break;\n  }\n  return (\n    <ToggleButton\n      checked={current === noteType}\n      onClick={onClick}\n      className={className}\n      id={`noteButton-${noteType}`}\n    >\n      <span className={styles.noteButton}>{glyph}</span>\n    </ToggleButton>\n  );\n};\n","export const Notes = [\n  { note: \"C0\", alt: null },\n  { note: \"C#0\", alt: \"Db0\" },\n  { note: \"D0\", alt: null },\n  { note: \"D#0\", alt: \"Eb0\" },\n  { note: \"E0\", alt: null },\n  { note: \"F0\", alt: null },\n  { note: \"F#0\", alt: \"Gb0\" },\n  { note: \"G0\", alt: null },\n  { note: \"G#0\", alt: \"Ab0\" },\n  { note: \"A0\", alt: null },\n  { note: \"A#0\", alt: \"Bb0\" },\n  { note: \"B0\", alt: null },\n  { note: \"C1\", alt: null },\n  { note: \"C#1\", alt: \"Db1\" },\n  { note: \"D1\", alt: null },\n  { note: \"D#1\", alt: \"Eb1\" },\n  { note: \"E1\", alt: null },\n  { note: \"F1\", alt: null },\n  { note: \"F#1\", alt: \"Gb1\" },\n  { note: \"G1\", alt: null },\n  { note: \"G#1\", alt: \"Ab1\" },\n  { note: \"A1\", alt: null },\n  { note: \"A#1\", alt: \"Bb1\" },\n  { note: \"B1\", alt: null },\n  { note: \"C2\", alt: null },\n  { note: \"C#2\", alt: \"Db2\" },\n  { note: \"D2\", alt: null },\n  { note: \"D#2\", alt: \"Eb2\" },\n  { note: \"E2\", alt: null },\n  { note: \"F2\", alt: null },\n  { note: \"F#2\", alt: \"Gb2\" },\n  { note: \"G2\", alt: null },\n  { note: \"G#2\", alt: \"Ab2\" },\n  { note: \"A2\", alt: null },\n  { note: \"A#2\", alt: \"Bb2\" },\n  { note: \"B2\", alt: null },\n  { note: \"C3\", alt: null },\n  { note: \"C#3\", alt: \"Db3\" },\n  { note: \"D3\", alt: null },\n  { note: \"D#3\", alt: \"Eb3\" },\n  { note: \"E3\", alt: null },\n  { note: \"F3\", alt: null },\n  { note: \"F#3\", alt: \"Gb3\" },\n  { note: \"G3\", alt: null },\n  { note: \"G#3\", alt: \"Ab3\" },\n  { note: \"A3\", alt: null },\n  { note: \"A#3\", alt: \"Bb3\" },\n  { note: \"B3\", alt: null },\n  { note: \"C4\", alt: null },\n  { note: \"C#4\", alt: \"Db4\" },\n  { note: \"D4\", alt: null },\n  { note: \"D#4\", alt: \"Eb4\" },\n  { note: \"E4\", alt: null },\n  { note: \"F4\", alt: null },\n  { note: \"F#4\", alt: \"Gb4\" },\n  { note: \"G4\", alt: null },\n  { note: \"G#4\", alt: \"Ab4\" },\n  { note: \"A4\", alt: null },\n  { note: \"A#4\", alt: \"Bb4\" },\n  { note: \"B4\", alt: null },\n  { note: \"C5\", alt: null },\n  { note: \"C#5\", alt: \"Db5\" },\n  { note: \"D5\", alt: null },\n  { note: \"D#5\", alt: \"Eb5\" },\n  { note: \"E5\", alt: null },\n  { note: \"F5\", alt: null },\n  { note: \"F#5\", alt: \"Gb5\" },\n  { note: \"G5\", alt: null },\n  { note: \"G#5\", alt: \"Ab5\" },\n  { note: \"A5\", alt: null },\n  { note: \"A#5\", alt: \"Bb5\" },\n  { note: \"B5\", alt: null },\n  { note: \"C6\", alt: null },\n  { note: \"C#6\", alt: \"Db6\" },\n  { note: \"D6\", alt: null },\n  { note: \"D#6\", alt: \"Eb6\" },\n  { note: \"E6\", alt: null },\n  { note: \"F6\", alt: null },\n  { note: \"F#6\", alt: \"Gb6\" },\n  { note: \"G6\", alt: null },\n  { note: \"G#6\", alt: \"Ab6\" },\n  { note: \"A6\", alt: null },\n  { note: \"A#6\", alt: \"Bb6\" },\n  { note: \"B6\", alt: null },\n];\n\nexport const VexNotes = [\n  { note: \"c/0\", alt: null },\n  { note: \"c#/0\", alt: \"db/0\" },\n  { note: \"d/0\", alt: null },\n  { note: \"d#/0\", alt: \"eb/0\" },\n  { note: \"e/0\", alt: null },\n  { note: \"f/0\", alt: null },\n  { note: \"f#/0\", alt: \"gb/0\" },\n  { note: \"g/0\", alt: null },\n  { note: \"g#/0\", alt: \"ab/0\" },\n  { note: \"a/0\", alt: null },\n  { note: \"a#/0\", alt: \"bb/0\" },\n  { note: \"b/0\", alt: null },\n  { note: \"c/1\", alt: null },\n  { note: \"c#/1\", alt: \"db/1\" },\n  { note: \"d/1\", alt: null },\n  { note: \"d#/1\", alt: \"eb/1\" },\n  { note: \"e/1\", alt: null },\n  { note: \"f/1\", alt: null },\n  { note: \"f#/1\", alt: \"gb/1\" },\n  { note: \"g/1\", alt: null },\n  { note: \"g#/1\", alt: \"ab/1\" },\n  { note: \"a/1\", alt: null },\n  { note: \"a#/1\", alt: \"bb/1\" },\n  { note: \"b/1\", alt: null },\n  { note: \"c/2\", alt: null },\n  { note: \"c#/2\", alt: \"db/2\" },\n  { note: \"d/2\", alt: null },\n  { note: \"d#/2\", alt: \"eb/2\" },\n  { note: \"e/2\", alt: null },\n  { note: \"f/2\", alt: null },\n  { note: \"f#/2\", alt: \"gb/2\" },\n  { note: \"g/2\", alt: null },\n  { note: \"g#/2\", alt: \"ab/2\" },\n  { note: \"a/2\", alt: null },\n  { note: \"a#/2\", alt: \"bb/2\" },\n  { note: \"b/2\", alt: null },\n  { note: \"c/3\", alt: null },\n  { note: \"c#/3\", alt: \"db/3\" },\n  { note: \"d/3\", alt: null },\n  { note: \"d#/3\", alt: \"eb/3\" },\n  { note: \"e/3\", alt: null },\n  { note: \"f/3\", alt: null },\n  { note: \"f#/3\", alt: \"gb/3\" },\n  { note: \"g/3\", alt: null },\n  { note: \"g#/3\", alt: \"ab/3\" },\n  { note: \"a/3\", alt: null },\n  { note: \"a#/3\", alt: \"bb/3\" },\n  { note: \"b/3\", alt: null },\n  { note: \"c/4\", alt: null },\n  { note: \"c#/4\", alt: \"db/4\" },\n  { note: \"d/4\", alt: null },\n  { note: \"d#/4\", alt: \"eb/4\" },\n  { note: \"e/4\", alt: null },\n  { note: \"f/4\", alt: null },\n  { note: \"f#/4\", alt: \"gb/4\" },\n  { note: \"g/4\", alt: null },\n  { note: \"g#/4\", alt: \"ab/4\" },\n  { note: \"a/4\", alt: null },\n  { note: \"a#/4\", alt: \"bb/4\" },\n  { note: \"b/4\", alt: null },\n  { note: \"c/5\", alt: null },\n  { note: \"c#/5\", alt: \"db/5\" },\n  { note: \"d/5\", alt: null },\n  { note: \"d#/5\", alt: \"eb/5\" },\n  { note: \"e/5\", alt: null },\n  { note: \"f/5\", alt: null },\n  { note: \"f#/5\", alt: \"gb/5\" },\n  { note: \"g/5\", alt: null },\n  { note: \"g#/5\", alt: \"ab/5\" },\n  { note: \"a/5\", alt: null },\n  { note: \"a#/5\", alt: \"bb/5\" },\n  { note: \"b/5\", alt: null },\n  { note: \"c/6\", alt: null },\n  { note: \"c#/6\", alt: \"db/6\" },\n  { note: \"d/6\", alt: null },\n  { note: \"d#/6\", alt: \"eb/6\" },\n  { note: \"e/6\", alt: null },\n  { note: \"f/6\", alt: null },\n  { note: \"f#/6\", alt: \"gb/6\" },\n  { note: \"g/6\", alt: null },\n  { note: \"g#/6\", alt: \"ab/6\" },\n  { note: \"a/6\", alt: null },\n  { note: \"a#/6\", alt: \"bb/6\" },\n  { note: \"b/6\", alt: null },\n];\n\nexport const newGNotes = [\n  { note: \"b/2\", alt: null },\n  { note: \"c/3\", alt: null },\n  { note: \"d/3\", alt: null },\n  { note: \"e/3\", alt: null },\n  { note: \"f/3\", alt: null },\n  { note: \"g/3\", alt: null },\n  { note: \"a/3\", alt: null },\n  { note: \"b/3\", alt: null },\n  { note: \"c/4\", alt: null },\n  { note: \"d/4\", alt: null },\n  { note: \"e/4\", alt: null },\n  { note: \"f/4\", alt: null },\n  { note: \"g/4\", alt: null },\n  { note: \"a/4\", alt: null },\n  { note: \"b/4\", alt: null },\n  { note: \"c/5\", alt: null },\n  { note: \"d/5\", alt: null },\n  { note: \"e/5\", alt: null },\n  { note: \"f/5\", alt: null },\n  { note: \"g/5\", alt: null },\n  { note: \"a/5\", alt: null },\n  { note: \"b/6\", alt: null },\n  { note: \"c/6\", alt: null },\n  { note: \"d/6\", alt: null },\n  { note: \"e/6\", alt: null },\n  { note: \"f/6\", alt: null },\n  { note: \"g/6\", alt: null },\n].reverse();\n\nexport const newFNotes = [\n  { note: \"c/1\", alt: null },\n  { note: \"d/1\", alt: null },\n  { note: \"e/1\", alt: null },\n  { note: \"f/1\", alt: null },\n  { note: \"g/1\", alt: null },\n  { note: \"a/1\", alt: null },\n  { note: \"b/1\", alt: null },\n  { note: \"c/2\", alt: null },\n  { note: \"d/2\", alt: null },\n  { note: \"e/2\", alt: null },\n  { note: \"f/2\", alt: null },\n  { note: \"g/2\", alt: null },\n  { note: \"a/2\", alt: null },\n  { note: \"b/2\", alt: null },\n  { note: \"c/3\", alt: null },\n  { note: \"d/3\", alt: null },\n  { note: \"e/3\", alt: null },\n  { note: \"f/3\", alt: null },\n  { note: \"g/3\", alt: null },\n  { note: \"a/3\", alt: null },\n  { note: \"b/3\", alt: null },\n  { note: \"c/4\", alt: null },\n  { note: \"d/4\", alt: null },\n  { note: \"e/4\", alt: null },\n  { note: \"f/4\", alt: null },\n  { note: \"g/4\", alt: null },\n  { note: \"a/4\", alt: null },\n  { note: \"b/4\", alt: null },\n].reverse();\n\nexport const noteToVex = (note) => {\n  const isNote = Notes.findIndex((n) => n.note === note);\n  const isAlt = Notes.findIndex((n) => n.alt === note);\n  if (isNote !== -1) {\n    return VexNotes[isNote].note;\n  }\n  if (isAlt !== -1) {\n    return VexNotes[isAlt].alt;\n  }\n};\n\nexport const Intervals = [\n  { name: \"P1\", alt: \"d2\" },\n  { name: \"m2\", alt: \"A1\" },\n  { name: \"M2\", alt: \"d3\" },\n  { name: \"m3\", alt: \"A2\" },\n  { name: \"M3\", alt: \"d4\" },\n  { name: \"P4\", alt: \"A3\" },\n  { name: \"d5\", alt: \"A4\" },\n  { name: \"P5\", alt: \"d6\" },\n  { name: \"m6\", alt: \"A5\" },\n  { name: \"M6\", alt: \"d7\" },\n  { name: \"m7\", alt: \"A6\" },\n  { name: \"M7\", alt: \"d8\" },\n  { name: \"P8\", alt: \"A7\" },\n];\n\nexport const IntervalNames = {\n  P1: \"Perfect Unison\",\n  m2: \"Minor Second\",\n  M2: \"Major Second\",\n  m3: \"Minor Third\",\n  M3: \"Major Third\",\n  P4: \"Perfect Fourth\",\n  d5: \"Diminished Fifth\",\n  P5: \"Perfect Fifth\",\n  m6: \"Minor Sixth\",\n  M6: \"Major Sixth\",\n  m7: \"Minor Seventh\",\n  M7: \"Major Seventh\",\n  P8: \"Perfect Octave\",\n};\n\nexport const majorKeys = [\n  \"C\",\n  \"F\",\n  \"Bb\",\n  \"Eb\",\n  \"Ab\",\n  \"Db\",\n  \"Gb\",\n  \"Cb\",\n  \"G\",\n  \"D\",\n  \"A\",\n  \"E\",\n  \"B\",\n  \"F#\",\n  \"C#\",\n];\nexport const minorKeys = [\n  \"Am\",\n  \"Dm\",\n  \"Gm\",\n  \"Cm\",\n  \"Fm\",\n  \"Bbm\",\n  \"Ebm\",\n  \"Abm\",\n  \"Em\",\n  \"Bm\",\n  \"F#m\",\n  \"C#m\",\n  \"G#m\",\n  \"D#m\",\n  \"A#m\",\n];\n\nexport const convertKey = (start) => {\n  switch (start) {\n    case \"C#\":\n      return \"Db\";\n    case \"D#\":\n      return \"Eb\";\n    case \"E#\":\n      return \"F\";\n    case \"G#\":\n      return \"Ab\";\n    case \"A#\":\n      return \"Bb\";\n  }\n  return start;\n};\n\nexport const getInterval = (start, end) => {\n  const startIndex = Notes.findIndex(\n    (n) => n.note === start || n.alt === start\n  );\n  const endIndex = Notes.findIndex((n) => n.note === end || n.alt === end);\n\n  // Unison case\n  if (endIndex === startIndex) {\n    return Intervals[0];\n  }\n\n  const intervalsWithoutUnison = Intervals.slice(1);\n  const intervalsWithoutOctave = Intervals.slice(0, Intervals.length - 1);\n\n  if (endIndex < startIndex) {\n    const oct = parseInt(end.slice(end.length - 1, end.length));\n    const endOctUp = end.slice(end, end.length - 1) + (oct + 1);\n    const endOctUpIndex = Notes.findIndex(\n      (n) => n.note === endOctUp || n.alt === endOctUp\n    );\n    // reverse interval lookup\n    const diff = endOctUpIndex - startIndex;\n    const repeated = new Array(diff).fill(intervalsWithoutOctave).flat();\n    const reversed = repeated.reverse();\n    return reversed[diff - 1];\n  }\n  const diff = endIndex - startIndex;\n  const repeated = new Array(diff).fill(intervalsWithoutUnison).flat();\n  return repeated[diff - 1];\n};\n\nexport const getIntervalName = (interval) => {\n  return IntervalNames[interval];\n};\n\nexport const noteToAlt = (note) => {\n  const isNote = Notes.find((n) => n.note === note);\n  const isAlt = Notes.find((n) => n.alt === note);\n  if (isNote && isNote.alt) {\n    return isNote.alt;\n  }\n  if (isAlt && isAlt.note) {\n    return isAlt.note;\n  }\n  return note;\n};\n\nexport const convertNoteDuration = (duration, dotted) => {\n  switch (duration) {\n    case \"w\":\n    case \"whole\":\n      return dotted ? \"1n.\" : \"1n\";\n    case \"h\":\n    case \"half\":\n      return dotted ? \"2n.\" : \"2n\";\n    case \"q\":\n    case \"quarter\":\n      return dotted ? \"4n.\" : \"4n\";\n    case \"8\":\n    case \"eighth\":\n      return dotted ? \"8n.\" : \"8n\";\n    case \"16\":\n    case \"16th\":\n      return dotted ? \"16n.\" : \"16n\";\n  }\n};\n\nexport const canBeamNote = (noteType) => {\n  if (noteType === \"eighth\" || noteType === \"16th\" || noteType === \"32nd\") {\n    return true;\n  }\n  return false;\n};\n\nconst doubleAccidentalNoteMap = {\n  \"A##\": \"B\",\n  \"B##\": \"C#\",\n  \"C##\": \"D\",\n  \"D##\": \"E\",\n  \"E##\": \"F#\",\n  \"F##\": \"G\",\n  \"G##\": \"A\",\n};\n\nexport const doubleAccidentalToNote = (note) => {\n  return doubleAccidentalNoteMap[note];\n};\n","export const majorScales = {\n  C: [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"],\n  G: [\"g\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f#\"],\n  D: [\"d\", \"e\", \"f#\", \"g\", \"a\", \"b\", \"c#\"],\n  A: [\"a\", \"b\", \"c#\", \"d\", \"e\", \"f#\", \"g#\"],\n  E: [\"e\", \"f#\", \"g#\", \"a\", \"b\", \"c#\", \"d#\"],\n  B: [\"b\", \"c#\", \"d#\", \"e\", \"f#\", \"g#\", \"a#\"],\n  \"F#\": [\"f#\", \"g#\", \"a#\", \"b\", \"c#\", \"d#\", \"e\"],\n  \"C#\": [\"c#\", \"d#\", \"e\", \"f#\", \"g#\", \"a#\", \"b#\"],\n  F: [\"f\", \"g\", \"a\", \"bb\", \"c\", \"d\", \"e\"],\n  Bb: [\"bb\", \"c\", \"d\", \"eb\", \"f\", \"g\", \"a\"],\n  Eb: [\"eb\", \"f\", \"g\", \"ab\", \"bb\", \"c\", \"d\"],\n  Ab: [\"ab\", \"bb\", \"c\", \"db\", \"eb\", \"f\", \"g\"],\n  Db: [\"db\", \"eb\", \"f\", \"gb\", \"ab\", \"bb\", \"c\"],\n  Gb: [\"gb\", \"ab\", \"bb\", \"cb\", \"db\", \"eb\", \"f\"],\n  Cb: [\"c\", \"db\", \"eb\", \"fb\", \"gb\", \"ab\", \"bb\"],\n};\n\nexport const minorScales = {\n  Am: [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"],\n  Em: [\"g\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f#\"],\n  Bm: [\"d\", \"e\", \"f#\", \"g\", \"a\", \"b\", \"c#\"],\n  \"F#m\": [\"a\", \"b\", \"c#\", \"d\", \"e\", \"f#\", \"g#\"],\n  \"C#m\": [\"e\", \"f#\", \"g#\", \"a\", \"b\", \"c#\", \"d#\"],\n  \"G#m\": [\"b\", \"c#\", \"d#\", \"e\", \"f#\", \"g#\", \"a#\"],\n  \"D#m\": [\"f#\", \"g#\", \"a#\", \"b\", \"c#\", \"d#\", \"e\"],\n  Dm: [\"f\", \"g\", \"a\", \"bb\", \"c\", \"d\", \"e\"],\n  Gm: [\"bb\", \"c\", \"d\", \"eb\", \"f\", \"g\", \"a\"],\n  Cm: [\"eb\", \"f\", \"g\", \"ab\", \"bb\", \"c\", \"d\"],\n  Fm: [\"ab\", \"bb\", \"c\", \"db\", \"eb\", \"f\", \"g\"],\n  Bbm: [\"db\", \"eb\", \"f\", \"gb\", \"ab\", \"bb\", \"c\"],\n  Ebm: [\"gb\", \"ab\", \"bb\", \"cb\", \"db\", \"eb\", \"f\"],\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport Vex from 'vexflow';\n\nimport { majorScales, minorScales } from './lib/scales';\nimport {\n  getAccidental,\n  xmlDurationToVF,\n  xmlFifthsToKey,\n  xmlKeyToFifths,\n  xmlSignToClef,\n} from './lib/musicxml';\nimport { newGNotes, newFNotes, VexNotes } from './lib/notes';\n\nconst VF = Vex.Flow;\nconst { Formatter, Renderer, Stave, StaveNote } = VF;\n\ninterface StaveWithVoice extends Vex.Flow.Stave {\n  voices: Array<Vex.Flow.Voice>;\n}\n\nfunction getCoords(e, svg, svgPt) {\n  svgPt.x = e.clientX;\n  svgPt.y = e.clientY;\n  const svgCoords = svgPt.matrixTransform(svg.getScreenCTM().inverse());\n  return { x: svgCoords.x, y: svgCoords.y };\n}\nfunction getCoordsInCanvas(e, canvas) {\n  const rect = canvas.getBoundingClientRect();\n  return {\n    x: e.clientX - rect.left,\n    y: e.clientY - rect.top,\n  };\n}\n\nconst MusicXMLSheet = ({\n  id,\n  xml,\n  selectedNote = null,\n  setSelectedNote = null,\n  readOnly = false,\n  toggleReadOnly = null,\n  noteType = null,\n  appendNote = null,\n  accidental = null,\n  isRest = false,\n  children = null,\n  playNotesComponent = null,\n}) => {\n  const { partWise } = xml;\n  const { measure: measures } = partWise.part;\n\n  const [highlightIndex, setHightlightIndex] = useState({\n    measure: null,\n    note: null,\n  });\n  const [keySignature, setKeySignature] = useState(\n    xmlFifthsToKey(measures[0].attributes.keySignature)\n  );\n  const [newNote, setNewNote] = useState(null);\n  const [hoveringNote, setHoveringNote] = useState(null);\n\n  const [renderer, setRenderer] = useState(null);\n  const [context, setContext] = useState(null);\n  const [staves, setStaves] = useState([]);\n\n  const container = useRef<any>();\n  const formatter = new Vex.Flow.Formatter();\n\n  const clef = measures[0].attributes.clef;\n  const uiAvailableNotes = clef === 'G' ? newGNotes : newFNotes;\n\n  const handleClick = (e) => {\n    if (newNote) appendNote(newNote, accidental);\n    else if (hoveringNote) {\n      const first = hoveringNote.newNote.note.pitch;\n      const second = hoveringNote.hoveringNote.keys;\n      if (second.includes(first)) {\n        setSelectedNote({\n          measureIndex: hoveringNote.measureIndex,\n          noteIndex: hoveringNote.noteIndex,\n        });\n      } else {\n        appendNote(hoveringNote.newNote, accidental, hoveringNote);\n        setSelectedNote(null);\n      }\n    }\n    setNewNote(null);\n  };\n\n  const handleHover = (e) => {\n    if (context) {\n      const svgPoint = context.svg.createSVGPoint();\n\n      const coords = getCoords(e, context.svg, svgPoint);\n      // const coords = getCoordsInCanvas(e, context.canvas);\n      if (coords.x !== lastCoords.x && coords.y !== lastCoords.y) {\n        lastCoords = coords;\n        staves.forEach((stave: StaveWithVoice, index) => {\n          // @ts-ignore - typo in vexflow type defs\n          const bb = stave.getBoundingBox();\n          let staveKeySig;\n\n          // @ts-ignore - typo in vexflow type defs\n          if (stave && stave.getModifiers && stave.getModifiers()[4]) {\n            // @ts-ignore - typo in vexflow type defs\n            staveKeySig = stave.getModifiers()[4]['keySpec'];\n          } else {\n            staveKeySig = keySignature;\n          }\n          const scale = { ...majorScales, ...minorScales }[staveKeySig];\n          if (\n            coords.x > bb.x &&\n            coords.x < bb.x + bb.w &&\n            coords.y > bb.y &&\n            coords.y < bb.y + bb.h\n          ) {\n            const mouseY = coords.y - bb.y;\n            const mouseX = coords.x - bb.x;\n\n            const noteArea = Math.round(\n              mouseY / (stave.options.spacing_between_lines_px / 2)\n            );\n            const { note } = uiAvailableNotes[noteArea];\n            let alter = 0;\n            if (\n              !scale.includes(note.slice(0, note.length - 2)) &&\n              !isRest &&\n              accidental !== 'n'\n            ) {\n              const fifths = xmlKeyToFifths(staveKeySig);\n              if (fifths < 0) {\n                alter = -1;\n              } else if (fifths > 0) {\n                alter = 1;\n              }\n            }\n            const newNewNote = {\n              measure: index,\n              note: {\n                pitch: note.toUpperCase(),\n                type: noteType,\n                alter,\n                dotted: false,\n                beam: null,\n              },\n              clef: clef === 'G' ? 'treble' : 'bass',\n              x: mouseX,\n            };\n\n            let hoveringOverNote = false;\n            stave.voices &&\n              stave.voices.forEach((voice) => {\n                const ticks = voice.getTickables();\n                ticks.forEach((tick, tickIndex) => {\n                  const tickBB = tick.getBoundingBox();\n                  if (\n                    coords.x > tickBB.getX() &&\n                    coords.x < tickBB.getX() + tickBB.getW()\n                  ) {\n                    hoveringOverNote = true;\n                    setNewNote(null);\n                    setHoveringNote({\n                      measureIndex: index,\n                      hoveringNote: tick,\n                      newNote: newNewNote,\n                      noteIndex: tickIndex,\n                    });\n                  }\n                });\n              });\n            if (\n              !hoveringOverNote &&\n              noteArea >= 0 &&\n              noteArea < uiAvailableNotes.length\n            ) {\n              setNewNote(newNewNote);\n              setHoveringNote(null);\n            } else {\n            }\n          }\n        });\n      }\n    }\n  };\n\n  const handleMouseLeave = (e) => {\n    setNewNote(null);\n  };\n\n  // const svgPoint = context && context.svg.createSVGPoint();\n  let lastCoords = { x: 0, y: 0 };\n\n  const fifths = xmlKeyToFifths(keySignature);\n  const width = 160 + Math.abs(fifths) * 20;\n  const height = 120;\n  const padding = 10;\n  const measuresPerLine = 4;\n  const lines = Math.ceil(measures.length / measuresPerLine) - 1;\n  const lengths = measures.map((measure) => {\n    const length =\n      measure.note && measure.note.length ? measure.note.length : 0;\n    return width + length * 15;\n  });\n  const lineLengths = lengths.slice(0, measuresPerLine);\n\n  const containerWidth = lineLengths.reduce((accum, current) => {\n    return accum + current;\n  }, 0);\n\n  useEffect(() => {\n    if (!renderer && xml) {\n      setRenderer(new Renderer(container.current, Renderer.Backends.SVG));\n    } else if (renderer && xml && !context) {\n      if (!context) setContext(renderer.getContext());\n    }\n  });\n\n  useEffect(() => {\n    if (renderer && xml && context) {\n      renderer.resize(\n        containerWidth + padding,\n        // lines > 0 ? containerWidth / lines + 1 : containerWidth + padding,\n        height + height * lines\n      );\n\n      let newLineIndex = 0;\n      let measureCount = 0;\n      try {\n        context.clear();\n\n        let allStaves = [];\n\n        measures.forEach((measure, measureIndex) => {\n          const { note: notes } = measure;\n          let { attributes: newAttributes } = measure;\n          const notesLength = (notes && notes.length) || 0;\n          const prevMeasures = measures.slice(newLineIndex, measureIndex);\n          const prevLengths = prevMeasures.map((measure) => {\n            const length =\n              measure.note && measure.note.length ? measure.note.length : 0;\n            return width + length * 15;\n          });\n          const l = prevLengths.reduce((accum, current) => {\n            return accum + current;\n          }, 0);\n\n          let x = measureCount === 0 ? 0 : l;\n          let y = (newLineIndex / measuresPerLine) * height;\n\n          let stave = new VF.Stave(\n            x,\n            y,\n            width + notesLength * 15\n          ) as StaveWithVoice;\n\n          let attributes = measures[0].attributes;\n          if (measureCount === 0) {\n            newAttributes = attributes;\n          }\n          if (newAttributes) {\n            attributes = newAttributes;\n            const { clef, keySignature, beats, beatType } = attributes;\n            // Add a clef and time signature.\n            if (clef) {\n              stave\n                .addClef(xmlSignToClef(clef))\n                .addTimeSignature(`${beats}/${beatType}`);\n              const vfKeySig = xmlFifthsToKey(keySignature);\n              stave.setKeySignature(vfKeySig, vfKeySig);\n              setKeySignature(vfKeySig);\n            }\n          }\n\n          measureCount += 1;\n          if (measureCount === measuresPerLine) {\n            // new line!\n            measureCount = 0;\n            newLineIndex += measuresPerLine;\n          }\n          // Connect it to the rendering context and draw!\n          stave.setContext(context).draw();\n          allStaves.push(stave);\n\n          let beams = [];\n          let newBeam = [];\n\n          let ties = [];\n          let newTie = {};\n          let tieStarted = false;\n\n          let vexNotes = [];\n\n          const getNext = (current, noteIndex) => {\n            const next = notes[noteIndex + 1];\n            if (next && next.chord) {\n              return [current, ...getNext(next, noteIndex + 1)];\n            }\n            return [current];\n          };\n\n          if (notes) {\n            let selectIndex = 0;\n            notes.forEach((note, index, arr) => {\n              if (!note.chord) {\n                const next = getNext(note, index);\n\n                const sortedNext = next.sort((a, b) => {\n                  const aNoteIndex = VexNotes.findIndex(\n                    (item) =>\n                      item.note === a.pitch.toLowerCase() ||\n                      item.alt === a.pitch.toLowerCase()\n                  );\n                  const bNoteIndex = VexNotes.findIndex(\n                    (item) =>\n                      item.note === b.pitch.toLowerCase() ||\n                      item.alt === b.pitch.toLowerCase()\n                  );\n                  return aNoteIndex > bNoteIndex ? 1 : -1;\n                });\n\n                const pitches = sortedNext.map((note) => note.pitch);\n                let staveNote = new VF.StaveNote({\n                  clef: clef === 'G' ? 'treble' : 'bass',\n                  keys: pitches,\n                  duration: xmlDurationToVF(note.type, note.rest),\n                  auto_stem: !note.beam,\n                });\n\n                if (\n                  selectedNote &&\n                  measureIndex === selectedNote.measureIndex &&\n                  selectIndex === selectedNote.noteIndex\n                ) {\n                  staveNote.setStyle({\n                    fillStyle: '#2bcebb',\n                    strokeStyle: '#2bcebb',\n                  });\n                }\n                if (\n                  highlightIndex &&\n                  measure.index === highlightIndex.measure &&\n                  index === highlightIndex.note\n                ) {\n                  staveNote.setStyle({\n                    fillStyle: '#ce2cbd',\n                    strokeStyle: '#ce2cbd',\n                  });\n                }\n\n                const scale = { ...majorScales, ...minorScales }[\n                  xmlFifthsToKey(attributes.keySignature)\n                ];\n                const n = note.pitch\n                  .slice(0, note.pitch.length - 2)\n                  .toLowerCase();\n                const withAccidental = n + getAccidental[note.alter];\n\n                if (!scale.includes(withAccidental) && !note.rest) {\n                  const i = sortedNext.findIndex((item) => {\n                    return item.pitch === note.pitch;\n                  });\n                  if (note.alter > 0) {\n                    // TO-DO: multiple accidentals\n                    staveNote.addAccidental(i, new VF.Accidental('#'));\n                  } else if (note.alter < 0) {\n                    staveNote.addAccidental(i, new VF.Accidental('b'));\n                  } else {\n                    staveNote.addAccidental(i, new VF.Accidental('n'));\n                  }\n                }\n                if (note.dotted) {\n                  staveNote.addDot(0);\n                }\n                if (note.beam && note.beam === 'begin') {\n                  newBeam.push(staveNote);\n                }\n                if (\n                  (note.beam && note.beam === 'end') ||\n                  (note.beam &&\n                    note.beam === 'begin' &&\n                    index !== 0 &&\n                    index === notes.length - 1)\n                ) {\n                  newBeam.push(staveNote);\n                  beams.push(newBeam);\n                  newBeam = [];\n                }\n                if (note.tie && !tieStarted && note.tie === 'start') {\n                  newTie = { first_note: staveNote };\n                  tieStarted = true;\n                }\n                if (note.tie && note.tie === 'stop') {\n                  newTie = {\n                    ...newTie,\n                    last_note: staveNote,\n                  };\n                  ties.push(newTie);\n                  newTie = {};\n                  tieStarted = false;\n                }\n\n                vexNotes.push(staveNote);\n                selectIndex += 1;\n              }\n            });\n          }\n\n          if (vexNotes.length > 0) {\n            const voice = new Vex.Flow.Voice({\n              num_beats: attributes.beats,\n              beat_value: attributes.beatType,\n            }).setMode(Vex.Flow.Voice.Mode.SOFT);\n            voice.addTickables(vexNotes);\n            formatter.joinVoices([voice]).formatToStave([voice], stave, {\n              align_rests: true,\n              context: context,\n            });\n            const allTies = ties.map((tie) => {\n              return new VF.StaveTie({\n                first_note: tie.first_note,\n                last_note: tie.last_note,\n                first_indices: [0],\n                last_indices: [0],\n              });\n            });\n            const allBeams = beams.map((beamNotes) => {\n              return new VF.Beam(beamNotes);\n            });\n\n            voice.draw(context, stave);\n            allBeams.forEach(function (b) {\n              b.setContext(context).draw();\n            });\n            allTies.forEach(function (t) {\n              t.setContext(context).draw();\n            });\n\n            stave.voices = [voice];\n          }\n        });\n        setStaves(allStaves);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }, [measures, renderer, context, newNote, selectedNote, highlightIndex]);\n\n  useEffect(() => {\n    if (newNote) {\n      const stave = staves[newNote.measure];\n      let uiNote = new VF.StaveNote({\n        keys: [newNote.note.pitch],\n        duration: xmlDurationToVF(newNote.note.type, isRest),\n        auto_stem: true,\n        clef: newNote.clef,\n      });\n      uiNote.setStyle({\n        fillStyle: 'lightgrey',\n        strokeStyle: 'lightgrey',\n      });\n      const voice = new Vex.Flow.Voice({\n        num_beats: 4,\n        beat_value: 4,\n      }).setMode(Vex.Flow.Voice.Mode.SOFT);\n      voice.addTickables([uiNote]);\n      formatter.joinVoices([voice]).formatToStave([voice], stave, {\n        align_rests: true,\n        context: context,\n      });\n\n      // uiNote.preFormat();\n      uiNote.setXShift(\n        uiNote.getX() +\n          newNote.x -\n          (newNote.measure === 0 || newNote.measure % measuresPerLine === 0\n            ? Math.abs(fifths) * 15 + 80\n            : 25)\n      );\n      voice.draw(context, stave);\n    }\n  }, [newNote]);\n\n  const PlayNotes = playNotesComponent;\n\n  return (\n    <div>\n      {readOnly ? (\n        <div id={id} ref={container} />\n      ) : (\n        <div\n          id={id}\n          ref={container}\n          onClick={handleClick}\n          onMouseMove={handleHover}\n          onMouseLeave={handleMouseLeave}\n        />\n      )}\n      <div className=\"d-flex\">\n        {playNotesComponent && (\n          <PlayNotes\n            measures={measures}\n            setHightlightIndex={setHightlightIndex}\n            toggleReadOnly={toggleReadOnly}\n          />\n        )}\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default MusicXMLSheet;\n","import React, { FunctionComponent, ReactElement, useState } from 'react';\nimport { Button } from './ui/Button';\nimport { ToggleButton } from './ui/ToggleButton';\nimport { ButtonGroup } from './ui/ButtonGroup';\nimport { Navbar } from './ui/Navbar';\nimport { Dropdown } from './ui/Dropdown';\n\nimport {\n  Key,\n  Measure,\n  Pitch,\n  Time,\n  Clef,\n  musicXMLToJS,\n  xmlString,\n  measureToXML,\n} from './lib/musicxml';\nimport { NoteButton } from './ui/NoteButton';\nimport { canBeamNote } from './lib/notes';\nimport MusicXMLSheet from './MusicXMLSheet';\nimport styles from './ScoreEditor.module.css';\n\nconst BackspaceIcon = () => {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 16 16\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M6.603 2h7.08a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-7.08a1 1 0 0 1-.76-.35L1 8l4.844-5.65A1 1 0 0 1 6.603 2zm7.08-1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zM5.829 5.146a.5.5 0 0 0 0 .708L7.976 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z\"\n      />\n    </svg>\n  );\n};\n\nconst PlusIcon = () => {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 16 16\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n      />\n    </svg>\n  );\n};\n\ninterface ScoreEditorProps {\n  readOnly?: boolean;\n  createScore?: Function;\n  createScoreLabel?: string;\n  notesCallback?: Function;\n  scoreCallback?: Function;\n  playNotesComponent?: ReactElement;\n}\n\nexport const ScoreEditor: FunctionComponent<ScoreEditorProps> = ({\n  readOnly = false,\n  createScore = null,\n  createScoreLabel = null,\n  notesCallback = null,\n  scoreCallback = null,\n  children = null,\n  playNotesComponent = null,\n}) => {\n  const [measures, setMeasures] = useState([\n    {\n      index: 0,\n      notes: [],\n      attributes: {\n        divisions: 2,\n        key: { fifths: 0, mode: 'major' } as Key,\n        time: { beats: 4, beatType: 4 } as Time,\n        clef: { sign: 'G', line: 2 } as Clef,\n      },\n    } as Measure,\n  ]);\n  const [currentMeasureIndex, setCurrentMeasureIndex] = useState(0);\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const [noteType, setNoteType] = useState('whole');\n  const [isRest, setIsRest] = useState(false);\n  const [accidental, setAccidental] = useState(null);\n  const [beam, setBeam] = useState(null);\n  const [dotted, setDotted] = useState(false);\n\n  const addMeasure = () => {\n    const newIndex = currentMeasureIndex + 1;\n    const newMeasure: Measure = {\n      index: newIndex,\n      notes: [],\n      attributes: null,\n      // attributes: {\n      //   divisions: 2,\n      //   key: { fifths: 0, mode: \"major\" } as Key,\n      //   time: { beats: 4, beatType: 4 } as Time,\n      //   clef: { sign: \"G\", line: 2 } as Clef,\n      // },\n    };\n    setMeasures([...measures, newMeasure]);\n    setCurrentMeasureIndex(newIndex);\n  };\n\n  const appendNote = (vfNote, accidental, appendTo = null) => {\n    const { note, measure: measureIndex } = vfNote;\n    if (note && note.pitch) {\n      let alter = note.alter;\n      if (accidental === '#') {\n        alter += 1;\n      }\n      if (accidental === 'b') {\n        alter += -1;\n      }\n      const newMeasures = measures.map((measure: Measure) => {\n        if (measure.index === measureIndex) {\n          if (appendTo) {\n            const newNote = {\n              chord: appendTo,\n              pitch: {\n                step: note.pitch[0],\n                alter,\n                octave: note.pitch[note.pitch.length - 1],\n              },\n              rest: isRest,\n              duration: 1,\n              dotted,\n              type: note.type,\n              beam,\n              // notations: { tied: false },\n            };\n            const newNotes = measure.notes;\n            let chordIndex = 0;\n            let i = 0;\n            while (chordIndex <= appendTo.noteIndex) {\n              if (!newNotes[i].chord) {\n                chordIndex += 1;\n              }\n              i++;\n            }\n            newNotes.splice(i + 1, 0, newNote);\n            return {\n              ...measure,\n              notes: newNotes,\n            };\n          }\n          // Question here is if chords need to be in note order -\n          // i.e. if your first note is say a G/4, then the second note of the chord\n          // is an E/4, should the order be G/4 -> E/4 or E/4 -> G/4 (since the E/4 is\n          // a lower note)\n          return {\n            ...measure,\n            notes: [\n              ...measure.notes,\n              {\n                chord: appendTo,\n                pitch: {\n                  step: note.pitch[0],\n                  alter,\n                  octave: note.pitch[note.pitch.length - 1],\n                },\n                rest: isRest,\n                duration: 1,\n                dotted,\n                type: note.type,\n                beam,\n                // notations: { tied: false },\n              },\n            ],\n          } as Measure;\n        }\n        return measure;\n      });\n      setMeasures(newMeasures);\n      setSelectedNote({\n        measureIndex: currentMeasureIndex,\n        noteIndex: newMeasures[currentMeasureIndex].notes.length - 1,\n      });\n      if (beam === 'end') {\n        setBeam(null);\n      }\n      if (notesCallback) {\n        notesCallback(\n          newMeasures[currentMeasureIndex].notes,\n          newMeasures[currentMeasureIndex].attributes.key\n        );\n      }\n    }\n  };\n\n  const removeNote = () => {\n    if (\n      selectedNote &&\n      measures[currentMeasureIndex] &&\n      measures[currentMeasureIndex].notes.length > 0\n    ) {\n      // TO-DO: here we really need a way to determine which note in a chord\n      // was selected. Currently we're passing a Vexflow Tick instance, which is the\n      // entire chord.\n      const note =\n        measures[selectedNote.measureIndex].notes[selectedNote.noteIndex];\n\n      const getNext = (current, noteIndex) => {\n        const next = measures[selectedNote.measureIndex].notes[noteIndex + 1];\n        if (next && next.chord) {\n          return [current, ...getNext(next, noteIndex + 1)];\n        }\n        return [current];\n      };\n      // if the note is the root note of a chord, it's chord prop will be null, but subsequent\n      // notes will have the chord prop to indicate it's part of a chord\n      // hence we get the next note in the chord, and set that to null to indicate it's the root\n      if (!note.chord) {\n        const nextNotes = getNext(note, selectedNote.noteIndex);\n        if (nextNotes.length > 1) {\n          nextNotes[1].chord = null;\n        }\n      }\n      const notesToRemove = [note];\n      setMeasures(\n        measures.map((measure, measureIndex) => {\n          if (measureIndex === selectedNote.measureIndex) {\n            return {\n              ...measure,\n              notes: measure.notes.filter((n) => {\n                return !notesToRemove.includes(n);\n              }),\n            };\n          }\n          return measure;\n        })\n      );\n      const newNoteIndex = measures[currentMeasureIndex].notes.length - 2;\n      if (newNoteIndex < 0) {\n        setSelectedNote(null);\n      } else {\n        setSelectedNote({\n          measureIndex: currentMeasureIndex,\n          noteIndex: newNoteIndex,\n        });\n      }\n    } else if (\n      measures[currentMeasureIndex] &&\n      measures[currentMeasureIndex].notes &&\n      measures[currentMeasureIndex].notes.length > 0\n    ) {\n      // Remove last/current measure if it's empty and no note is selected\n      const newNotes = measures[currentMeasureIndex].notes.slice(0, -1);\n      setMeasures(\n        measures.map((measure) => {\n          if (measure.index === currentMeasureIndex) {\n            return {\n              ...measure,\n              notes: newNotes,\n            };\n          }\n          return measure;\n        })\n      );\n      setSelectedNote({\n        measureIndex: currentMeasureIndex,\n        noteIndex: measures[currentMeasureIndex].notes.length - 2,\n      });\n    } else if (measures.length > 1) {\n      const newMeasures = measures;\n      newMeasures.splice(currentMeasureIndex, 1);\n      setMeasures(newMeasures);\n      setCurrentMeasureIndex(currentMeasureIndex - 1);\n    }\n  };\n\n  const updateClef = (e) => {\n    const newValue = e.target.value;\n    setMeasures(\n      measures.map((measure: Measure) => {\n        if (measure.index === 0) {\n          return {\n            ...measure,\n            attributes: {\n              ...attributes,\n              clef: {\n                sign: newValue,\n                line: attributes.clef.line,\n              },\n            },\n          } as Measure;\n        }\n        return measure;\n      })\n    );\n  };\n\n  const tieNote = () => {\n    setMeasures(\n      measures.map((measure, measureIndex) => {\n        if (measureIndex === selectedNote.measureIndex) {\n          return {\n            ...measure,\n            notes: measure.notes.map((note, index) => {\n              if (index === selectedNote.noteIndex) {\n                if (note.tie) {\n                  return { ...note, tie: null };\n                }\n                return { ...note, tie: 'start' };\n              } else if (index === selectedNote.noteIndex + 1) {\n                if (note.tie) {\n                  return { ...note, tie: null };\n                }\n                return { ...note, tie: 'stop' };\n              }\n              return note;\n            }),\n          };\n        }\n        return measure;\n      })\n    );\n  };\n\n  const xmlSheet = xmlString(measures.map((measure) => measureToXML(measure)));\n\n  const parsedXML = musicXMLToJS(xmlSheet);\n  if (scoreCallback) {\n    scoreCallback(parsedXML);\n  }\n\n  const currentMeasure = measures[currentMeasureIndex];\n\n  let attributes = currentMeasure && currentMeasure.attributes;\n  if (!attributes) {\n    attributes = measures[0].attributes;\n  }\n\n  let canTie = false;\n  if (selectedNote) {\n    const nextNote =\n      measures[selectedNote.measureIndex].notes[selectedNote.noteIndex + 1];\n    if (nextNote) {\n      const selected =\n        measures[selectedNote.measureIndex].notes[selectedNote.noteIndex];\n\n      if (\n        selected.pitch.step === nextNote.pitch.step &&\n        selected.pitch.octave === nextNote.pitch.octave\n      ) {\n        canTie = true;\n      }\n    }\n  }\n\n  return (\n    <div>\n      {!readOnly && (\n        <Navbar>\n          <Dropdown onChange={updateClef}>\n            <option key=\"clef-dropdown-0\">G</option>\n            <option key=\"clef-dropdown-1\">F</option>\n          </Dropdown>\n          <form className={`${styles.form}`}>\n            <input\n              type=\"number\"\n              aria-label=\"Beat\"\n              value={attributes && attributes.time.beats}\n              className={styles.timeInput}\n              style={{ textAlign: 'right' }}\n              onChange={(e) => {\n                setMeasures(\n                  measures.map((measure: Measure) => {\n                    if (measure.index === 0) {\n                      return {\n                        ...measure,\n                        attributes: {\n                          ...measure.attributes,\n                          time: {\n                            beats: parseInt(e.target.value),\n                            beatType: measure.attributes.time.beatType,\n                          },\n                        },\n                      } as Measure;\n                    }\n                    return measure;\n                  })\n                );\n              }}\n            />\n          </form>\n          <form className={`${styles.form}`}>\n            <input\n              type=\"number\"\n              aria-label=\"Time\"\n              value={attributes && attributes.time.beatType}\n              style={{ textAlign: 'left' }}\n              className={styles.timeInput}\n              onChange={(e) => {\n                setMeasures(\n                  measures.map((measure: Measure) => {\n                    if (measure.index === 0) {\n                      return {\n                        ...measure,\n                        attributes: {\n                          ...measure.attributes,\n                          time: {\n                            beatType: parseInt(e.target.value),\n                            beats: measure.attributes.time.beats,\n                          },\n                        },\n                      } as Measure;\n                    }\n                    return measure;\n                  })\n                );\n              }}\n            />\n          </form>\n          <form className={`${styles.form} ${styles.tooltip}`}>\n            <input\n              type=\"number\"\n              aria-label=\"Fifths\"\n              value={attributes && attributes.key.fifths}\n              onChange={(e) => {\n                setMeasures(\n                  measures.map((measure: Measure) => {\n                    if (measure.index === 0) {\n                      return {\n                        ...measure,\n                        attributes: {\n                          ...measure.attributes,\n                          key: {\n                            fifths: parseInt(e.target.value),\n                            mode: measure.attributes.key.mode,\n                          },\n                        },\n                      } as Measure;\n                    }\n                    return measure;\n                  })\n                );\n              }}\n            />\n          </form>\n          <ButtonGroup>\n            <ToggleButton\n              checked={accidental === '#'}\n              onClick={(e) => {\n                if (accidental !== '#') {\n                  setAccidental('#');\n                } else {\n                  setAccidental(null);\n                }\n              }}\n            >\n              ♯\n            </ToggleButton>\n            <ToggleButton\n              checked={accidental === 'b'}\n              onClick={(e) => {\n                if (accidental !== 'b') {\n                  setAccidental('b');\n                } else {\n                  setAccidental(null);\n                }\n              }}\n            >\n              ♭\n            </ToggleButton>\n            <ToggleButton\n              checked={accidental === 'n'}\n              onClick={(e) => {\n                if (accidental !== 'n') {\n                  setAccidental('n');\n                } else {\n                  setAccidental(null);\n                }\n              }}\n            >\n              ♮\n            </ToggleButton>\n          </ButtonGroup>\n          <ButtonGroup>\n            <ToggleButton\n              id=\"restToggleButton\"\n              checked={isRest}\n              onClick={() => {\n                setIsRest(true);\n              }}\n            >\n              rest\n            </ToggleButton>\n            <ToggleButton\n              id=\"noteToggleButton\"\n              checked={!isRest}\n              onClick={() => {\n                setIsRest(false);\n              }}\n            >\n              note\n            </ToggleButton>\n          </ButtonGroup>\n          <ButtonGroup>\n            <NoteButton\n              noteType=\"whole\"\n              current={noteType}\n              isRest={isRest}\n              onClick={() => setNoteType('whole')}\n            />\n            <NoteButton\n              noteType=\"half\"\n              current={noteType}\n              isRest={isRest}\n              onClick={() => setNoteType('half')}\n            />\n            <NoteButton\n              noteType=\"quarter\"\n              current={noteType}\n              isRest={isRest}\n              onClick={() => setNoteType('quarter')}\n            />\n            <NoteButton\n              noteType=\"eighth\"\n              current={noteType}\n              isRest={isRest}\n              onClick={() => setNoteType('eighth')}\n            />\n            <NoteButton\n              noteType=\"16th\"\n              current={noteType}\n              isRest={isRest}\n              onClick={() => setNoteType('16th')}\n            />\n            <NoteButton\n              noteType=\"32nd\"\n              current={noteType}\n              isRest={isRest}\n              onClick={() => setNoteType('32nd')}\n            />\n          </ButtonGroup>\n          <ButtonGroup>\n            <ToggleButton\n              id=\"dottedToggleButton\"\n              checked={dotted}\n              onClick={(e) => setDotted(!dotted)}\n            >\n              Dot\n            </ToggleButton>\n            <ToggleButton\n              id=\"beamToggleButton\"\n              disabled={!canBeamNote(noteType)}\n              checked={beam === 'begin' ? true : false}\n              onClick={(e) => {\n                if (beam === null) {\n                  setBeam('begin');\n                } else if (beam === 'begin') {\n                  setMeasures(\n                    measures.map((measure) => {\n                      if (measure.index === measures.length - 1) {\n                        return {\n                          ...measure,\n                          notes: measure.notes.map((note, index) => {\n                            if (index === measure.notes.length - 1) {\n                              return { ...note, beam: 'end' };\n                            }\n                            return note;\n                          }),\n                        };\n                      }\n                      return measure;\n                    })\n                  );\n                  setBeam(null);\n                }\n              }}\n            >\n              Beam\n            </ToggleButton>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button disabled={!canTie} id=\"tieButton\" onClick={tieNote}>\n              Tie\n            </Button>\n            <Button id=\"removeNoteButton\" onClick={removeNote}>\n              <BackspaceIcon />\n            </Button>\n            <Button id=\"addMeasureButton\" onClick={() => addMeasure()}>\n              <PlusIcon />\n            </Button>\n            {createScoreLabel && (\n              <Button className=\"ml-4\" onClick={() => createScore(xmlSheet)}>\n                {createScoreLabel}\n              </Button>\n            )}\n          </ButtonGroup>\n        </Navbar>\n      )}\n      <MusicXMLSheet\n        id=\"xmlsheet\"\n        xml={parsedXML}\n        noteType={noteType}\n        appendNote={appendNote}\n        accidental={accidental}\n        isRest={isRest}\n        selectedNote={selectedNote}\n        setSelectedNote={setSelectedNote}\n        playNotesComponent={playNotesComponent}\n      />\n      <div>{children}</div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}