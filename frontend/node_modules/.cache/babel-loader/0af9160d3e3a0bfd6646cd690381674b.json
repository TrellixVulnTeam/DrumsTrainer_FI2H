{"ast":null,"code":"var _jsxFileName = \"/home/elad/Desktop/Repos/drums-trainer/frontend/src/components/Exercise/Exercise.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect, CSSProperties } from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport { Container, Row, Col } from 'reactstrap';\nimport Widget from \"../../components/Widget/Widget.js\";\nimport s from \"./Exercise.module.scss\";\nimport SheetMusic from 'react-sheet-music';\nimport { Notation } from 'react-abc';\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Metronome from './Metronome/Metronome.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Exercise({ ...props\n}) {\n  _s();\n\n  const [exerciseDetails, setExerciseDetails] = useState({});\n  let [exerciseId, setExerciseId] = useState(0);\n  let [loading, setLoading] = useState(false);\n  useEffect(() => {\n    var url = `/get-exercises`;\n    setLoading(true);\n    fetch(url).then(res => res.json().then(data => {\n      // console.log(data);\n      setExerciseDetails(data); // console.log(exerciseDetails)\n    }).catch(err => {\n      console.log(err);\n    }));\n    setLoading(false);\n  }, []);\n\n  function updateExerciseId() {\n    if (exerciseId + 1 === exerciseDetails.length) {\n      setExerciseId(0);\n    } else {\n      setExerciseId(exerciseId + 1);\n    }\n  }\n\n  if (exerciseId === -1) {\n    console.log(exerciseId);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          class: \"mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n            sizeUnit: \"px\",\n            size: 35,\n            color: '#4c54e4',\n            loading: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  } else if (loading || exerciseDetails.length === 0 || exerciseDetails[exerciseId] === undefined) {\n    console.log(exerciseId);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: s.sheetCol,\n          children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n            sizeUnit: \"px\",\n            size: 35,\n            color: '#4c54e4',\n            loading: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  } else {\n    console.log(exerciseId);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: exerciseDetails[exerciseId].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: s.sheetCol,\n          children: /*#__PURE__*/_jsxDEV(Notation, {\n            notation: exerciseDetails[exerciseId].notation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        height: \"12px\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: exerciseDetails[exerciseId].categories.map(function (item, i) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"badge badge-primary p-3 mr-2\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n            isPlaying: true,\n            duration: props.duration,\n            colors: ['#004777', '#F7B801', '#A30000', '#A30000'],\n            colorsTime: [7, 5, 2, 0],\n            size: 50,\n            strokeWidth: 1,\n            onComplete: () => {\n              updateExerciseId();\n              return {\n                shouldRepeat: true\n              }; // repeat animation in 1.5 seconds\n            },\n            children: ({\n              remainingTime\n            }) => {\n              const minutes = Math.floor(remainingTime / 60);\n              const seconds = remainingTime % 60;\n              return `${minutes}:${seconds}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Metronome, {\n            exercise: exerciseDetails[exerciseId]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Exercise, \"TdEwDQw0264TPwKH0y867FQdmmU=\");\n\n_c = Exercise;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"sources":["/home/elad/Desktop/Repos/drums-trainer/frontend/src/components/Exercise/Exercise.js"],"names":["React","Component","useState","useEffect","CSSProperties","CountdownCircleTimer","Container","Row","Col","Widget","s","SheetMusic","Notation","css","ClipLoader","Metronome","Exercise","props","exerciseDetails","setExerciseDetails","exerciseId","setExerciseId","loading","setLoading","url","fetch","then","res","json","data","catch","err","console","log","updateExerciseId","length","undefined","sheetCol","name","notation","categories","map","item","i","duration","shouldRepeat","remainingTime","minutes","Math","floor","seconds"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, CSSProperties } from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport {\n    Container,\n    Row, Col\n}from 'reactstrap';\nimport Widget from \"../../components/Widget/Widget.js\";\nimport s from \"./Exercise.module.scss\";\nimport SheetMusic from 'react-sheet-music';\nimport {Notation} from 'react-abc';\n\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Metronome from './Metronome/Metronome.js';\n  \nexport default function Exercise ({ ...props }) {\n    const [exerciseDetails, setExerciseDetails] = useState({});\n    let [exerciseId, setExerciseId] = useState(0);\n    let [loading, setLoading] = useState(false);\n  \n\n\n    useEffect(() => {\n        var url = `/get-exercises`;\n        setLoading(true);    \n        fetch(url).then(\n            res => res.json()\n            .then(data => {\n                // console.log(data);\n                setExerciseDetails(data);\n                // console.log(exerciseDetails)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        )\n        setLoading(false);\n    }, []);\n\n    \n    function updateExerciseId() {\n        if(exerciseId + 1 === exerciseDetails.length){\n            setExerciseId(0);\n        }\n        else {\n            setExerciseId(exerciseId+1);\n        }\n    }\n    if (exerciseId === -1) {\n        console.log(exerciseId)\n        return (\n            <Container>\n                <Row>\n                    <Col class='mx-auto'>\n                        <ClipLoader\n                        sizeUnit={\"px\"}\n                        size={35}\n                        color={'#4c54e4'}\n                        loading={true}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n    else if(loading || exerciseDetails.length === 0 || exerciseDetails[exerciseId] === undefined) {\n        console.log(exerciseId)\n        return (\n            <Container>\n                <Row>\n                    <Col className={s.sheetCol}>\n                        <ClipLoader\n                        sizeUnit={\"px\"}\n                        size={35}\n                        color={'#4c54e4'}\n                        loading={true}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n    else {\n        console.log(exerciseId)\n        return (\n            <Container>\n                     <Row>\n                         <Col>\n                           <h2>{exerciseDetails[exerciseId].name}</h2>\n                         </Col> \n                     </Row>\n                     <Row>\n                         <Col className={s.sheetCol}>\n                             <Notation \n                             notation={exerciseDetails[exerciseId].notation}/>\n                         </Col>\n                     </Row>\n             <Row height='12px'>\n                 <Col>\n                    {exerciseDetails[exerciseId].categories.map(function(item, i){\n                        return <span class='badge badge-primary p-3 mr-2'>{item}</span>;\n                    })}\n                </Col>\n                <Col>\n                    <CountdownCircleTimer\n                    isPlaying\n                    duration={props.duration}\n                    colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n                    colorsTime={[7, 5, 2, 0]}\n                    size={50}\n                    strokeWidth={1}\n                    onComplete={() => {\n                        updateExerciseId();\n                        return { shouldRepeat: true} // repeat animation in 1.5 seconds\n                    }}\n                    >\n                       \n                    {({ remainingTime }) =>\n                     {\n                        const minutes = Math.floor(remainingTime / 60)\n                        const seconds = remainingTime % 60\n                        return `${minutes}:${seconds}`                \n                     }\n                    }\n\n\n                    </CountdownCircleTimer>\n                </Col>\n                <Col>\n                    <Metronome exercise={exerciseDetails[exerciseId]}/>\n                </Col>\n            </Row>\n            </Container>\n        )\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}