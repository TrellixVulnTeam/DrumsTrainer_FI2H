{"ast":null,"code":"var tunebook = require('./abc_tunebook');\n\nvar Tune = require('../data/abc_tune');\n\nvar EngraverController = require('../write/abc_engraver_controller');\n\nvar Parse = require('../parse/abc_parse');\n\nvar wrap = require('../parse/wrap_lines');\n\nvar resizeDivs = {};\n\nfunction resizeOuter() {\n  var width = window.innerWidth;\n\n  for (var id in resizeDivs) {\n    if (resizeDivs.hasOwnProperty(id)) {\n      var outer = resizeDivs[id];\n      var ofs = outer.offsetLeft;\n      width -= ofs * 2;\n      outer.style.width = width + \"px\";\n    }\n  }\n}\n\nwindow.addEventListener(\"resize\", resizeOuter);\nwindow.addEventListener(\"orientationChange\", resizeOuter);\n\nfunction renderOne(div, tune, params, tuneNumber) {\n  if (params.viewportHorizontal) {\n    // Create an inner div that holds the music, so that the passed in div will be the viewport.\n    div.innerHTML = '<div class=\"abcjs-inner\"></div>';\n\n    if (params.scrollHorizontal) {\n      div.style.overflowX = \"auto\";\n      div.style.overflowY = \"hidden\";\n    } else div.style.overflow = \"hidden\";\n\n    resizeDivs[div.id] = div; // We use a hash on the element's id so that multiple calls won't keep adding to the list.\n\n    div = div.children[0]; // The music should be rendered in the inner div.\n  } else if (params.viewportVertical) {\n    // Create an inner div that holds the music, so that the passed in div will be the viewport.\n    div.innerHTML = '<div class=\"abcjs-inner scroll-amount\"></div>';\n    div.style.overflowX = \"hidden\";\n    div.style.overflowY = \"auto\";\n    div = div.children[0]; // The music should be rendered in the inner div.\n  } else div.innerHTML = \"\";\n\n  var engraver_controller = new EngraverController(div, params);\n  engraver_controller.engraveABC(tune, tuneNumber);\n  tune.engraver = engraver_controller;\n\n  if (params.viewportVertical || params.viewportHorizontal) {\n    // If we added a wrapper around the div, then we need to size the wrapper, too.\n    var parent = div.parentNode;\n    parent.style.width = div.style.width;\n  }\n}\n\nfunction renderEachLineSeparately(div, tune, params, tuneNumber) {\n  function initializeTuneLine(tune) {\n    var obj = new Tune();\n    obj.formatting = tune.formatting;\n    obj.media = tune.media;\n    obj.version = tune.version;\n    obj.metaText = {};\n    obj.lines = [];\n    return obj;\n  } // Before rendering, chop up the returned tune into an array where each element is a line.\n  // The first element of the array gets the title and other items that go on top, the last element\n  // of the array gets the extra text that goes on bottom. Each element gets any non-music info that comes before it.\n\n\n  var tunes = [];\n  var tuneLine;\n\n  for (var i = 0; i < tune.lines.length; i++) {\n    var line = tune.lines[i];\n    if (!tuneLine) tuneLine = initializeTuneLine(tune);\n\n    if (i === 0) {\n      // These items go on top of the music\n      tuneLine.metaText.tempo = tune.metaText.tempo;\n      tuneLine.metaText.title = tune.metaText.title;\n      tuneLine.metaText.header = tune.metaText.header;\n      tuneLine.metaText.rhythm = tune.metaText.rhythm;\n      tuneLine.metaText.origin = tune.metaText.origin;\n      tuneLine.metaText.composer = tune.metaText.composer;\n      tuneLine.metaText.author = tune.metaText.author;\n      tuneLine.metaText.partOrder = tune.metaText.partOrder;\n    } // push the lines until we get to a music line\n\n\n    tuneLine.lines.push(line);\n\n    if (line.staff) {\n      tunes.push(tuneLine);\n      tuneLine = undefined;\n    }\n  } // Add any extra stuff to the last line.\n\n\n  if (tuneLine) {\n    var lastLine = tunes[tunes.length - 1];\n\n    for (var j = 0; j < tuneLine.lines.length; j++) lastLine.lines.push(tuneLine.lines[j]);\n  } // These items go below the music\n\n\n  tuneLine = tunes[tunes.length - 1];\n  tuneLine.metaText.unalignedWords = tune.metaText.unalignedWords;\n  tuneLine.metaText.book = tune.metaText.book;\n  tuneLine.metaText.source = tune.metaText.source;\n  tuneLine.metaText.discography = tune.metaText.discography;\n  tuneLine.metaText.notes = tune.metaText.notes;\n  tuneLine.metaText.transcription = tune.metaText.transcription;\n  tuneLine.metaText.history = tune.metaText.history;\n  tuneLine.metaText['abc-copyright'] = tune.metaText['abc-copyright'];\n  tuneLine.metaText['abc-creator'] = tune.metaText['abc-creator'];\n  tuneLine.metaText['abc-edited-by'] = tune.metaText['abc-edited-by'];\n  tuneLine.metaText.footer = tune.metaText.footer; // Now create sub-divs and render each line. Need to copy the params to change the padding for the interior slices.\n\n  var ep = {};\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      ep[key] = params[key];\n    }\n  }\n\n  var origPaddingTop = ep.paddingtop;\n  var origPaddingBottom = ep.paddingbottom;\n  div.innerHTML = \"\";\n\n  for (var k = 0; k < tunes.length; k++) {\n    var lineEl = document.createElement(\"div\");\n    div.appendChild(lineEl);\n\n    if (k === 0) {\n      ep.paddingtop = origPaddingTop;\n      ep.paddingbottom = -20;\n    } else if (k === tunes.length - 1) {\n      ep.paddingtop = 10;\n      ep.paddingbottom = origPaddingBottom;\n    } else {\n      ep.paddingtop = 10;\n      ep.paddingbottom = -20;\n    }\n\n    renderOne(lineEl, tunes[k], ep, tuneNumber);\n    if (k === 0) tune.engraver = tunes[k].engraver;else {\n      if (!tune.engraver.staffgroups) tune.engraver.staffgroups = tunes[k].engraver.staffgroups;else if (tunes[k].engraver.staffgroups.length > 0) tune.engraver.staffgroups.push(tunes[k].engraver.staffgroups[0]);\n    }\n  }\n} // A quick way to render a tune from javascript when interactivity is not required.\n// This is used when a javascript routine has some abc text that it wants to render\n// in a div or collection of divs. One tune or many can be rendered.\n//\n// parameters:\n//      output: an array of divs that the individual tunes are rendered to.\n//          If the number of tunes exceeds the number of divs in the array, then\n//          only the first tunes are rendered. If the number of divs exceeds the number\n//          of tunes, then the unused divs are cleared. The divs can be passed as either\n//          elements or strings of ids. If ids are passed, then the div MUST exist already.\n//          (if a single element is passed, then it is an implied array of length one.)\n//          (if a null is passed for an element, or the element doesn't exist, then that tune is skipped.)\n//      abc: text representing a tune or an entire tune book in ABC notation.\n//      renderParams: hash of:\n//          startingTune: an index, starting at zero, representing which tune to start rendering at.\n//              (If this element is not present, then rendering starts at zero.)\n//          width: 800 by default. The width in pixels of the output paper\n\n\nvar renderAbc = function (output, abc, parserParams, engraverParams, renderParams) {\n  // Note: all parameters have been condensed into the first ones. It doesn't hurt anything to allow the old format, so just copy them here.\n  var params = {};\n  var key;\n\n  if (parserParams) {\n    for (key in parserParams) {\n      if (parserParams.hasOwnProperty(key)) {\n        params[key] = parserParams[key];\n      }\n    }\n  }\n\n  if (engraverParams) {\n    for (key in engraverParams) {\n      if (engraverParams.hasOwnProperty(key)) {\n        // There is a conflict with the name of the parameter \"listener\". If it is in the second parameter, then it is for click.\n        if (key === \"listener\") {\n          if (engraverParams[key].highlight) params.clickListener = engraverParams[key].highlight;\n        } else params[key] = engraverParams[key];\n      }\n    }\n  }\n\n  if (renderParams) {\n    for (key in renderParams) {\n      if (renderParams.hasOwnProperty(key)) {\n        params[key] = renderParams[key];\n      }\n    }\n  }\n\n  function callback(div, tune, tuneNumber, abcString) {\n    var removeDiv = false;\n\n    if (div === \"*\") {\n      removeDiv = true;\n      div = document.createElement(\"div\");\n      div.setAttribute(\"style\", \"display:none;\");\n      document.body.appendChild(div);\n    }\n\n    if (params.afterParsing) params.afterParsing(tune, tuneNumber, abcString);\n\n    if (!removeDiv && params.wrap && params.staffwidth) {\n      tune = doLineWrapping(div, tune, tuneNumber, abcString, params);\n      return tune;\n    } else if (removeDiv || !params.oneSvgPerLine || tune.lines.length < 2) renderOne(div, tune, params, tuneNumber);else renderEachLineSeparately(div, tune, params, tuneNumber);\n\n    if (removeDiv) div.parentNode.removeChild(div);\n    return null;\n  }\n\n  return tunebook.renderEngine(callback, output, abc, params);\n};\n\nfunction doLineWrapping(div, tune, tuneNumber, abcString, params) {\n  var engraver_controller = new EngraverController(div, params);\n  var widths = engraver_controller.getMeasureWidths(tune);\n  var ret = wrap.calcLineWraps(tune, widths, abcString, params, Parse, engraver_controller);\n  if (!params.oneSvgPerLine || ret.tune.lines.length < 2) renderOne(div, ret.tune, ret.revisedParams, tuneNumber);else renderEachLineSeparately(div, ret.tune, ret.revisedParams, tuneNumber);\n  ret.tune.explanation = ret.explanation;\n  return ret.tune;\n}\n\nmodule.exports = renderAbc;","map":{"version":3,"sources":["/home/elad/Desktop/Repos/drums-trainer/frontend/node_modules/react-sheet-music/node_modules/abcjs/src/api/abc_tunebook_svg.js"],"names":["tunebook","require","Tune","EngraverController","Parse","wrap","resizeDivs","resizeOuter","width","window","innerWidth","id","hasOwnProperty","outer","ofs","offsetLeft","style","addEventListener","renderOne","div","tune","params","tuneNumber","viewportHorizontal","innerHTML","scrollHorizontal","overflowX","overflowY","overflow","children","viewportVertical","engraver_controller","engraveABC","engraver","parent","parentNode","renderEachLineSeparately","initializeTuneLine","obj","formatting","media","version","metaText","lines","tunes","tuneLine","i","length","line","tempo","title","header","rhythm","origin","composer","author","partOrder","push","staff","undefined","lastLine","j","unalignedWords","book","source","discography","notes","transcription","history","footer","ep","key","origPaddingTop","paddingtop","origPaddingBottom","paddingbottom","k","lineEl","document","createElement","appendChild","staffgroups","renderAbc","output","abc","parserParams","engraverParams","renderParams","highlight","clickListener","callback","abcString","removeDiv","setAttribute","body","afterParsing","staffwidth","doLineWrapping","oneSvgPerLine","removeChild","renderEngine","widths","getMeasureWidths","ret","calcLineWraps","revisedParams","explanation","module","exports"],"mappings":"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","sourcesContent":["var tunebook = require('./abc_tunebook');\nvar Tune = require('../data/abc_tune');\n\nvar EngraverController = require('../write/abc_engraver_controller');\nvar Parse = require('../parse/abc_parse');\nvar wrap = require('../parse/wrap_lines');\n\nvar resizeDivs = {};\nfunction resizeOuter() {\n    var width = window.innerWidth;\n    for (var id in resizeDivs) {\n        if (resizeDivs.hasOwnProperty(id)) {\n            var outer = resizeDivs[id];\n            var ofs = outer.offsetLeft;\n            width -= ofs * 2;\n            outer.style.width = width + \"px\";\n        }\n    }\n}\n\nwindow.addEventListener(\"resize\", resizeOuter);\nwindow.addEventListener(\"orientationChange\", resizeOuter);\n\nfunction renderOne(div, tune, params, tuneNumber) {\n    if (params.viewportHorizontal) {\n        // Create an inner div that holds the music, so that the passed in div will be the viewport.\n        div.innerHTML = '<div class=\"abcjs-inner\"></div>';\n        if (params.scrollHorizontal) {\n            div.style.overflowX = \"auto\";\n            div.style.overflowY = \"hidden\";\n        } else\n            div.style.overflow = \"hidden\";\n        resizeDivs[div.id] = div; // We use a hash on the element's id so that multiple calls won't keep adding to the list.\n        div = div.children[0]; // The music should be rendered in the inner div.\n    }\n    else if (params.viewportVertical) {\n        // Create an inner div that holds the music, so that the passed in div will be the viewport.\n        div.innerHTML = '<div class=\"abcjs-inner scroll-amount\"></div>';\n        div.style.overflowX = \"hidden\";\n        div.style.overflowY = \"auto\";\n        div = div.children[0]; // The music should be rendered in the inner div.\n    }\n    else\n\t    div.innerHTML = \"\";\n    var engraver_controller = new EngraverController(div, params);\n    engraver_controller.engraveABC(tune, tuneNumber);\n    tune.engraver = engraver_controller;\n    if (params.viewportVertical || params.viewportHorizontal) {\n        // If we added a wrapper around the div, then we need to size the wrapper, too.\n        var parent = div.parentNode;\n        parent.style.width = div.style.width;\n    }\n}\n\nfunction renderEachLineSeparately(div, tune, params, tuneNumber) {\n    function initializeTuneLine(tune) {\n        var obj = new Tune();\n        obj.formatting = tune.formatting;\n        obj.media = tune.media;\n        obj.version = tune.version;\n        obj.metaText = {};\n        obj.lines = [];\n        return obj;\n    }\n\n    // Before rendering, chop up the returned tune into an array where each element is a line.\n    // The first element of the array gets the title and other items that go on top, the last element\n    // of the array gets the extra text that goes on bottom. Each element gets any non-music info that comes before it.\n    var tunes = [];\n    var tuneLine;\n    for (var i = 0; i < tune.lines.length; i++) {\n        var line = tune.lines[i];\n        if (!tuneLine)\n            tuneLine = initializeTuneLine(tune);\n\n        if (i === 0) {\n            // These items go on top of the music\n            tuneLine.metaText.tempo = tune.metaText.tempo;\n            tuneLine.metaText.title = tune.metaText.title;\n            tuneLine.metaText.header = tune.metaText.header;\n            tuneLine.metaText.rhythm = tune.metaText.rhythm;\n            tuneLine.metaText.origin = tune.metaText.origin;\n            tuneLine.metaText.composer = tune.metaText.composer;\n            tuneLine.metaText.author = tune.metaText.author;\n            tuneLine.metaText.partOrder = tune.metaText.partOrder;\n        }\n\n        // push the lines until we get to a music line\n        tuneLine.lines.push(line);\n        if (line.staff) {\n            tunes.push(tuneLine);\n            tuneLine = undefined;\n        }\n    }\n    // Add any extra stuff to the last line.\n    if (tuneLine) {\n        var lastLine = tunes[tunes.length-1];\n        for (var j = 0; j < tuneLine.lines.length; j++)\n            lastLine.lines.push(tuneLine.lines[j]);\n    }\n\n    // These items go below the music\n    tuneLine = tunes[tunes.length-1];\n    tuneLine.metaText.unalignedWords = tune.metaText.unalignedWords;\n    tuneLine.metaText.book = tune.metaText.book;\n    tuneLine.metaText.source = tune.metaText.source;\n    tuneLine.metaText.discography = tune.metaText.discography;\n    tuneLine.metaText.notes = tune.metaText.notes;\n    tuneLine.metaText.transcription = tune.metaText.transcription;\n    tuneLine.metaText.history = tune.metaText.history;\n    tuneLine.metaText['abc-copyright'] = tune.metaText['abc-copyright'];\n    tuneLine.metaText['abc-creator'] = tune.metaText['abc-creator'];\n    tuneLine.metaText['abc-edited-by'] = tune.metaText['abc-edited-by'];\n    tuneLine.metaText.footer = tune.metaText.footer;\n\n    // Now create sub-divs and render each line. Need to copy the params to change the padding for the interior slices.\n    var ep = {};\n    for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n            ep[key] = params[key];\n        }\n    }\n    var origPaddingTop = ep.paddingtop;\n    var origPaddingBottom = ep.paddingbottom;\n    div.innerHTML = \"\";\n    for (var k = 0; k < tunes.length; k++) {\n        var lineEl = document.createElement(\"div\");\n        div.appendChild(lineEl);\n\n        if (k === 0) {\n\t        ep.paddingtop = origPaddingTop;\n\t        ep.paddingbottom = -20;\n        } else if (k === tunes.length-1) {\n\t        ep.paddingtop = 10;\n\t        ep.paddingbottom = origPaddingBottom;\n        } else {\n\t        ep.paddingtop = 10;\n\t        ep.paddingbottom = -20;\n        }\n        renderOne(lineEl, tunes[k], ep, tuneNumber);\n        if (k === 0)\n            tune.engraver = tunes[k].engraver;\n        else {\n            if (!tune.engraver.staffgroups)\n                tune.engraver.staffgroups = tunes[k].engraver.staffgroups;\n            else if (tunes[k].engraver.staffgroups.length > 0)\n                tune.engraver.staffgroups.push(tunes[k].engraver.staffgroups[0]);\n        }\n    }\n}\n\n// A quick way to render a tune from javascript when interactivity is not required.\n// This is used when a javascript routine has some abc text that it wants to render\n// in a div or collection of divs. One tune or many can be rendered.\n//\n// parameters:\n//      output: an array of divs that the individual tunes are rendered to.\n//          If the number of tunes exceeds the number of divs in the array, then\n//          only the first tunes are rendered. If the number of divs exceeds the number\n//          of tunes, then the unused divs are cleared. The divs can be passed as either\n//          elements or strings of ids. If ids are passed, then the div MUST exist already.\n//          (if a single element is passed, then it is an implied array of length one.)\n//          (if a null is passed for an element, or the element doesn't exist, then that tune is skipped.)\n//      abc: text representing a tune or an entire tune book in ABC notation.\n//      renderParams: hash of:\n//          startingTune: an index, starting at zero, representing which tune to start rendering at.\n//              (If this element is not present, then rendering starts at zero.)\n//          width: 800 by default. The width in pixels of the output paper\nvar renderAbc = function(output, abc, parserParams, engraverParams, renderParams) {\n    // Note: all parameters have been condensed into the first ones. It doesn't hurt anything to allow the old format, so just copy them here.\n    var params = {};\n    var key;\n    if (parserParams) {\n        for (key in parserParams) {\n            if (parserParams.hasOwnProperty(key)) {\n                params[key] = parserParams[key];\n            }\n        }\n    }\n    if (engraverParams) {\n        for (key in engraverParams) {\n            if (engraverParams.hasOwnProperty(key)) {\n\t            // There is a conflict with the name of the parameter \"listener\". If it is in the second parameter, then it is for click.\n\t            if (key === \"listener\") {\n\t            \tif (engraverParams[key].highlight)\n\t\t                params.clickListener = engraverParams[key].highlight;\n\t            } else\n                    params[key] = engraverParams[key];\n            }\n        }\n    }\n    if (renderParams) {\n        for (key in renderParams) {\n            if (renderParams.hasOwnProperty(key)) {\n                params[key] = renderParams[key];\n            }\n        }\n    }\n\n    function callback(div, tune, tuneNumber, abcString) {\n        var removeDiv = false;\n        if (div === \"*\") {\n            removeDiv = true;\n            div = document.createElement(\"div\");\n            div.setAttribute(\"style\", \"display:none;\");\n            document.body.appendChild(div);\n        }\n    \tif (params.afterParsing)\n    \t\tparams.afterParsing(tune, tuneNumber, abcString);\n        if (!removeDiv && params.wrap && params.staffwidth) {\n\t        tune = doLineWrapping(div, tune, tuneNumber, abcString, params);\n\t        return tune;\n        }\n        else if (removeDiv || !params.oneSvgPerLine || tune.lines.length < 2)\n            renderOne(div, tune, params, tuneNumber);\n        else\n            renderEachLineSeparately(div, tune, params, tuneNumber);\n        if (removeDiv)\n            div.parentNode.removeChild(div);\n        return null;\n    }\n\n    return tunebook.renderEngine(callback, output, abc, params);\n};\n\nfunction doLineWrapping(div, tune, tuneNumber, abcString, params) {\n\tvar engraver_controller = new EngraverController(div, params);\n\tvar widths = engraver_controller.getMeasureWidths(tune);\n\n\tvar ret = wrap.calcLineWraps(tune, widths, abcString, params, Parse, engraver_controller);\n    if (!params.oneSvgPerLine || ret.tune.lines.length < 2)\n        renderOne(div, ret.tune, ret.revisedParams, tuneNumber);\n    else\n        renderEachLineSeparately(div, ret.tune, ret.revisedParams, tuneNumber);\n\tret.tune.explanation = ret.explanation;\n\treturn ret.tune;\n}\n\nmodule.exports = renderAbc;\n"]},"metadata":{},"sourceType":"script"}