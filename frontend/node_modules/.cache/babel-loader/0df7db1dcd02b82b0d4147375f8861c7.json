{"ast":null,"code":"// abc_editor.js\n// window.ABCJS.Editor is the interface class for the area that contains the ABC text. It is responsible for\n// holding the text of the tune and calling the parser and the rendering engines.\n//\n// EditArea is an example of using a textarea as the control that is shown to the user. As long as\n// the same interface is used, window.ABCJS.Editor can use a different type of object.\n//\n// EditArea:\n// - constructor(textareaid)\n//\t\tThis contains the id of a textarea control that will be used.\n// - addSelectionListener(listener)\n//\t\tA callback class that contains the entry point fireSelectionChanged()\n// - addChangeListener(listener)\n//\t\tA callback class that contains the entry point fireChanged()\n// - getSelection()\n//\t\treturns the object { start: , end: } with the current selection in characters\n// - setSelection(start, end)\n//\t\tstart and end are the character positions that should be selected.\n// - getString()\n//\t\treturns the ABC text that is currently displayed.\n// - setString(str)\n//\t\tsets the ABC text that is currently displayed, and resets the initialText variable\n// - getElem()\n//\t\treturns the textarea element\n// - string initialText\n//\t\tContains the starting text. This can be compared against the current text to see if anything changed.\n//\n\n/*global document, window, clearTimeout, setTimeout */\nvar TuneBook = require('../api/abc_tunebook').TuneBook;\n\nvar parseCommon = require('../parse/abc_common');\n\nvar Parse = require('../parse/abc_parse');\n\nvar TextPrinter = require('../transform/abc2abc_write');\n\nvar EngraverController = require('../write/abc_engraver_controller');\n\nvar SynthController = require('../synth/synth-controller');\n\nvar supportsAudio = require('../synth/supports-audio'); // Polyfill for CustomEvent for old IE versions\n\n\nif (typeof window.CustomEvent !== \"function\") {\n  var CustomEvent = function (event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent;\n}\n\nvar EditArea = function (textareaid) {\n  this.textarea = document.getElementById(textareaid);\n  this.initialText = this.textarea.value;\n  this.isDragging = false;\n};\n\nEditArea.prototype.addSelectionListener = function (listener) {\n  this.textarea.onmousemove = function (ev) {\n    if (this.isDragging) listener.fireSelectionChanged();\n  };\n};\n\nEditArea.prototype.addChangeListener = function (listener) {\n  this.changelistener = listener;\n\n  this.textarea.onkeyup = function () {\n    listener.fireChanged();\n  };\n\n  this.textarea.onmousedown = function () {\n    this.isDragging = true;\n    listener.fireSelectionChanged();\n  };\n\n  this.textarea.onmouseup = function () {\n    this.isDragging = false;\n    listener.fireChanged();\n  };\n\n  this.textarea.onchange = function () {\n    listener.fireChanged();\n  };\n}; //TODO won't work under IE?\n\n\nEditArea.prototype.getSelection = function () {\n  return {\n    start: this.textarea.selectionStart,\n    end: this.textarea.selectionEnd\n  };\n};\n\nEditArea.prototype.setSelection = function (start, end) {\n  if (this.textarea.setSelectionRange) this.textarea.setSelectionRange(start, end);else if (this.textarea.createTextRange) {\n    // For IE8\n    var e = this.textarea.createTextRange();\n    e.collapse(true);\n    e.moveEnd('character', end);\n    e.moveStart('character', start);\n    e.select();\n  }\n  this.textarea.focus();\n};\n\nEditArea.prototype.getString = function () {\n  return this.textarea.value;\n};\n\nEditArea.prototype.setString = function (str) {\n  this.textarea.value = str;\n  this.initialText = this.getString();\n\n  if (this.changelistener) {\n    this.changelistener.fireChanged();\n  }\n};\n\nEditArea.prototype.getElem = function () {\n  return this.textarea;\n}; //\n// window.ABCJS.Editor:\n//\n// constructor(editarea, params)\n//\t\tif editarea is a string, then it is an HTML id of a textarea control.\n//\t\tOtherwise, it should be an instantiation of an object that expresses the EditArea interface.\n//\n//\t\tparams is a hash of:\n//\t\tcanvas_id: or paper_id: HTML id to draw in. If not present, then the drawing happens just below the editor.\n//\t\tgenerate_midi: if present, then midi is generated.\n//\t\tmidi_id: if present, the HTML id to place the midi control. Otherwise it is placed in the same div as the paper.\n//\t\tmidi_download_id: if present, the HTML id to place the midi download link. Otherwise it is placed in the same div as the paper.\n//\t\tgenerate_warnings: if present, then parser warnings are displayed on the page.\n//\t\twarnings_id: if present, the HTML id to place the warnings. Otherwise they are placed in the same div as the paper.\n//\t\tonchange: if present, the callback function to call whenever there has been a change.\n//\t\tgui: if present, the paper can send changes back to the editor (presumably because the user changed something directly.)\n//\t\tparser_options: options to send to the parser engine.\n//\t\tmidi_options: options to send to the midi engine.\n//\t\trender_options: options to send to the render engine.\n//\t\tindicate_changed: the dirty flag is set if this is true.\n//\n// - setReadOnly(bool)\n//\t\tadds or removes the class abc_textarea_readonly, and adds or removes the attribute readonly=yes\n// - setDirtyStyle(bool)\n//\t\tadds or removes the class abc_textarea_dirty\n// - renderTune(abc, parserparams, div)\n//\t\tImmediately renders the tune. (Useful for creating the SVG output behind the scenes, if div is hidden)\n//\t\tstring abc: the ABC text\n//\t\tparserparams: params to send to the parser\n//\t\tdiv: the HTML id to render to.\n// - modelChanged()\n//\t\tCalled when the model has been changed to trigger re-rendering\n// - parseABC()\n//\t\tCalled internally by fireChanged()\n//\t\treturns true if there has been a change since last call.\n// - updateSelection()\n//\t\tCalled when the user has changed the selection. This calls the engraver_controller to show the selection.\n// - fireSelectionChanged()\n//\t\tCalled by the textarea object when the user has changed the selection.\n// - paramChanged(engraverparams)\n//\t\tCalled to signal that the engraver params have changed, so re-rendering should occur.\n// - fireChanged()\n//\t\tCalled by the textarea object when the user has changed something.\n// - setNotDirty()\n//\t\tCalled by the client app to reset the dirty flag\n// - isDirty()\n//\t\tReturns true or false, whether the textarea contains the same text that it started with.\n// - highlight(abcelem)\n//\t\tCalled by the engraver_controller to highlight an area.\n// - pause(bool)\n//\t\tStops the automatic rendering when the user is typing.\n//\n\n\nvar Editor = function (editarea, params) {\n  // Copy all the options that will be passed through\n  this.abcjsParams = {};\n  var key;\n\n  if (params.abcjsParams) {\n    for (key in params.abcjsParams) {\n      if (params.abcjsParams.hasOwnProperty(key)) {\n        this.abcjsParams[key] = params.abcjsParams[key];\n      }\n    }\n  }\n\n  if (params.midi_options) {\n    for (key in params.midi_options) {\n      if (params.midi_options.hasOwnProperty(key)) {\n        this.abcjsParams[key] = params.midi_options[key];\n      }\n    }\n  }\n\n  if (params.parser_options) {\n    for (key in params.parser_options) {\n      if (params.parser_options.hasOwnProperty(key)) {\n        this.abcjsParams[key] = params.parser_options[key];\n      }\n    }\n  }\n\n  if (params.render_options) {\n    for (key in params.render_options) {\n      if (params.render_options.hasOwnProperty(key)) {\n        this.abcjsParams[key] = params.render_options[key];\n      }\n    }\n  }\n\n  if (params.indicate_changed) this.indicate_changed = true;\n\n  if (typeof editarea === \"string\") {\n    this.editarea = new EditArea(editarea);\n  } else {\n    this.editarea = editarea;\n  }\n\n  this.editarea.addSelectionListener(this);\n  this.editarea.addChangeListener(this);\n\n  if (params.canvas_id) {\n    this.div = document.getElementById(params.canvas_id);\n  } else if (params.paper_id) {\n    this.div = document.getElementById(params.paper_id);\n  } else {\n    this.div = document.createElement(\"DIV\");\n    this.editarea.getElem().parentNode.insertBefore(this.div, this.editarea.getElem());\n  }\n\n  if (params.selectionChangeCallback) {\n    this.selectionChangeCallback = params.selectionChangeCallback;\n  }\n\n  if (params.synth) {\n    if (supportsAudio()) {\n      this.synth = {\n        el: params.synth.el,\n        cursorControl: params.synth.cursorControl,\n        options: params.synth.options\n      };\n    }\n  } // If the user wants midi, then store the elements that it will be written to. The element could either be passed in as an id,\n  // an element, or nothing. If nothing is passed in, then just put the midi on top of the generated music.\n\n\n  if (params.generate_midi) {\n    this.generate_midi = params.generate_midi;\n\n    if (this.abcjsParams.generateDownload) {\n      if (typeof params.midi_download_id === 'string') this.downloadMidi = document.getElementById(params.midi_download_id);else if (params.midi_download_id) // assume, if the var is not a string it is an element. If not, it will crash soon enough.\n        this.downloadMidi = params.midi_download_id;\n    }\n\n    if (this.abcjsParams.generateInline !== false) {\n      // The default for this is true, so undefined is also true.\n      if (typeof params.midi_id === 'string') this.inlineMidi = document.getElementById(params.midi_id);else if (params.midi_id) // assume, if the var is not a string it is an element. If not, it will crash soon enough.\n        this.inlineMidi = params.midi_id;\n    }\n  }\n\n  if (params.generate_warnings || params.warnings_id) {\n    if (params.warnings_id) {\n      this.warningsdiv = document.getElementById(params.warnings_id);\n    } else {\n      this.warningsdiv = this.div;\n    }\n  }\n\n  this.onchangeCallback = params.onchange;\n\n  if (params.gui) {\n    this.target = document.getElementById(editarea);\n    this.abcjsParams.editable = true;\n  }\n\n  this.oldt = \"\";\n  this.bReentry = false;\n  this.parseABC();\n  this.modelChanged();\n\n  this.addClassName = function (element, className) {\n    var hasClassName = function (element, className) {\n      var elementClassName = element.className;\n      return elementClassName.length > 0 && (elementClassName === className || new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName));\n    };\n\n    if (!hasClassName(element, className)) element.className += (element.className ? ' ' : '') + className;\n    return element;\n  };\n\n  this.removeClassName = function (element, className) {\n    element.className = parseCommon.strip(element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' '));\n    return element;\n  };\n\n  this.setReadOnly = function (readOnly) {\n    var readonlyClass = 'abc_textarea_readonly';\n    var el = this.editarea.getElem();\n\n    if (readOnly) {\n      el.setAttribute('readonly', 'yes');\n      this.addClassName(el, readonlyClass);\n    } else {\n      el.removeAttribute('readonly');\n      this.removeClassName(el, readonlyClass);\n    }\n  };\n};\n\nEditor.prototype.renderTune = function (abc, params, div) {\n  var tunebook = new TuneBook(abc);\n  var abcParser = Parse();\n  abcParser.parse(tunebook.tunes[0].abc, params, tunebook.tunes[0].startPos - tunebook.header.length); //TODO handle multiple tunes\n\n  var tune = abcParser.getTune();\n  var engraver_controller = new EngraverController(div, this.abcjsParams);\n  engraver_controller.engraveABC(tune);\n};\n\nEditor.prototype.redrawMidi = function () {\n  if (this.generate_midi && !this.midiPause) {\n    var event = new window.CustomEvent(\"generateMidi\", {\n      detail: {\n        tunes: this.tunes,\n        abcjsParams: this.abcjsParams,\n        downloadMidiEl: this.downloadMidi,\n        inlineMidiEl: this.inlineMidi,\n        engravingEl: this.div\n      }\n    });\n    window.dispatchEvent(event);\n  }\n\n  if (this.synth) {\n    if (!this.synth.synthControl) {\n      this.synth.synthControl = new SynthController();\n      this.synth.synthControl.load(this.synth.el, this.synth.cursorControl, this.synth.options);\n    }\n\n    this.synth.synthControl.setTune(this.tunes[0], false);\n  }\n};\n\nEditor.prototype.modelChanged = function () {\n  if (this.tunes === undefined) {\n    if (this.downloadMidi !== undefined) this.downloadMidi.innerHTML = \"\";\n    if (this.inlineMidi !== undefined) this.inlineMidi.innerHTML = \"\";\n    this.div.innerHTML = \"\";\n    return;\n  }\n\n  if (this.bReentry) return; // TODO is this likely? maybe, if we rewrite abc immediately w/ abc2abc\n\n  this.bReentry = true;\n  this.timerId = null;\n  this.div.innerHTML = \"\";\n  this.engraver_controller = new EngraverController(this.div, this.abcjsParams);\n  this.engraver_controller.engraveABC(this.tunes);\n  this.tunes[0].engraver = this.engraver_controller; // TODO-PER: We actually want an output object for each tune, not the entire controller. When refactoring, don't save data in the controller.\n\n  this.redrawMidi();\n\n  if (this.warningsdiv) {\n    this.warningsdiv.innerHTML = this.warnings ? this.warnings.join(\"<br />\") : \"No errors\";\n  }\n\n  if (this.target) {\n    var textprinter = new TextPrinter(this.target, true);\n    textprinter.printABC(this.tunes[0]); //TODO handle multiple tunes\n  }\n\n  this.engraver_controller.addSelectListener(this.highlight.bind(this));\n  this.updateSelection();\n  this.bReentry = false;\n}; // Call this to reparse in response to the printing parameters changing\n\n\nEditor.prototype.paramChanged = function (engraverParams) {\n  if (engraverParams) {\n    for (var key in engraverParams) {\n      if (engraverParams.hasOwnProperty(key)) {\n        this.abcjsParams[key] = engraverParams[key];\n      }\n    }\n  }\n\n  this.oldt = \"\";\n  this.fireChanged();\n}; // return true if the model has changed\n\n\nEditor.prototype.parseABC = function () {\n  var t = this.editarea.getString();\n\n  if (t === this.oldt) {\n    this.updateSelection();\n    return false;\n  }\n\n  this.oldt = t;\n\n  if (t === \"\") {\n    this.tunes = undefined;\n    this.warnings = \"\";\n    return true;\n  }\n\n  var tunebook = new TuneBook(t);\n  this.tunes = [];\n  this.startPos = [];\n  this.warnings = [];\n\n  for (var i = 0; i < tunebook.tunes.length; i++) {\n    var abcParser = new Parse();\n    abcParser.parse(tunebook.tunes[i].abc, this.abcjsParams, tunebook.tunes[i].startPos - tunebook.header.length);\n    this.tunes[i] = abcParser.getTune();\n    this.startPos[i] = tunebook.tunes[i].startPos;\n    var warnings = abcParser.getWarnings() || [];\n\n    for (var j = 0; j < warnings.length; j++) {\n      this.warnings.push(warnings[j]);\n    }\n  }\n\n  return true;\n};\n\nEditor.prototype.updateSelection = function () {\n  var selection = this.editarea.getSelection();\n\n  try {\n    this.engraver_controller.rangeHighlight(selection.start, selection.end);\n  } catch (e) {} // maybe printer isn't defined yet?\n\n\n  if (this.selectionChangeCallback) this.selectionChangeCallback(selection.start, selection.end);\n};\n\nEditor.prototype.fireSelectionChanged = function () {\n  this.updateSelection();\n};\n\nEditor.prototype.setDirtyStyle = function (isDirty) {\n  if (this.indicate_changed === undefined) return;\n\n  var addClassName = function (element, className) {\n    var hasClassName = function (element, className) {\n      var elementClassName = element.className;\n      return elementClassName.length > 0 && (elementClassName === className || new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName));\n    };\n\n    if (!hasClassName(element, className)) element.className += (element.className ? ' ' : '') + className;\n    return element;\n  };\n\n  var removeClassName = function (element, className) {\n    element.className = parseCommon.strip(element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' '));\n    return element;\n  };\n\n  var readonlyClass = 'abc_textarea_dirty';\n  var el = this.editarea.getElem();\n\n  if (isDirty) {\n    addClassName(el, readonlyClass);\n  } else {\n    removeClassName(el, readonlyClass);\n  }\n}; // call when abc text is changed and needs re-parsing\n\n\nEditor.prototype.fireChanged = function () {\n  if (this.bIsPaused) return;\n\n  if (this.parseABC()) {\n    var self = this;\n    if (this.timerId) // If the user is still typing, cancel the update\n      clearTimeout(this.timerId);\n    this.timerId = setTimeout(function () {\n      self.modelChanged();\n    }, 300); // Is this a good compromise between responsiveness and not redrawing too much?\n\n    var isDirty = this.isDirty();\n\n    if (this.wasDirty !== isDirty) {\n      this.wasDirty = isDirty;\n      this.setDirtyStyle(isDirty);\n    }\n\n    if (this.onchangeCallback) this.onchangeCallback(this);\n  }\n};\n\nEditor.prototype.setNotDirty = function () {\n  this.editarea.initialText = this.editarea.getString();\n  this.wasDirty = false;\n  this.setDirtyStyle(false);\n};\n\nEditor.prototype.isDirty = function () {\n  if (this.indicate_changed === undefined) return false;\n  return this.editarea.initialText !== this.editarea.getString();\n};\n\nEditor.prototype.highlight = function (abcelem, tuneNumber, classes) {\n  // TODO-PER: The marker appears to get off by one for each tune parsed. I'm not sure why, but adding the tuneNumber in corrects it for the time being.\n  //\tvar offset = (tuneNumber !== undefined) ? this.startPos[tuneNumber] + tuneNumber : 0;\n  this.editarea.setSelection(abcelem.startChar, abcelem.endChar);\n  if (this.selectionChangeCallback) this.selectionChangeCallback(abcelem.startChar, abcelem.endChar);\n};\n\nEditor.prototype.pause = function (shouldPause) {\n  this.bIsPaused = shouldPause;\n  if (!shouldPause) this.fireChanged();\n};\n\nEditor.prototype.millisecondsPerMeasure = function () {\n  return this.synth.synthControl.visualObj.millisecondsPerMeasure();\n};\n\nEditor.prototype.pauseMidi = function (shouldPause) {\n  this.midiPause = shouldPause;\n  if (!shouldPause) this.redrawMidi();\n};\n\nmodule.exports = Editor;","map":{"version":3,"sources":["/home/elad/Desktop/Repos/drums-trainer/frontend/node_modules/react-sheet-music/node_modules/abcjs/src/edit/abc_editor.js"],"names":["TuneBook","require","parseCommon","Parse","TextPrinter","EngraverController","SynthController","supportsAudio","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","EditArea","textareaid","textarea","getElementById","initialText","value","isDragging","addSelectionListener","listener","onmousemove","ev","fireSelectionChanged","addChangeListener","changelistener","onkeyup","fireChanged","onmousedown","onmouseup","onchange","getSelection","start","selectionStart","end","selectionEnd","setSelection","setSelectionRange","createTextRange","e","collapse","moveEnd","moveStart","select","focus","getString","setString","str","getElem","Editor","editarea","abcjsParams","key","hasOwnProperty","midi_options","parser_options","render_options","indicate_changed","canvas_id","div","paper_id","createElement","parentNode","insertBefore","selectionChangeCallback","synth","el","cursorControl","options","generate_midi","generateDownload","midi_download_id","downloadMidi","generateInline","midi_id","inlineMidi","generate_warnings","warnings_id","warningsdiv","onchangeCallback","gui","target","editable","oldt","bReentry","parseABC","modelChanged","addClassName","element","className","hasClassName","elementClassName","length","RegExp","test","removeClassName","strip","replace","setReadOnly","readOnly","readonlyClass","setAttribute","removeAttribute","renderTune","abc","tunebook","abcParser","parse","tunes","startPos","header","tune","getTune","engraver_controller","engraveABC","redrawMidi","midiPause","downloadMidiEl","inlineMidiEl","engravingEl","dispatchEvent","synthControl","load","setTune","innerHTML","timerId","engraver","warnings","join","textprinter","printABC","addSelectListener","highlight","bind","updateSelection","paramChanged","engraverParams","t","i","getWarnings","j","push","selection","rangeHighlight","setDirtyStyle","isDirty","bIsPaused","self","clearTimeout","setTimeout","wasDirty","setNotDirty","abcelem","tuneNumber","classes","startChar","endChar","pause","shouldPause","millisecondsPerMeasure","visualObj","pauseMidi","module","exports"],"mappings":"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","sourcesContent":["// abc_editor.js\n// window.ABCJS.Editor is the interface class for the area that contains the ABC text. It is responsible for\n// holding the text of the tune and calling the parser and the rendering engines.\n//\n// EditArea is an example of using a textarea as the control that is shown to the user. As long as\n// the same interface is used, window.ABCJS.Editor can use a different type of object.\n//\n// EditArea:\n// - constructor(textareaid)\n//\t\tThis contains the id of a textarea control that will be used.\n// - addSelectionListener(listener)\n//\t\tA callback class that contains the entry point fireSelectionChanged()\n// - addChangeListener(listener)\n//\t\tA callback class that contains the entry point fireChanged()\n// - getSelection()\n//\t\treturns the object { start: , end: } with the current selection in characters\n// - setSelection(start, end)\n//\t\tstart and end are the character positions that should be selected.\n// - getString()\n//\t\treturns the ABC text that is currently displayed.\n// - setString(str)\n//\t\tsets the ABC text that is currently displayed, and resets the initialText variable\n// - getElem()\n//\t\treturns the textarea element\n// - string initialText\n//\t\tContains the starting text. This can be compared against the current text to see if anything changed.\n//\n\n/*global document, window, clearTimeout, setTimeout */\n\nvar TuneBook = require('../api/abc_tunebook').TuneBook;\nvar parseCommon = require('../parse/abc_common');\nvar Parse = require('../parse/abc_parse');\nvar TextPrinter = require('../transform/abc2abc_write');\nvar EngraverController = require('../write/abc_engraver_controller');\nvar SynthController = require('../synth/synth-controller');\nvar supportsAudio = require('../synth/supports-audio');\n\n// Polyfill for CustomEvent for old IE versions\nif ( typeof window.CustomEvent !== \"function\" ) {\n\tvar CustomEvent = function(event, params) {\n\t\tparams = params || {bubbles: false, cancelable: false, detail: undefined};\n\t\tvar evt = document.createEvent('CustomEvent');\n\t\tevt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t\treturn evt;\n\t};\n\tCustomEvent.prototype = window.Event.prototype;\n\twindow.CustomEvent = CustomEvent;\n}\n\nvar EditArea = function(textareaid) {\n  this.textarea = document.getElementById(textareaid);\n  this.initialText = this.textarea.value;\n  this.isDragging = false;\n}\n\nEditArea.prototype.addSelectionListener = function(listener) {\n  this.textarea.onmousemove = function(ev) {\n\t  if (this.isDragging)\n\t    listener.fireSelectionChanged();\n  };\n};\n\nEditArea.prototype.addChangeListener = function(listener) {\n  this.changelistener = listener;\n  this.textarea.onkeyup = function() {\n    listener.fireChanged();\n  };\n  this.textarea.onmousedown = function() {\n\tthis.isDragging = true;\n    listener.fireSelectionChanged();\n  };\n  this.textarea.onmouseup = function() {\n\tthis.isDragging = false;\n    listener.fireChanged();\n  };\n  this.textarea.onchange = function() {\n    listener.fireChanged();\n  };\n};\n\n//TODO won't work under IE?\nEditArea.prototype.getSelection = function() {\n  return {start: this.textarea.selectionStart, end: this.textarea.selectionEnd};\n};\n\nEditArea.prototype.setSelection = function(start, end) {\n\tif(this.textarea.setSelectionRange)\n\t   this.textarea.setSelectionRange(start, end);\n\telse if(this.textarea.createTextRange) {\n\t\t// For IE8\n\t   var e = this.textarea.createTextRange();\n\t   e.collapse(true);\n\t   e.moveEnd('character', end);\n\t   e.moveStart('character', start);\n\t   e.select();\n\t}\n  this.textarea.focus();\n};\n\nEditArea.prototype.getString = function() {\n  return this.textarea.value;\n};\n\nEditArea.prototype.setString = function(str) {\n  this.textarea.value = str;\n  this.initialText = this.getString();\n  if (this.changelistener) {\n    this.changelistener.fireChanged();\n  }\n};\n\nEditArea.prototype.getElem = function() {\n  return this.textarea;\n};\n\n//\n// window.ABCJS.Editor:\n//\n// constructor(editarea, params)\n//\t\tif editarea is a string, then it is an HTML id of a textarea control.\n//\t\tOtherwise, it should be an instantiation of an object that expresses the EditArea interface.\n//\n//\t\tparams is a hash of:\n//\t\tcanvas_id: or paper_id: HTML id to draw in. If not present, then the drawing happens just below the editor.\n//\t\tgenerate_midi: if present, then midi is generated.\n//\t\tmidi_id: if present, the HTML id to place the midi control. Otherwise it is placed in the same div as the paper.\n//\t\tmidi_download_id: if present, the HTML id to place the midi download link. Otherwise it is placed in the same div as the paper.\n//\t\tgenerate_warnings: if present, then parser warnings are displayed on the page.\n//\t\twarnings_id: if present, the HTML id to place the warnings. Otherwise they are placed in the same div as the paper.\n//\t\tonchange: if present, the callback function to call whenever there has been a change.\n//\t\tgui: if present, the paper can send changes back to the editor (presumably because the user changed something directly.)\n//\t\tparser_options: options to send to the parser engine.\n//\t\tmidi_options: options to send to the midi engine.\n//\t\trender_options: options to send to the render engine.\n//\t\tindicate_changed: the dirty flag is set if this is true.\n//\n// - setReadOnly(bool)\n//\t\tadds or removes the class abc_textarea_readonly, and adds or removes the attribute readonly=yes\n// - setDirtyStyle(bool)\n//\t\tadds or removes the class abc_textarea_dirty\n// - renderTune(abc, parserparams, div)\n//\t\tImmediately renders the tune. (Useful for creating the SVG output behind the scenes, if div is hidden)\n//\t\tstring abc: the ABC text\n//\t\tparserparams: params to send to the parser\n//\t\tdiv: the HTML id to render to.\n// - modelChanged()\n//\t\tCalled when the model has been changed to trigger re-rendering\n// - parseABC()\n//\t\tCalled internally by fireChanged()\n//\t\treturns true if there has been a change since last call.\n// - updateSelection()\n//\t\tCalled when the user has changed the selection. This calls the engraver_controller to show the selection.\n// - fireSelectionChanged()\n//\t\tCalled by the textarea object when the user has changed the selection.\n// - paramChanged(engraverparams)\n//\t\tCalled to signal that the engraver params have changed, so re-rendering should occur.\n// - fireChanged()\n//\t\tCalled by the textarea object when the user has changed something.\n// - setNotDirty()\n//\t\tCalled by the client app to reset the dirty flag\n// - isDirty()\n//\t\tReturns true or false, whether the textarea contains the same text that it started with.\n// - highlight(abcelem)\n//\t\tCalled by the engraver_controller to highlight an area.\n// - pause(bool)\n//\t\tStops the automatic rendering when the user is typing.\n//\n\nvar Editor = function(editarea, params) {\n\t// Copy all the options that will be passed through\n\tthis.abcjsParams = {};\n\tvar key;\n\tif (params.abcjsParams) {\n\t\tfor (key in params.abcjsParams) {\n\t\t\tif (params.abcjsParams.hasOwnProperty(key)) {\n\t\t\t\tthis.abcjsParams[key] = params.abcjsParams[key];\n\t\t\t}\n\t\t}\n\t}\n\tif (params.midi_options) {\n\t\tfor (key in params.midi_options) {\n\t\t\tif (params.midi_options.hasOwnProperty(key)) {\n\t\t\t\tthis.abcjsParams[key] = params.midi_options[key];\n\t\t\t}\n\t\t}\n\t}\n\tif (params.parser_options) {\n\t\tfor (key in params.parser_options) {\n\t\t\tif (params.parser_options.hasOwnProperty(key)) {\n\t\t\t\tthis.abcjsParams[key] = params.parser_options[key];\n\t\t\t}\n\t\t}\n\t}\n\tif (params.render_options) {\n\t\tfor (key in params.render_options) {\n\t\t\tif (params.render_options.hasOwnProperty(key)) {\n\t\t\t\tthis.abcjsParams[key] = params.render_options[key];\n\t\t\t}\n\t\t}\n\t}\n\n\tif (params.indicate_changed)\n\t\tthis.indicate_changed = true;\n  if (typeof editarea === \"string\") {\n    this.editarea = new EditArea(editarea);\n  } else {\n    this.editarea = editarea;\n  }\n  this.editarea.addSelectionListener(this);\n  this.editarea.addChangeListener(this);\n\n  if (params.canvas_id) {\n    this.div = document.getElementById(params.canvas_id);\n  } else if (params.paper_id) {\n    this.div = document.getElementById(params.paper_id);\n  } else {\n    this.div = document.createElement(\"DIV\");\n    this.editarea.getElem().parentNode.insertBefore(this.div, this.editarea.getElem());\n  }\n\n  if (params.selectionChangeCallback) {\n  \tthis.selectionChangeCallback = params.selectionChangeCallback;\n  }\n\n  if (params.synth) {\n  \tif (supportsAudio()) {\n\t    this.synth = {\n\t\t    el: params.synth.el,\n\t\t    cursorControl: params.synth.cursorControl,\n\t\t    options: params.synth.options\n\t    }\n    }\n  }\n\t// If the user wants midi, then store the elements that it will be written to. The element could either be passed in as an id,\n\t// an element, or nothing. If nothing is passed in, then just put the midi on top of the generated music.\n\tif (params.generate_midi) {\n\t  \tthis.generate_midi = params.generate_midi;\n\t\tif (this.abcjsParams.generateDownload) {\n\t\t\tif (typeof params.midi_download_id === 'string')\n\t\t\t\tthis.downloadMidi = document.getElementById(params.midi_download_id);\n\t\t\telse if (params.midi_download_id) // assume, if the var is not a string it is an element. If not, it will crash soon enough.\n\t\t\t\tthis.downloadMidi = params.midi_download_id;\n\t\t}\n\t\tif (this.abcjsParams.generateInline !== false) { // The default for this is true, so undefined is also true.\n\t\t\tif (typeof params.midi_id === 'string')\n\t\t\t\tthis.inlineMidi = document.getElementById(params.midi_id);\n\t\t\telse if (params.midi_id) // assume, if the var is not a string it is an element. If not, it will crash soon enough.\n\t\t\t\tthis.inlineMidi = params.midi_id;\n\t\t}\n\t}\n\n  if (params.generate_warnings || params.warnings_id) {\n    if (params.warnings_id) {\n      this.warningsdiv = document.getElementById(params.warnings_id);\n    } else {\n      this.warningsdiv = this.div;\n    }\n  }\n\n  this.onchangeCallback = params.onchange;\n\n  if (params.gui) {\n    this.target = document.getElementById(editarea);\n    this.abcjsParams.editable = true;\n  }\n  this.oldt = \"\";\n  this.bReentry = false;\n  this.parseABC();\n  this.modelChanged();\n\n  this.addClassName = function(element, className) {\n    var hasClassName = function(element, className) {\n      var elementClassName = element.className;\n      return (elementClassName.length > 0 && (elementClassName === className ||\n        new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName)));\n    };\n\n    if (!hasClassName(element, className))\n      element.className += (element.className ? ' ' : '') + className;\n    return element;\n  };\n\n  this.removeClassName = function(element, className) {\n    element.className = parseCommon.strip(element.className.replace(\n      new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' '));\n    return element;\n  };\n\n  this.setReadOnly = function(readOnly) {\n\t  var readonlyClass = 'abc_textarea_readonly';\n\t  var el = this.editarea.getElem();\n    if (readOnly) {\n      el.setAttribute('readonly', 'yes');\n\t  this.addClassName(el, readonlyClass);\n\t} else {\n      el.removeAttribute('readonly');\n\t  this.removeClassName(el, readonlyClass);\n    }\n  };\n};\n\nEditor.prototype.renderTune = function(abc, params, div) {\n  var tunebook = new TuneBook(abc);\n  var abcParser = Parse();\n  abcParser.parse(tunebook.tunes[0].abc, params, tunebook.tunes[0].startPos - tunebook.header.length); //TODO handle multiple tunes\n  var tune = abcParser.getTune();\n  var engraver_controller = new EngraverController(div, this.abcjsParams);\n  engraver_controller.engraveABC(tune);\n};\n\nEditor.prototype.redrawMidi = function() {\n\tif (this.generate_midi && !this.midiPause) {\n\t\tvar event = new window.CustomEvent(\"generateMidi\", {\n\t\t\tdetail: {\n\t\t\t\ttunes: this.tunes,\n\t\t\t\tabcjsParams: this.abcjsParams,\n\t\t\t\tdownloadMidiEl: this.downloadMidi,\n\t\t\t\tinlineMidiEl: this.inlineMidi,\n\t\t\t\tengravingEl: this.div\n\t\t\t}\n\t\t});\n\t\twindow.dispatchEvent(event);\n\t}\n\tif (this.synth) {\n\t\tif (!this.synth.synthControl) {\n\t\t\tthis.synth.synthControl = new SynthController();\n\t\t\tthis.synth.synthControl.load(this.synth.el, this.synth.cursorControl, this.synth.options);\n\t\t}\n\t\tthis.synth.synthControl.setTune(this.tunes[0], false);\n\t}\n};\n\nEditor.prototype.modelChanged = function() {\n  if (this.tunes === undefined) {\n    if (this.downloadMidi !== undefined)\n\t\tthis.downloadMidi.innerHTML = \"\";\n    if (this.inlineMidi !== undefined)\n\t\tthis.inlineMidi.innerHTML = \"\";\n    this.div.innerHTML = \"\";\n\treturn;\n  }\n\n  if (this.bReentry)\n    return; // TODO is this likely? maybe, if we rewrite abc immediately w/ abc2abc\n  this.bReentry = true;\n  this.timerId = null;\n  this.div.innerHTML = \"\";\n  this.engraver_controller = new EngraverController(this.div, this.abcjsParams);\n  this.engraver_controller.engraveABC(this.tunes);\n\tthis.tunes[0].engraver = this.engraver_controller;\t// TODO-PER: We actually want an output object for each tune, not the entire controller. When refactoring, don't save data in the controller.\n\tthis.redrawMidi();\n\n  if (this.warningsdiv) {\n    this.warningsdiv.innerHTML = (this.warnings) ? this.warnings.join(\"<br />\") : \"No errors\";\n  }\n  if (this.target) {\n    var textprinter = new TextPrinter(this.target, true);\n    textprinter.printABC(this.tunes[0]); //TODO handle multiple tunes\n  }\n  this.engraver_controller.addSelectListener(this.highlight.bind(this));\n  this.updateSelection();\n  this.bReentry = false;\n};\n\n// Call this to reparse in response to the printing parameters changing\nEditor.prototype.paramChanged = function(engraverParams) {\n\tif (engraverParams) {\n\t\tfor (var key in engraverParams) {\n\t\t\tif (engraverParams.hasOwnProperty(key)) {\n\t\t\t\tthis.abcjsParams[key] = engraverParams[key];\n\t\t\t}\n\t\t}\n\t}\n\tthis.oldt = \"\";\n\tthis.fireChanged();\n};\n\n// return true if the model has changed\nEditor.prototype.parseABC = function() {\n  var t = this.editarea.getString();\n  if (t===this.oldt) {\n    this.updateSelection();\n    return false;\n  }\n\n  this.oldt = t;\n  if (t === \"\") {\n\tthis.tunes = undefined;\n\tthis.warnings = \"\";\n\treturn true;\n  }\n  var tunebook = new TuneBook(t);\n\n  this.tunes = [];\n  this.startPos = [];\n  this.warnings = [];\n  for (var i=0; i<tunebook.tunes.length; i++) {\n    var abcParser = new Parse();\n    abcParser.parse(tunebook.tunes[i].abc, this.abcjsParams, tunebook.tunes[i].startPos - tunebook.header.length);\n    this.tunes[i] = abcParser.getTune();\n\t  this.startPos[i] = tunebook.tunes[i].startPos;\n    var warnings = abcParser.getWarnings() || [];\n    for (var j=0; j<warnings.length; j++) {\n      this.warnings.push(warnings[j]);\n    }\n  }\n  return true;\n};\n\nEditor.prototype.updateSelection = function() {\n  var selection = this.editarea.getSelection();\n  try {\n    this.engraver_controller.rangeHighlight(selection.start, selection.end);\n  } catch (e) {} // maybe printer isn't defined yet?\n\tif (this.selectionChangeCallback)\n\t\tthis.selectionChangeCallback(selection.start, selection.end);\n};\n\nEditor.prototype.fireSelectionChanged = function() {\n  this.updateSelection();\n};\n\nEditor.prototype.setDirtyStyle = function(isDirty) {\n\tif (this.indicate_changed === undefined)\n\t\treturn;\n  var addClassName = function(element, className) {\n    var hasClassName = function(element, className) {\n      var elementClassName = element.className;\n      return (elementClassName.length > 0 && (elementClassName === className ||\n        new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName)));\n    };\n\n    if (!hasClassName(element, className))\n      element.className += (element.className ? ' ' : '') + className;\n    return element;\n  };\n\n  var removeClassName = function(element, className) {\n    element.className = parseCommon.strip(element.className.replace(\n      new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' '));\n    return element;\n  };\n\n\tvar readonlyClass = 'abc_textarea_dirty';\n\tvar el = this.editarea.getElem();\n\tif (isDirty) {\n\t\taddClassName(el, readonlyClass);\n\t} else {\n\t\tremoveClassName(el, readonlyClass);\n    }\n};\n\n// call when abc text is changed and needs re-parsing\nEditor.prototype.fireChanged = function() {\n  if (this.bIsPaused)\n    return;\n  if (this.parseABC()) {\n    var self = this;\n    if (this.timerId)\t// If the user is still typing, cancel the update\n      clearTimeout(this.timerId);\n    this.timerId = setTimeout(function () {\n      self.modelChanged();\n    }, 300);\t// Is this a good compromise between responsiveness and not redrawing too much?\n\t  var isDirty = this.isDirty();\n\t  if (this.wasDirty !== isDirty) {\n\t\t  this.wasDirty = isDirty;\n\t\t  this.setDirtyStyle(isDirty);\n\t  }\n\t  if (this.onchangeCallback)\n\t\t  this.onchangeCallback(this);\n\t  }\n};\n\nEditor.prototype.setNotDirty = function() {\n\tthis.editarea.initialText = this.editarea.getString();\n\tthis.wasDirty = false;\n\tthis.setDirtyStyle(false);\n};\n\nEditor.prototype.isDirty = function() {\n\tif (this.indicate_changed === undefined)\n\t\treturn false;\n\treturn this.editarea.initialText !== this.editarea.getString();\n};\n\nEditor.prototype.highlight = function(abcelem, tuneNumber, classes) {\n\t// TODO-PER: The marker appears to get off by one for each tune parsed. I'm not sure why, but adding the tuneNumber in corrects it for the time being.\n//\tvar offset = (tuneNumber !== undefined) ? this.startPos[tuneNumber] + tuneNumber : 0;\n\n  this.editarea.setSelection(abcelem.startChar, abcelem.endChar);\n\tif (this.selectionChangeCallback)\n\t\tthis.selectionChangeCallback(abcelem.startChar, abcelem.endChar);\n};\n\nEditor.prototype.pause = function(shouldPause) {\n\tthis.bIsPaused = shouldPause;\n\tif (!shouldPause)\n\t\tthis.fireChanged();\n};\n\nEditor.prototype.millisecondsPerMeasure = function() {\n\treturn this.synth.synthControl.visualObj.millisecondsPerMeasure();\n};\n\nEditor.prototype.pauseMidi = function(shouldPause) {\n\tthis.midiPause = shouldPause;\n\tif (!shouldPause)\n\t\tthis.redrawMidi();\n};\n\nmodule.exports = Editor;\n"]},"metadata":{},"sourceType":"script"}