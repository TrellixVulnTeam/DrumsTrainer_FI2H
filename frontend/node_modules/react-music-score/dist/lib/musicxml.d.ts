import React from 'react';
export declare const xmlString: (measures: any) => string;
export interface Pitch {
    step: string;
    alter: string;
    octave: number;
}
export interface Notations {
    tied?: 'start' | 'stop';
}
export interface Measure {
    index: number;
    notes: Array<Note>;
    attributes: Attributes | null;
}
export interface Note {
    pitch: Pitch;
    duration: number;
    type: string;
    chord?: boolean;
    rest?: boolean;
    dotted?: boolean;
    beam?: 'begin' | 'end';
    tie?: 'start' | 'stop';
    notations?: Notations;
}
export interface Key {
    fifths: number;
    mode: string;
}
export interface Time {
    beats: number;
    beatType: number;
}
export interface Clef {
    sign: string;
    line: number;
}
export interface Attributes {
    divisions: number;
    key: Key;
    time: Time;
    clef: Clef;
}
declare const Measure: (props: any) => React.DOMElement<any, Element>;
export declare const measureToXML: (measure: Measure) => any;
declare const Note: (props: any) => React.DOMElement<any, Element>;
export declare const noteToXML: (note: Note) => JSX.Element;
export declare const attributesToXML: (attributes: any) => JSX.Element;
export declare const xmlDurationToVF: (xmlDuration: any, isRest?: boolean) => string;
export declare const xmlFifthsToKey: (xmlFifths: any) => any;
export declare const xmlKeyToFifths: (xmlKey: any) => number;
export declare const getAccidental: {
    '-7': string;
    '-6': string;
    '-5': string;
    '-4': string;
    '-3': string;
    '-2': string;
    '-1': string;
    0: string;
    1: string;
    2: string;
    3: string;
    4: string;
    5: string;
    6: string;
    7: string;
};
export declare const xmlSignToClef: (xmlSign: any) => any;
export declare const xmlMeasureToJS: (measure: any) => any;
export declare const musicXMLToJS: (xml: any) => {
    partWise: {
        defaults: string;
        identification: string;
        movementTitle: any;
        partList: {
            scorePart: {
                id: any;
                partName: any;
            };
        };
        part: {
            id: any;
            measure: any;
        };
        version: any;
    };
};
export {};
