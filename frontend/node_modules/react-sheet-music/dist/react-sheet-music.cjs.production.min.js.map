{"version":3,"file":"react-sheet-music.cjs.production.min.js","sources":["../src/SheetMusic.tsx"],"sourcesContent":["import React from 'react';\nimport abcjs from 'abcjs';\n\ntype Props = {\n  isPlaying?: boolean;\n  notation?: string;\n  bpm?: number;\n  scale?: number;\n  className?: string;\n  onBeat?: Function;\n  onEvent?: Function;\n  onLineEnd?: Function;\n};\n\nconst SheetMusic: React.FunctionComponent<Props> = ({\n  isPlaying,\n  notation,\n  bpm,\n  scale = 1,\n  className,\n  onBeat,\n  onEvent,\n  onLineEnd,\n}) => {\n  // const paper = React.useRef();\n  const timer = React.useRef<{\n    start: Function;\n    stop: Function;\n  }>();\n\n  if (!notation) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    const tune = abcjs.renderAbc('paper', notation, {\n      add_classes: true,\n      scale,\n      staffwidth: 1200,\n    });\n\n    timer.current = new abcjs.TimingCallbacks(tune[0], {\n      qpm: bpm,\n      beatSubdivisions: 4,\n      beatCallback: (beatNumber, totalBeats, totalTime) => {\n        if (typeof onBeat === 'function') {\n          onBeat(beatNumber, totalBeats, totalTime);\n        }\n      },\n      lineEndCallback: info => {\n        if (typeof onLineEnd === 'function') {\n          onLineEnd(info);\n        }\n      },\n      eventCallback: event => {\n        if (typeof onEvent === 'function') {\n          if (event === null) {\n            onEvent(null);\n          } else {\n            // Event.midiPitches isn't working, so we need to work out pitch from ABC notation\n            // const note = notation[event.startChar];\n            const note = notation.slice(event.startChar, event.endChar);\n\n            onEvent({\n              ...event,\n              note,\n            });\n          }\n        }\n\n        if (!event) {\n          return null;\n        }\n\n        // const notes = document.getElementsByClassName('abcjs-note');\n        // const rests = document.getElementsByClassName('abcjs-rest');\n\n        // for (let note of notes) {\n        //   note.classList.remove('abcjs-note-playing');\n        // }\n\n        // for (let rest of rests) {\n        //   rest.classList.remove('abcjs-note-playing');\n        // }\n\n        // event.elements.forEach(element => {\n        //   element[0].classList.add('abcjs-note-playing');\n        // });\n\n        return null;\n      },\n    });\n    /* eslint-disable */\n  }, [JSON.stringify(notation)]);\n  /* eslint-enable */\n\n  React.useEffect(() => {\n    if (timer && timer.current) {\n      if (isPlaying) {\n        timer.current.start();\n      } else {\n        timer.current.stop();\n      }\n    }\n  }, [isPlaying]);\n\n  return (\n    <>\n      <div\n        id=\"paper\"\n        // ref={paper}\n        className={className || ''}\n      ></div>\n\n      <style>\n        {`\n          #paper .abcjs-note, #paper .abcjs-rest {\n            transition: 0.2s;\n          }\n\n          #paper .abcjs-note-playing {\n            fill: #d10fc9;\n          }\n        `}\n      </style>\n    </>\n  );\n};\n\nexport default SheetMusic;\n"],"names":["isPlaying","notation","bpm","scale","className","onBeat","onEvent","onLineEnd","timer","React","useRef","useEffect","tune","abcjs","renderAbc","add_classes","staffwidth","current","TimingCallbacks","qpm","beatSubdivisions","beatCallback","beatNumber","totalBeats","totalTime","lineEndCallback","info","eventCallback","event","note","slice","startChar","endChar","JSON","stringify","start","stop","id"],"mappings":"yZAcmD,gBACjDA,IAAAA,UACAC,IAAAA,SACAC,IAAAA,QACAC,MAAAA,aAAQ,IACRC,IAAAA,UACAC,IAAAA,OACAC,IAAAA,QACAC,IAAAA,UAGMC,EAAQC,EAAMC,gBAKfT,GAILQ,EAAME,WAAU,eACRC,EAAOC,EAAMC,UAAU,QAASb,EAAU,CAC9Cc,aAAa,EACbZ,MAAAA,EACAa,WAAY,OAGdR,EAAMS,QAAU,IAAIJ,EAAMK,gBAAgBN,EAAK,GAAI,CACjDO,IAAKjB,EACLkB,iBAAkB,EAClBC,aAAc,SAACC,EAAYC,EAAYC,GACf,mBAAXnB,GACTA,EAAOiB,EAAYC,EAAYC,IAGnCC,gBAAiB,SAAAC,GACU,mBAAdnB,GACTA,EAAUmB,IAGdC,cAAe,SAAAC,MACU,mBAAZtB,KACK,OAAVsB,EACFtB,EAAQ,UACH,KAGCuB,EAAO5B,EAAS6B,MAAMF,EAAMG,UAAWH,EAAMI,SAEnD1B,OACKsB,GACHC,KAAAA,YAwBC,UAIV,CAACI,KAAKC,UAAUjC,KAGnBQ,EAAME,WAAU,WACVH,GAASA,EAAMS,UACbjB,EACFQ,EAAMS,QAAQkB,QAEd3B,EAAMS,QAAQmB,UAGjB,CAACpC,IAGFS,gCACEA,uBACE4B,GAAG,QAEHjC,UAAWA,GAAa,KAG1BK,gOAnFK"}