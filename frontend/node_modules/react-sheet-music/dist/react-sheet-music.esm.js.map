{"version":3,"file":"react-sheet-music.esm.js","sources":["../src/SheetMusic.tsx"],"sourcesContent":["import React from 'react';\nimport abcjs from 'abcjs';\n\ntype Props = {\n  isPlaying?: boolean;\n  notation?: string;\n  bpm?: number;\n  scale?: number;\n  className?: string;\n  onBeat?: Function;\n  onEvent?: Function;\n  onLineEnd?: Function;\n};\n\nconst SheetMusic: React.FunctionComponent<Props> = ({\n  isPlaying,\n  notation,\n  bpm,\n  scale = 1,\n  className,\n  onBeat,\n  onEvent,\n  onLineEnd,\n}) => {\n  // const paper = React.useRef();\n  const timer = React.useRef<{\n    start: Function;\n    stop: Function;\n  }>();\n\n  if (!notation) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    const tune = abcjs.renderAbc('paper', notation, {\n      add_classes: true,\n      scale,\n      staffwidth: 1200,\n    });\n\n    timer.current = new abcjs.TimingCallbacks(tune[0], {\n      qpm: bpm,\n      beatSubdivisions: 4,\n      beatCallback: (beatNumber, totalBeats, totalTime) => {\n        if (typeof onBeat === 'function') {\n          onBeat(beatNumber, totalBeats, totalTime);\n        }\n      },\n      lineEndCallback: info => {\n        if (typeof onLineEnd === 'function') {\n          onLineEnd(info);\n        }\n      },\n      eventCallback: event => {\n        if (typeof onEvent === 'function') {\n          if (event === null) {\n            onEvent(null);\n          } else {\n            // Event.midiPitches isn't working, so we need to work out pitch from ABC notation\n            // const note = notation[event.startChar];\n            const note = notation.slice(event.startChar, event.endChar);\n\n            onEvent({\n              ...event,\n              note,\n            });\n          }\n        }\n\n        if (!event) {\n          return null;\n        }\n\n        // const notes = document.getElementsByClassName('abcjs-note');\n        // const rests = document.getElementsByClassName('abcjs-rest');\n\n        // for (let note of notes) {\n        //   note.classList.remove('abcjs-note-playing');\n        // }\n\n        // for (let rest of rests) {\n        //   rest.classList.remove('abcjs-note-playing');\n        // }\n\n        // event.elements.forEach(element => {\n        //   element[0].classList.add('abcjs-note-playing');\n        // });\n\n        return null;\n      },\n    });\n    /* eslint-disable */\n  }, [JSON.stringify(notation)]);\n  /* eslint-enable */\n\n  React.useEffect(() => {\n    if (timer && timer.current) {\n      if (isPlaying) {\n        timer.current.start();\n      } else {\n        timer.current.stop();\n      }\n    }\n  }, [isPlaying]);\n\n  return (\n    <>\n      <div\n        id=\"paper\"\n        // ref={paper}\n        className={className || ''}\n      ></div>\n\n      <style>\n        {`\n          #paper .abcjs-note, #paper .abcjs-rest {\n            transition: 0.2s;\n          }\n\n          #paper .abcjs-note-playing {\n            fill: #d10fc9;\n          }\n        `}\n      </style>\n    </>\n  );\n};\n\nexport default SheetMusic;\n"],"names":["SheetMusic","isPlaying","notation","bpm","scale","className","onBeat","onEvent","onLineEnd","timer","React","useRef","useEffect","tune","abcjs","renderAbc","add_classes","staffwidth","current","TimingCallbacks","qpm","beatSubdivisions","beatCallback","beatNumber","totalBeats","totalTime","lineEndCallback","info","eventCallback","event","note","slice","startChar","endChar","JSON","stringify","start","stop","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAcA,IAAMA,UAAU,GAAmC,SAA7CA,UAA6C;MACjDC,iBAAAA;MACAC,gBAAAA;MACAC,WAAAA;wBACAC;MAAAA,gCAAQ;MACRC,iBAAAA;MACAC,cAAAA;MACAC,eAAAA;MACAC,iBAAAA;AAEA;AACA,MAAMC,KAAK,GAAGC,KAAK,CAACC,MAAN,EAAd;;AAKA,MAAI,CAACT,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAEDQ,EAAAA,KAAK,CAACE,SAAN,CAAgB;AACd,QAAMC,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgB,OAAhB,EAAyBb,QAAzB,EAAmC;AAC9Cc,MAAAA,WAAW,EAAE,IADiC;AAE9CZ,MAAAA,KAAK,EAALA,KAF8C;AAG9Ca,MAAAA,UAAU,EAAE;AAHkC,KAAnC,CAAb;AAMAR,IAAAA,KAAK,CAACS,OAAN,GAAgB,IAAIJ,KAAK,CAACK,eAAV,CAA0BN,IAAI,CAAC,CAAD,CAA9B,EAAmC;AACjDO,MAAAA,GAAG,EAAEjB,GAD4C;AAEjDkB,MAAAA,gBAAgB,EAAE,CAF+B;AAGjDC,MAAAA,YAAY,EAAE,sBAACC,UAAD,EAAaC,UAAb,EAAyBC,SAAzB;AACZ,YAAI,OAAOnB,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,UAAAA,MAAM,CAACiB,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,CAAN;AACD;AACF,OAPgD;AAQjDC,MAAAA,eAAe,EAAE,yBAAAC,IAAI;AACnB,YAAI,OAAOnB,SAAP,KAAqB,UAAzB,EAAqC;AACnCA,UAAAA,SAAS,CAACmB,IAAD,CAAT;AACD;AACF,OAZgD;AAajDC,MAAAA,aAAa,EAAE,uBAAAC,KAAK;AAClB,YAAI,OAAOtB,OAAP,KAAmB,UAAvB,EAAmC;AACjC,cAAIsB,KAAK,KAAK,IAAd,EAAoB;AAClBtB,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD,WAFD,MAEO;AACL;AACA;AACA,gBAAMuB,IAAI,GAAG5B,QAAQ,CAAC6B,KAAT,CAAeF,KAAK,CAACG,SAArB,EAAgCH,KAAK,CAACI,OAAtC,CAAb;AAEA1B,YAAAA,OAAO,cACFsB,KADE;AAELC,cAAAA,IAAI,EAAJA;AAFK,eAAP;AAID;AACF;;AAED,YAAI,CAACD,KAAL,EAAY;AACV,iBAAO,IAAP;AACD;AAGD;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAO,IAAP;AACD;AAjDgD,KAAnC,CAAhB;AAmDA;AACD,GA3DD,EA2DG,CAACK,IAAI,CAACC,SAAL,CAAejC,QAAf,CAAD,CA3DH;AA4DA;;AAEAQ,EAAAA,KAAK,CAACE,SAAN,CAAgB;AACd,QAAIH,KAAK,IAAIA,KAAK,CAACS,OAAnB,EAA4B;AAC1B,UAAIjB,SAAJ,EAAe;AACbQ,QAAAA,KAAK,CAACS,OAAN,CAAckB,KAAd;AACD,OAFD,MAEO;AACL3B,QAAAA,KAAK,CAACS,OAAN,CAAcmB,IAAd;AACD;AACF;AACF,GARD,EAQG,CAACpC,SAAD,CARH;AAUA,SACES,mBAAA,eAAA,MAAA,EACEA,mBAAA,MAAA;AACE4B,IAAAA,EAAE,EAAC;AACH;AACAjC,IAAAA,SAAS,EAAEA,SAAS,IAAI;GAH1B,CADF,EAOEK,mBAAA,QAAA,MAAA,kMAPF,CADF;AAqBD,CAjHD;;;;"}